{"remainingRequest":"/Users/chengsun/Desktop/sunc4127.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/chengsun/Desktop/sunc4127.github.io/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chengsun/Desktop/sunc4127.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chengsun/Desktop/sunc4127.github.io/node_modules/vuepress-theme-vdoing/components/ArticleInfo.vue?vue&type=template&id=424c3eec&scoped=true&","dependencies":[{"path":"/Users/chengsun/Desktop/sunc4127.github.io/node_modules/vuepress-theme-vdoing/components/ArticleInfo.vue","mtime":1636678369438},{"path":"/Users/chengsun/Desktop/sunc4127.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1636678368190},{"path":"/Users/chengsun/Desktop/sunc4127.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1636678368990},{"path":"/Users/chengsun/Desktop/sunc4127.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1636678368190},{"path":"/Users/chengsun/Desktop/sunc4127.github.io/node_modules/vue-loader/lib/index.js","mtime":1636678368629}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
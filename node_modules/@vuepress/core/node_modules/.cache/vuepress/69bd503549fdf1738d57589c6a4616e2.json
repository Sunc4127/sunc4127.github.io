{"remainingRequest":"/Users/chengsun/Desktop/sunc4127.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chengsun/Desktop/sunc4127.github.io/node_modules/vuepress-plugin-comment/Comment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chengsun/Desktop/sunc4127.github.io/node_modules/vuepress-plugin-comment/Comment.vue","mtime":1636678368054},{"path":"/Users/chengsun/Desktop/sunc4127.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1636678368190},{"path":"/Users/chengsun/Desktop/sunc4127.github.io/node_modules/babel-loader/lib/index.js","mtime":1636678368315},{"path":"/Users/chengsun/Desktop/sunc4127.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1636678368190},{"path":"/Users/chengsun/Desktop/sunc4127.github.io/node_modules/vue-loader/lib/index.js","mtime":1636678368629}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCB7CiAgcHJvdmlkZXIsCiAgcmVuZGVyQ29uZmlnLAogIGxvYWRTY3JpcHQsCn0gZnJvbSAnLi91dGlsJwoKY29uc3QgY29tbWVudERvbUlEID0gJ3Z1ZXByZXNzLXBsdWdpbi1jb21tZW50JyAKbGV0IHRpbWVyID0gbnVsbAoKZXhwb3J0IGRlZmF1bHQgewogIG1vdW50ZWQgKCkgewogICAgdGltZXIgPSBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgY29uc3QgZnJvbnRtYXR0ZXIgPSB7CiAgICAgICAgdG86IHt9LAogICAgICAgIGZyb206IHt9LAogICAgICAgIC4uLnRoaXMuJGZyb250bWF0dGVyCiAgICAgIH0KICAgICAgY2xlYXIoKSAmJiBuZWVkQ29tbWVudChmcm9udG1hdHRlcikgJiYgcmVuZGVyQ29tbWVudChmcm9udG1hdHRlcikKICAgIH0sIDEwMDApCgogICAgdGhpcy4kcm91dGVyLmFmdGVyRWFjaCgodG8sIGZyb20pID0+IHsKICAgICAgaWYgKHRvICYmIGZyb20gJiYgdG8ucGF0aCA9PT0gZnJvbS5wYXRoKSB7CiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgY29uc3QgZnJvbnRtYXR0ZXIgPSB7CiAgICAgICAgdG8sCiAgICAgICAgZnJvbSwKICAgICAgICAuLi50aGlzLiRmcm9udG1hdHRlcgogICAgICB9CiAgICAgIGNsZWFyKCkgJiYgbmVlZENvbW1lbnQoZnJvbnRtYXR0ZXIpICYmIHJlbmRlckNvbW1lbnQoZnJvbnRtYXR0ZXIpCiAgICB9KQogIH0KfQoKLyoqCiAqIENsZWFyIGxhc3QgcGFnZSBjb21tZW50IGRvbQogKi8KZnVuY3Rpb24gY2xlYXIgKGZyb250bWF0dGVyKSB7CiAgc3dpdGNoIChDT01NRU5UX0NIT09TRU4pIHsKICAgIGNhc2UgJ2dpdGFsayc6IAogICAgICByZXR1cm4gcHJvdmlkZXIuZ2l0YWxrLmNsZWFyKGNvbW1lbnREb21JRCkKICAgIGNhc2UgJ3ZhbGluZSc6IAogICAgICBsZXQgZWwgPSBDT01NRU5UX09QVElPTlMuZWwgfHwgY29tbWVudERvbUlECiAgICAgIGlmIChlbC5zdGFydHNXaXRoKCcjJykpIHsKICAgICAgICBlbCA9IGVsLnNsaWNlKDEpCiAgICAgIH0KICAgICAgY29uc29sZS5sb2coZWwpCiAgICAgIHJldHVybiBwcm92aWRlci52YWxpbmUuY2xlYXIoZWwpCiAgICBkZWZhdWx0OiByZXR1cm4gZmFsc2UKICB9Cn0KCi8qKgogKiBDaGVjayBpZiBjdXJyZW50IHBhZ2UgbmVlZHMgcmVuZGVyIGNvbW1lbnQKICovCmZ1bmN0aW9uIG5lZWRDb21tZW50IChmcm9udG1hdHRlcikgewogIHJldHVybiBmcm9udG1hdHRlci5jb21tZW50ICE9PSBmYWxzZSAmJiBmcm9udG1hdHRlci5jb21tZW50cyAhPT0gZmFsc2UKfQoKLyoqCiAqIFJlbmRlciBjb21tZW50IGRvbSBhbmQgYXBwZW5kIGl0IHRvIGNvbnRhaW5lcgogKi8KZnVuY3Rpb24gcmVuZGVyQ29tbWVudCAoZnJvbnRtYXR0ZXIpIHsKICBjbGVhclRpbWVvdXQodGltZXIpCgogIGNvbnN0IHBhcmVudERPTSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoQ09NTUVOVF9DT05UQUlORVIpCiAgaWYgKCFwYXJlbnRET00pIHsKICAgIHRpbWVyID0gc2V0VGltZW91dCgoKSA9PiByZW5kZXJDb21tZW50KGZyb250bWF0dGVyKSwgMjAwKQogICAgcmV0dXJuIAogIH0KCiAgc3dpdGNoIChDT01NRU5UX0NIT09TRU4pIHsKICAgIGNhc2UgJ2dpdGFsayc6IAogICAgICByZXR1cm4gcHJvdmlkZXIuZ2l0YWxrLnJlbmRlcihmcm9udG1hdHRlciwgY29tbWVudERvbUlEKQogICAgY2FzZSAndmFsaW5lJzogCiAgICAgIGxldCBlbCA9IENPTU1FTlRfT1BUSU9OUy5lbCB8fCBjb21tZW50RG9tSUQKICAgICAgaWYgKGVsLnN0YXJ0c1dpdGgoJyMnKSkgewogICAgICAgIGVsID0gZWwuc2xpY2UoMSkKICAgICAgfQogICAgICByZXR1cm4gcHJvdmlkZXIudmFsaW5lLnJlbmRlcihmcm9udG1hdHRlciwgZWwpCiAgICBkZWZhdWx0OiByZXR1cm4gZmFsc2UKICB9Cn0K"},{"version":3,"sources":["Comment.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Comment.vue","sourceRoot":"node_modules/vuepress-plugin-comment","sourcesContent":["<template>\n  <div></div>\n</template>\n\n<script>\nimport {\n  provider,\n  renderConfig,\n  loadScript,\n} from './util'\n\nconst commentDomID = 'vuepress-plugin-comment' \nlet timer = null\n\nexport default {\n  mounted () {\n    timer = setTimeout(() => {\n      const frontmatter = {\n        to: {},\n        from: {},\n        ...this.$frontmatter\n      }\n      clear() && needComment(frontmatter) && renderComment(frontmatter)\n    }, 1000)\n\n    this.$router.afterEach((to, from) => {\n      if (to && from && to.path === from.path) {\n        return\n      }\n      const frontmatter = {\n        to,\n        from,\n        ...this.$frontmatter\n      }\n      clear() && needComment(frontmatter) && renderComment(frontmatter)\n    })\n  }\n}\n\n/**\n * Clear last page comment dom\n */\nfunction clear (frontmatter) {\n  switch (COMMENT_CHOOSEN) {\n    case 'gitalk': \n      return provider.gitalk.clear(commentDomID)\n    case 'valine': \n      let el = COMMENT_OPTIONS.el || commentDomID\n      if (el.startsWith('#')) {\n        el = el.slice(1)\n      }\n      console.log(el)\n      return provider.valine.clear(el)\n    default: return false\n  }\n}\n\n/**\n * Check if current page needs render comment\n */\nfunction needComment (frontmatter) {\n  return frontmatter.comment !== false && frontmatter.comments !== false\n}\n\n/**\n * Render comment dom and append it to container\n */\nfunction renderComment (frontmatter) {\n  clearTimeout(timer)\n\n  const parentDOM = document.querySelector(COMMENT_CONTAINER)\n  if (!parentDOM) {\n    timer = setTimeout(() => renderComment(frontmatter), 200)\n    return \n  }\n\n  switch (COMMENT_CHOOSEN) {\n    case 'gitalk': \n      return provider.gitalk.render(frontmatter, commentDomID)\n    case 'valine': \n      let el = COMMENT_OPTIONS.el || commentDomID\n      if (el.startsWith('#')) {\n        el = el.slice(1)\n      }\n      return provider.valine.render(frontmatter, el)\n    default: return false\n  }\n}\n</script>\n"]}]}
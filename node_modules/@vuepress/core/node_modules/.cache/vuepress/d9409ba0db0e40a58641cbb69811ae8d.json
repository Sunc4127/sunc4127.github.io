{"remainingRequest":"/Users/chengsun/Desktop/sunc4127.github.io/vuepress-theme-vdoing/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/chengsun/Desktop/sunc4127.github.io/vuepress-theme-vdoing/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chengsun/Desktop/sunc4127.github.io/vuepress-theme-vdoing/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chengsun/Desktop/sunc4127.github.io/vuepress-theme-vdoing/node_modules/vuepress-theme-vdoing/components/PostList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/chengsun/Desktop/sunc4127.github.io/vuepress-theme-vdoing/node_modules/vuepress-theme-vdoing/components/PostList.vue","mtime":1636678369680},{"path":"/Users/chengsun/Desktop/sunc4127.github.io/vuepress-theme-vdoing/node_modules/cache-loader/dist/cjs.js","mtime":1636678368190},{"path":"/Users/chengsun/Desktop/sunc4127.github.io/vuepress-theme-vdoing/node_modules/babel-loader/lib/index.js","mtime":1636678368315},{"path":"/Users/chengsun/Desktop/sunc4127.github.io/vuepress-theme-vdoing/node_modules/cache-loader/dist/cjs.js","mtime":1636678368190},{"path":"/Users/chengsun/Desktop/sunc4127.github.io/vuepress-theme-vdoing/node_modules/vue-loader/lib/index.js","mtime":1636678368629}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2NoZW5nc3VuL0Rlc2t0b3Avc3VuYzQxMjcuZ2l0aHViLmlvL3Z1ZXByZXNzLXRoZW1lLXZkb2luZy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBjYXRlZ29yeTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICJkZWZhdWx0IjogJycKICAgIH0sCiAgICB0YWc6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAiZGVmYXVsdCI6ICcnCiAgICB9LAogICAgY3VycmVudFBhZ2U6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICAiZGVmYXVsdCI6IDEKICAgIH0sCiAgICBwZXJQYWdlOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgImRlZmF1bHQiOiAxMAogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNvcnRQb3N0czogW10sCiAgICAgIHBvc3RMaXN0T2Zmc2V0VG9wOiAwCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuc2V0UG9zdHMoKTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7Ly8gdGhpcy5wb3N0TGlzdE9mZnNldFRvcCA9IHRoaXMuZ2V0RWxlbWVudFRvUGFnZVRvcCh0aGlzLiRyZWZzLnBvc3RMaXN0KSAtIDI0MAogIH0sCiAgd2F0Y2g6IHsKICAgIGN1cnJlbnRQYWdlOiBmdW5jdGlvbiBjdXJyZW50UGFnZSgpIHsKICAgICAgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5LnAgIT0gdGhpcy5jdXJyZW50UGFnZSkgewogICAgICAgIC8vIOatpOWIpOaWremYsuatoua3u+WKoOebuOWQjOeahOi3r+eUseS/oeaBr++8iOWmgua1j+iniOWZqOWbnumAgOaXtuinpuWPkeeahO+8iQogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICAgIHF1ZXJ5OiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRoaXMuJHJvdXRlLnF1ZXJ5KSwge30sIHsKICAgICAgICAgICAgcDogdGhpcy5jdXJyZW50UGFnZQogICAgICAgICAgfSkKICAgICAgICB9KTsKICAgICAgfSAvLyBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgLy8gICB3aW5kb3cuc2Nyb2xsVG8oeyB0b3A6IHRoaXMucG9zdExpc3RPZmZzZXRUb3AgfSkgLy8gYmVoYXZpb3I6ICdzbW9vdGgnCiAgICAgIC8vIH0sMCkKCgogICAgICB0aGlzLnNldFBvc3RzKCk7CiAgICB9LAogICAgY2F0ZWdvcnk6IGZ1bmN0aW9uIGNhdGVnb3J5KCkgewogICAgICB0aGlzLnNldFBvc3RzKCk7CiAgICB9LAogICAgdGFnOiBmdW5jdGlvbiB0YWcoKSB7CiAgICAgIHRoaXMuc2V0UG9zdHMoKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHNldFBvc3RzOiBmdW5jdGlvbiBzZXRQb3N0cygpIHsKICAgICAgdmFyIGN1cnJlbnRQYWdlID0gdGhpcy5jdXJyZW50UGFnZTsKICAgICAgdmFyIHBlclBhZ2UgPSB0aGlzLnBlclBhZ2U7CiAgICAgIHZhciBwb3N0cyA9IFtdOwoKICAgICAgaWYgKHRoaXMuY2F0ZWdvcnkpIHsKICAgICAgICBwb3N0cyA9IHRoaXMuJGdyb3VwUG9zdHMuY2F0ZWdvcmllc1t0aGlzLmNhdGVnb3J5XTsKICAgICAgfSBlbHNlIGlmICh0aGlzLnRhZykgewogICAgICAgIHBvc3RzID0gdGhpcy4kZ3JvdXBQb3N0cy50YWdzW3RoaXMudGFnXTsKICAgICAgfSBlbHNlIHsKICAgICAgICBwb3N0cyA9IHRoaXMuJHNvcnRQb3N0czsKICAgICAgfQoKICAgICAgdGhpcy5zb3J0UG9zdHMgPSBwb3N0cy5zbGljZSgoY3VycmVudFBhZ2UgLSAxKSAqIHBlclBhZ2UsIGN1cnJlbnRQYWdlICogcGVyUGFnZSk7CiAgICB9IC8vIGdldEVsZW1lbnRUb1BhZ2VUb3AoZWwpIHsKICAgIC8vICAgaWYoZWwgJiYgZWwucGFyZW50RWxlbWVudCkgewogICAgLy8gICAgIHJldHVybiB0aGlzLmdldEVsZW1lbnRUb1BhZ2VUb3AoZWwucGFyZW50RWxlbWVudCkgKyBlbC5vZmZzZXRUb3AKICAgIC8vICAgfQogICAgLy8gICByZXR1cm4gZWwub2Zmc2V0VG9wCiAgICAvLyB9CgogIH0KfTs="},{"version":3,"sources":["/Users/chengsun/Desktop/sunc4127.github.io/vuepress-theme-vdoing/node_modules/vuepress-theme-vdoing/components/PostList.vue"],"names":["props","category","type","String","tag","currentPage","Number","perPage","data","sortPosts","postListOffsetTop","created","setPosts","mounted","watch","$route","query","p","$router","push","methods","posts","$groupPosts","categories","tags","$sortPosts","slice"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,eAAe;AACbA,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAEC,MADE;AAER,iBAAS;AAFD,KADL;AAKLC,IAAAA,GAAG,EAAE;AACHF,MAAAA,IAAI,EAAEC,MADH;AAEH,iBAAS;AAFN,KALA;AASLE,IAAAA,WAAW,EAAE;AACXH,MAAAA,IAAI,EAAEI,MADK;AAEX,iBAAS;AAFE,KATR;AAaLC,IAAAA,OAAO,EAAE;AACPL,MAAAA,IAAI,EAAEI,MADC;AAEP,iBAAS;AAFF;AAbJ,GADM;AAmBbE,EAAAA,IAnBa,kBAmBL;AACN,WAAO;AACLC,MAAAA,SAAS,EAAE,EADN;AAELC,MAAAA,iBAAiB,EAAE;AAFd,KAAP;AAID,GAxBY;AAyBbC,EAAAA,OAzBa,qBAyBF;AACT,SAAKC,QAAL;AACD,GA3BY;AA4BbC,EAAAA,OA5Ba,qBA4BF,CACT;AACD,GA9BY;AA+BbC,EAAAA,KAAK,EAAE;AACLT,IAAAA,WADK,yBACU;AACb,UAAI,KAAKU,MAAL,CAAYC,KAAZ,CAAkBC,CAAlB,IAAuB,KAAKZ,WAAhC,EAA6C;AAAE;AAC7C,aAAKa,OAAL,CAAaC,IAAb,CAAkB;AAChBH,UAAAA,KAAK,kCACA,KAAKD,MAAL,CAAYC,KADZ;AAEHC,YAAAA,CAAC,EAAE,KAAKZ;AAFL;AADW,SAAlB;AAMD,OARY,CASb;AACA;AACA;;;AACA,WAAKO,QAAL;AACD,KAdI;AAeLX,IAAAA,QAfK,sBAeO;AACV,WAAKW,QAAL;AACD,KAjBI;AAkBLR,IAAAA,GAlBK,iBAkBE;AACL,WAAKQ,QAAL;AACD;AApBI,GA/BM;AAqDbQ,EAAAA,OAAO,EAAE;AACPR,IAAAA,QADO,sBACK;AACV,UAAMP,WAAW,GAAG,KAAKA,WAAzB;AACA,UAAME,OAAO,GAAG,KAAKA,OAArB;AAEA,UAAIc,KAAK,GAAG,EAAZ;;AACA,UAAI,KAAKpB,QAAT,EAAmB;AACjBoB,QAAAA,KAAK,GAAG,KAAKC,WAAL,CAAiBC,UAAjB,CAA4B,KAAKtB,QAAjC,CAAR;AACD,OAFD,MAEO,IAAI,KAAKG,GAAT,EAAc;AACnBiB,QAAAA,KAAK,GAAG,KAAKC,WAAL,CAAiBE,IAAjB,CAAsB,KAAKpB,GAA3B,CAAR;AACD,OAFM,MAEA;AACLiB,QAAAA,KAAK,GAAG,KAAKI,UAAb;AACD;;AAED,WAAKhB,SAAL,GAAiBY,KAAK,CAACK,KAAN,CAAY,CAACrB,WAAW,GAAG,CAAf,IAAoBE,OAAhC,EAAyCF,WAAW,GAAGE,OAAvD,CAAjB;AACD,KAfM,CAgBP;AACA;AACA;AACA;AACA;AACA;;AArBO;AArDI,CAAf","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: {\n    category: {\n      type: String,\n      default: ''\n    },\n    tag: {\n      type: String,\n      default: ''\n    },\n    currentPage: {\n      type: Number,\n      default: 1\n    },\n    perPage: {\n      type: Number,\n      default: 10\n    }\n  },\n  data () {\n    return {\n      sortPosts: [],\n      postListOffsetTop: 0\n    }\n  },\n  created () {\n    this.setPosts()\n  },\n  mounted () {\n    // this.postListOffsetTop = this.getElementToPageTop(this.$refs.postList) - 240\n  },\n  watch: {\n    currentPage () {\n      if (this.$route.query.p != this.currentPage) { // 此判断防止添加相同的路由信息（如浏览器回退时触发的）\n        this.$router.push({\n          query: {\n            ...this.$route.query,\n            p: this.currentPage\n          }\n        })\n      }\n      // setTimeout(() => {\n      //   window.scrollTo({ top: this.postListOffsetTop }) // behavior: 'smooth'\n      // },0)\n      this.setPosts()\n    },\n    category () {\n      this.setPosts()\n    },\n    tag () {\n      this.setPosts()\n    }\n  },\n  methods: {\n    setPosts () {\n      const currentPage = this.currentPage\n      const perPage = this.perPage\n\n      let posts = []\n      if (this.category) {\n        posts = this.$groupPosts.categories[this.category]\n      } else if (this.tag) {\n        posts = this.$groupPosts.tags[this.tag]\n      } else {\n        posts = this.$sortPosts\n      }\n\n      this.sortPosts = posts.slice((currentPage - 1) * perPage, currentPage * perPage)\n    },\n    // getElementToPageTop(el) {\n    //   if(el && el.parentElement) {\n    //     return this.getElementToPageTop(el.parentElement) + el.offsetTop\n    //   }\n    //   return el.offsetTop\n    // }\n  }\n}\n"]}]}
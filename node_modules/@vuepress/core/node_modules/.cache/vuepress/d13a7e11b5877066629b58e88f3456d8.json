{"remainingRequest":"/Users/chengsun/Desktop/sunc4127.github.io/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/chengsun/Desktop/sunc4127.github.io/node_modules/vuepress-plugin-demo-block/lib/clientRootMixin.js","dependencies":[{"path":"/Users/chengsun/Desktop/sunc4127.github.io/node_modules/vuepress-plugin-demo-block/lib/clientRootMixin.js","mtime":1636678368199},{"path":"/Users/chengsun/Desktop/sunc4127.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1636678368190},{"path":"/Users/chengsun/Desktop/sunc4127.github.io/node_modules/babel-loader/lib/index.js","mtime":1636678368315}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
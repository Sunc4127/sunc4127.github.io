(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{437:function(t,a,e){"use strict";e.r(a);var v=e(3),n=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("nav",{staticClass:"table-of-contents"},[a("ol",[a("li",[a("a",{attrs:{href:"#java-%E4%B8%BB%E8%A6%81%E7%89%B9%E6%80%A7"}},[t._v(" Java 主要特性")]),a("ol",[a("li",[a("a",{attrs:{href:"#java-%E8%AF%AD%E6%B3%95%E8%A7%84%E8%8C%83"}},[t._v(" Java 语法规范")])]),a("li",[a("a",{attrs:{href:"#%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95"}},[t._v(" 基本语法")])]),a("li",[a("a",{attrs:{href:"#java-%E6%A0%87%E8%AF%86%E7%AC%A6"}},[t._v(" Java 标识符")])]),a("li",[a("a",{attrs:{href:"#java%E4%BF%AE%E9%A5%B0%E7%AC%A6"}},[t._v(" Java修饰符")])]),a("li",[a("a",{attrs:{href:"#java-%E5%8F%98%E9%87%8F"}},[t._v(" Java 变量")])]),a("li",[a("a",{attrs:{href:"#java-%E6%95%B0%E7%BB%84"}},[t._v(" Java 数组")])]),a("li",[a("a",{attrs:{href:"#java-%E6%9E%9A%E4%B8%BE-%EF%BC%88enum%EF%BC%89"}},[t._v(" Java 枚举 （enum）")])]),a("li",[a("a",{attrs:{href:"#java-%E5%85%B3%E9%94%AE%E5%AD%97"}},[t._v(" Java 关键字")])]),a("li",[a("a",{attrs:{href:"#java%E6%B3%A8%E9%87%8A"}},[t._v(" Java注释")])]),a("li",[a("a",{attrs:{href:"#java-%E7%A9%BA%E8%A1%8C"}},[t._v(" Java 空行")])]),a("li",[a("a",{attrs:{href:"#%E7%BB%A7%E6%89%BF"}},[t._v(" 继承")])]),a("li",[a("a",{attrs:{href:"#%E6%8E%A5%E5%8F%A3"}},[t._v(" 接口")])]),a("li",[a("a",{attrs:{href:"#java-%E6%BA%90%E7%A8%8B%E5%BA%8F%E4%B8%8E%E7%BC%96%E8%AF%91%E5%9E%8B%E8%BF%90%E8%A1%8C%E5%8C%BA%E5%88%AB"}},[t._v(" Java 源程序与编译型运行区别")])])])])])]),a("h1",{attrs:{id:"java-主要特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-主要特性"}},[t._v("#")]),t._v(" Java 主要特性")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Java语言是简单的：")]),t._v(" "),a("p",[t._v("Java语言的语法与C语言和C++语言很接近，使得大多数程序员很容易学习和使用。另一方面，Java丢弃了C++中很少使用的、很难理解的、令人迷惑的那些特性，如操作符重载、多继承、自动的强制类型转换。特别地，Java语言不使用指针，而是引用。并提供了自动的废料收集，使得程序员不必为内存管理而担忧。")])]),t._v(" "),a("li",[a("p",[t._v("Java语言是面向对象的：")]),t._v(" "),a("p",[t._v("Java语言提供类、接口和继承等面向对象的特性，为了简单起见，只支持类之间的单继承，但支持接口之间的多继承，并支持类与接口之间的实现机制（关键字为implements）。Java语言全面支持动态绑定，而C++语言只对虚函数使用动态绑定。总之，Java语言是一个纯的面向对象程序设计语言。")])]),t._v(" "),a("li",[a("p",[t._v("Java语言是分布式的：")]),t._v(" "),a("p",[t._v("Java语言支持Internet应用的开发，在基本的Java应用编程接口中有一个网络应用编程接口（java net），它提供了用于网络应用编程的类库，包括URL、URLConnection、Socket、ServerSocket等。Java的RMI（远程方法激活）机制也是开发分布式应用的重要手段。")])]),t._v(" "),a("li",[a("p",[t._v("Java语言是健壮的：")]),t._v(" "),a("p",[t._v("Java的强类型机制、异常处理、垃圾的自动收集等是Java程序健壮性的重要保证。对指针的丢弃是Java的明智选择。Java的安全检查机制使得Java更具健壮性。")])]),t._v(" "),a("li",[a("p",[t._v("Java语言是安全的：")]),t._v(" "),a("p",[t._v("Java通常被用在网络环境中，为此，Java提供了一个安全机制以防恶意代码的攻击。除了Java语言具有的许多安全特性以外，Java对通过网络下载的类具有一个安全防范机制（类ClassLoader），如分配不同的名字空间以防替代本地的同名类、字节代码检查，并提供安全管理机制（类SecurityManager）让Java应用设置安全哨兵。")])]),t._v(" "),a("li",[a("p",[t._v("Java语言是体系结构中立的：")]),t._v(" "),a("p",[t._v("Java程序（后缀为java的文件）在Java平台上被编译为体系结构中立的字节码格式（后缀为class的文件），然后可以在实现这个Java平台的任何系统中运行。这种途径适合于异构的网络环境和软件的分发。")])]),t._v(" "),a("li",[a("p",[t._v("Java语言是可移植的：")]),t._v(" "),a("p",[t._v("这种可移植性来源于体系结构中立性，另外，Java还严格规定了各个基本数据类型的长度。Java系统本身也具有很强的可移植性，Java编译器是用Java实现的，Java的运行环境是用ANSI C实现的。")])]),t._v(" "),a("li",[a("p",[t._v("Java语言是解释型的：")]),t._v(" "),a("p",[t._v("如前所述，Java程序在Java平台上被编译为字节码格式，然后可以在实现这个Java平台的任何系统中运行。在运行时，Java平台中的Java解释器对这些字节码进行解释执行，执行过程中需要的类在联接阶段被载入到运行环境中。")])]),t._v(" "),a("li",[a("p",[t._v("Java是高性能的：")]),t._v(" "),a("p",[t._v("与那些解释型的高级脚本语言相比，Java的确是高性能的。事实上，Java的运行速度随着JIT(Just-In-Time）编译器技术的发展越来越接近于C++。")])]),t._v(" "),a("li",[a("p",[t._v("Java语言是多线程的：")]),t._v(" "),a("p",[t._v("在Java语言中，线程是一种特殊的对象，它必须由Thread类或其子（孙）类来创建。通常有两种方法来创建线程：其一，使用型构为Thread(Runnable)的构造子类将一个实现了Runnable接口的对象包装成一个线程，其二，从Thread类派生出子类并重写run方法，使用该子类创建的对象即为线程。值得注意的是Thread类已经实现了Runnable接口，因此，任何一个线程均有它的run方法，而run方法中包含了线程所要运行的代码。线程的活动由一组方法来控制。Java语言支持多个线程的同时执行，并提供多线程之间的同步机制（关键字为synchronized）。")])]),t._v(" "),a("li",[a("p",[t._v("Java语言是动态的：")]),t._v(" "),a("p",[t._v("Java语言的设计目标之一是适应于动态变化的环境。Java程序需要的类能够动态地被载入到运行环境，也可以通过网络来载入所需要的类。这也有利于软件的升级。另外，Java中的类有一个运行时刻的表示，能进行运行时刻的类型检查。")])])]),t._v(" "),a("h2",{attrs:{id:"java-语法规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-语法规范"}},[t._v("#")]),t._v(" Java 语法规范")]),t._v(" "),a("p",[t._v("Java是面向对象的编程语言，一个 Java 程序可以认为是一系列对象的集合，而这些对象通过调用彼此的方法来协同工作。下面简要介绍下类、对象、方法和实例变量的概念。")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("对象")]),t._v(" (object)：对象是类的一个实例，有状态和行为。例如，一条狗是一个对象，它的状态有：颜色、名字、品种；行为有：摇尾巴、叫、吃等。")]),t._v(" "),a("li",[a("strong",[t._v("类")]),t._v(" (class)：类是一个模板，它描述一类对象的行为和状态。")]),t._v(" "),a("li",[a("strong",[t._v("方法")]),t._v(" (function)：方法就是行为，一个类可以有很多方法。逻辑运算、数据修改以及所有动作都是在方法中完成的。")]),t._v(" "),a("li",[a("strong",[t._v("实例变量")]),t._v("(variable)：每个对象都有独特的实例变量，对象的状态由这些实例变量的值决定。")])]),t._v(" "),a("h2",{attrs:{id:"基本语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[t._v("#")]),t._v(" 基本语法")]),t._v(" "),a("p",[t._v("编写 Java 程序时，应注意以下几点：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("大小写敏感")]),t._v("：Java 是大小写敏感的，这就意味着标识符 Hello 与 hello 是不同的。")]),t._v(" "),a("li",[a("strong",[t._v("类名")]),t._v("：对于所有的类来说，类名的首字母应该大写。如果类名由若干单词组成，那么每个单词的首字母应该大写，例如 "),a("strong",[t._v("FirstDemo")]),t._v(" 。")]),t._v(" "),a("li",[a("strong",[t._v("方法名")]),t._v("：所有的方法名都应该以小写字母开头。如果方法名含有若干单词，则后面的每个单词首字母大写。")]),t._v(" "),a("li",[a("strong",[t._v("源文件名")]),t._v("：源文件名必须和类名相同。当保存文件的时候，你应该使用类名作为文件名保存（切记 Java 是大小写敏感的），文件名的后缀为 "),a("strong",[t._v(".java")]),t._v("。（如果文件名和类名不相同则会导致编译错误）。")]),t._v(" "),a("li",[a("strong",[t._v("主方法入口")]),t._v("：所有的 Java 程序由 "),a("strong",[t._v("public static void main(String[] args)")]),t._v(" 方法开始执行。")])]),t._v(" "),a("h2",{attrs:{id:"java-标识符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-标识符"}},[t._v("#")]),t._v(" Java 标识符")]),t._v(" "),a("p",[t._v("Java 所有的组成部分都需要名字。类名、变量名以及方法名都被称为标识符。")]),t._v(" "),a("p",[t._v("关于 Java 标识符，有以下几点需要注意：")]),t._v(" "),a("ul",[a("li",[t._v("所有的标识符都应该以字母（A-Z 或者 a-z）,美元符（$）、或者下划线（_）开始")]),t._v(" "),a("li",[t._v("首字符之后可以是字母（A-Z 或者 a-z）,美元符（$）、下划线（_）或数字的任何字符组合")]),t._v(" "),a("li",[t._v("关键字不能用作标识符")]),t._v(" "),a("li",[t._v("标识符是大小写敏感的")]),t._v(" "),a("li",[t._v("合法标识符举例：age、$salary、_value、__1_value")]),t._v(" "),a("li",[t._v("非法标识符举例：123abc、-salary")])]),t._v(" "),a("h2",{attrs:{id:"java修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java修饰符"}},[t._v("#")]),t._v(" Java修饰符")]),t._v(" "),a("p",[t._v("像其他语言一样，Java可以使用修饰符来修饰类中方法和属性。主要有两类修饰符：")]),t._v(" "),a("ul",[a("li",[t._v("访问控制修饰符 : default, public , protected, private")]),t._v(" "),a("li",[t._v("非访问控制修饰符 : final, abstract, static, synchronized")])]),t._v(" "),a("p",[t._v("在后面的章节中我们会深入讨论 Java 修饰符。")]),t._v(" "),a("h2",{attrs:{id:"java-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-变量"}},[t._v("#")]),t._v(" Java 变量")]),t._v(" "),a("p",[t._v("Java 中主要有如下几种类型的变量")]),t._v(" "),a("ul",[a("li",[t._v("局部变量")]),t._v(" "),a("li",[t._v("类变量（静态变量）")]),t._v(" "),a("li",[t._v("成员变量（非静态变量）")])]),t._v(" "),a("h2",{attrs:{id:"java-数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-数组"}},[t._v("#")]),t._v(" Java 数组")]),t._v(" "),a("p",[t._v("数组是储存在堆上的对象，可以保存多个同类型变量。在后面的章节中，我们将会学到如何声明、构造以及初始化一个数组。")]),t._v(" "),a("h2",{attrs:{id:"java-枚举-enum"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-枚举-enum"}},[t._v("#")]),t._v(" Java 枚举 （enum）")]),t._v(" "),a("p",[t._v("Java 5.0引入了枚举，枚举限制变量只能是预先设定好的值。使用枚举可以减少代码中的 bug。")]),t._v(" "),a("p",[t._v("例如，我们为果汁店设计一个程序，它将限制果汁为小杯、中杯、大杯。这就意味着它不允许顾客点除了这三种尺寸外的果汁。")]),t._v(" "),a("h2",{attrs:{id:"java-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-关键字"}},[t._v("#")]),t._v(" Java 关键字")]),t._v(" "),a("p",[t._v("下面列出了 Java 关键字。这些关键字不能用于常量、变量、和任何标识符的名称。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("类别")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("关键字")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("访问控制")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("private")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("私有的")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("protected")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("受保护的")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("public")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("公共的")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("类、方法和变量修饰符")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("abstract")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("声明抽象")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("class")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("类")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("extends")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("扩充,继承")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("final")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("最终值,不可改变的")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("implements")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("实现（接口）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("interface")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("接口")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("native")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("本地，原生方法（非 Java 实现）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("new")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("新,创建")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("static")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("静态")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("strictfp")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("严格,精准")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("synchronized")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("线程,同步")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("transient")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("短暂")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("volatile")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("易失")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("程序控制语句")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("break")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("跳出循环")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("case")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("定义一个值以供 switch 选择")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("continue")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("继续")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("default")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("默认")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("do")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("运行")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("else")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("否则")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("for")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("循环")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("if")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("如果")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("instanceof")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("实例")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("return")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("返回")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("switch")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("根据值选择执行")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("while")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("循环")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("错误处理")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("assert")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("断言表达式是否为真")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("catch")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("捕捉异常")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("finally")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("有没有异常都执行")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("throw")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("抛出一个异常对象")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("throws")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("声明一个异常可能被抛出")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("try")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("捕获异常")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("包相关")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("import")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("引入")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("package")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("包")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("基本类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("布尔型")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("byte")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字节型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("char")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("字符型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("双精度浮点")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("单精度浮点")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("整型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("长整型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("short")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("短整型")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("变量引用")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("super")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("父类,超类")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("this")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("本类")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("void")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("无返回值")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("保留关键字")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("goto")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是关键字，但不能使用")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("const")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("是关键字，但不能使用")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("null")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("空")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})])])]),t._v(" "),a("h2",{attrs:{id:"java注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java注释"}},[t._v("#")]),t._v(" Java注释")]),t._v(" "),a("p",[t._v("类似于 C/C++、Java 也支持单行以及多行注释。注释中的字符将被 Java 编译器忽略。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloWorld")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这是第一个Java程序\n    * 它将打印Hello World\n    * 这是一个多行注释的示例\n    */")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这是单行注释的示例")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这个也是单行注释的示例 */")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h2",{attrs:{id:"java-空行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-空行"}},[t._v("#")]),t._v(" Java 空行")]),t._v(" "),a("p",[t._v("空白行或者有注释的行，Java 编译器都会忽略掉。")]),t._v(" "),a("h2",{attrs:{id:"继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#继承"}},[t._v("#")]),t._v(" 继承")]),t._v(" "),a("p",[t._v("在 Java 中，一个类可以由其他类派生。如果你要创建一个类，而且已经存在一个类具有你所需要的属性或方法，那么你可以将新创建的类继承该类。")]),t._v(" "),a("p",[t._v("利用继承的方法，可以重用已存在类的方法和属性，而不用重写这些代码。被继承的类称为超类（super class），派生类称为子类（subclass）。")]),t._v(" "),a("h2",{attrs:{id:"接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#接口"}},[t._v("#")]),t._v(" 接口")]),t._v(" "),a("p",[t._v("在 Java 中，接口可理解为对象间相互通信的协议。接口在继承中扮演着很重要的角色。")]),t._v(" "),a("p",[t._v("接口只定义派生要用到的方法，但是方法的具体实现完全取决于派生类。")]),t._v(" "),a("h2",{attrs:{id:"java-源程序与编译型运行区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-源程序与编译型运行区别"}},[t._v("#")]),t._v(" Java 源程序与编译型运行区别")]),t._v(" "),a("p",[t._v("如下图所示：")]),t._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://cdn.jsdelivr.net/gh/Sunc4127/image-hosting/202208011020085.png",alt:"图片说明"}})])}),[],!1,null,null,null);a.default=n.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{408:function(t,e,r){"use strict";r.r(e);var a=r(3),_=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"stack-arraydeque-linkedlist的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stack-arraydeque-linkedlist的区别"}},[t._v("#")]),t._v(" Stack，ArrayDeque，LinkedList的区别")]),t._v(" "),e("h3",{attrs:{id:"类继承树"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类继承树"}},[t._v("#")]),t._v(" 类继承树")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Sunc4127/image-hosting/202111210920707.png",alt:"Collection继承树"}})]),t._v(" "),e("ul",[e("li",[t._v("由继承树看出，三者都是Collection的间接实现类")]),t._v(" "),e("li",[t._v("ArrayDeque实现Deque接口，Stack继承于Vector，LinkedList实现Deque与List接口")]),t._v(" "),e("li",[t._v("Stack，ArrayDeque，LinkedList都可以作为栈使用")])]),t._v(" "),e("h3",{attrs:{id:"底层数据存储方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#底层数据存储方式"}},[t._v("#")]),t._v(" 底层数据存储方式")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("存储方式")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Stack")]),t._v(" "),e("td",[t._v("长度为10的数组")])]),t._v(" "),e("tr",[e("td",[t._v("ArrayDeque")]),t._v(" "),e("td",[t._v("长度为16的数组")])]),t._v(" "),e("tr",[e("td",[t._v("LinkedList")]),t._v(" "),e("td",[t._v("链表")])])])]),t._v(" "),e("h3",{attrs:{id:"方法参照表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法参照表"}},[t._v("#")]),t._v(" 方法参照表")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Stack")]),t._v(" "),e("th",[t._v("ArrayDeque")]),t._v(" "),e("th",[t._v("LinkedList")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("push(e)")]),t._v(" "),e("td",[t._v("addFirst(e)/offerFirst(e)")]),t._v(" "),e("td",[t._v("addFirst(e)/offerFirst(e)")])]),t._v(" "),e("tr",[e("td",[t._v("pop()")]),t._v(" "),e("td",[t._v("removeFirst()/pollFirst()")]),t._v(" "),e("td",[t._v("removeFirst()/pollFirst()")])]),t._v(" "),e("tr",[e("td",[t._v("peek()")]),t._v(" "),e("td",[t._v("getFirst()/peekFirst()")]),t._v(" "),e("td",[t._v("getFirst()/peekFirst()")])])])]),t._v(" "),e("h3",{attrs:{id:"线程安全"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#线程安全"}},[t._v("#")]),t._v(" 线程安全")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th"),t._v(" "),e("th",[t._v("线程安全")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Stack")]),t._v(" "),e("td",[t._v("线程同步")])]),t._v(" "),e("tr",[e("td",[t._v("ArrayDeque")]),t._v(" "),e("td",[t._v("线程不同步")])]),t._v(" "),e("tr",[e("td",[t._v("LinkedList")]),t._v(" "),e("td",[t._v("线程不同步")])])])]),t._v(" "),e("h3",{attrs:{id:"性能选项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#性能选项"}},[t._v("#")]),t._v(" 性能选项")]),t._v(" "),e("ul",[e("li",[t._v("通常情况下，不推荐使用Vector以及其子类Stack")]),t._v(" "),e("li",[t._v("因为\n"),e("ul",[e("li",[e("p",[t._v("Vector")]),t._v(" "),e("ul",[e("li",[t._v("grows by 50% of its size")]),t._v(" "),e("li",[t._v("All methods are synchronized (only a single thread can access it)")])])]),t._v(" "),e("li",[e("p",[t._v("ArrayList")]),t._v(" "),e("ul",[e("li",[t._v("grows by 50% of its size")])])])])])]),t._v(" "),e("h4",{attrs:{id:"_1-需要线程同步"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-需要线程同步"}},[t._v("#")]),t._v(" 1. 需要线程同步")]),t._v(" "),e("ul",[e("li",[t._v("使用Collections工具类中synchronizedXxx()， 将线程不同步的ArrayDeque以及LinkedList转换成线程同步")])]),t._v(" "),e("h4",{attrs:{id:"_2-频繁的插入、删除操作-linkedlist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-频繁的插入、删除操作-linkedlist"}},[t._v("#")]),t._v(" 2. 频繁的插入、删除操作：LinkedList")]),t._v(" "),e("h4",{attrs:{id:"_3-频繁的随机访问操作-arraydeque"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-频繁的随机访问操作-arraydeque"}},[t._v("#")]),t._v(" 3. 频繁的随机访问操作：ArrayDeque")]),t._v(" "),e("h4",{attrs:{id:"_4-未知的初始数据量-linkedlist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-未知的初始数据量-linkedlist"}},[t._v("#")]),t._v(" 4. 未知的初始数据量：LinkedList")])])}),[],!1,null,null,null);e.default=_.exports}}]);
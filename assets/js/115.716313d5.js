(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{440:function(s,n,t){"use strict";t.r(n);var a=t(3),e=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("nav",{staticClass:"table-of-contents"},[n("ol",[n("li",[n("a",{attrs:{href:"#c%2B%2B%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B"}},[s._v(" C++提高编程")]),n("ol",[n("li",[n("a",{attrs:{href:"#1-%E6%A8%A1%E6%9D%BF"}},[s._v(" 1 模板")]),n("ol",[n("li",[n("a",{attrs:{href:"#1.1-%E6%A8%A1%E6%9D%BF%E7%9A%84%E6%A6%82%E5%BF%B5"}},[s._v(" 1.1 模板的概念")])]),n("li",[n("a",{attrs:{href:"#1.2-%E5%87%BD%E6%95%B0%E6%A8%A1%E6%9D%BF"}},[s._v(" 1.2 函数模板")]),n("ol",[n("li",[n("a",{attrs:{href:"#1.2.1-%E5%87%BD%E6%95%B0%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95"}},[s._v(" 1.2.1 函数模板语法")])]),n("li",[n("a",{attrs:{href:"#1.2.2-%E5%87%BD%E6%95%B0%E6%A8%A1%E6%9D%BF%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9"}},[s._v(" 1.2.2 函数模板注意事项")])]),n("li",[n("a",{attrs:{href:"#1.2.3-%E5%87%BD%E6%95%B0%E6%A8%A1%E6%9D%BF%E6%A1%88%E4%BE%8B"}},[s._v(" 1.2.3 函数模板案例")])]),n("li",[n("a",{attrs:{href:"#1.2.4-%E6%99%AE%E9%80%9A%E5%87%BD%E6%95%B0%E4%B8%8E%E5%87%BD%E6%95%B0%E6%A8%A1%E6%9D%BF%E7%9A%84%E5%8C%BA%E5%88%AB"}},[s._v(" 1.2.4 普通函数与函数模板的区别")])]),n("li",[n("a",{attrs:{href:"#1.2.5-%E6%99%AE%E9%80%9A%E5%87%BD%E6%95%B0%E4%B8%8E%E5%87%BD%E6%95%B0%E6%A8%A1%E6%9D%BF%E7%9A%84%E8%B0%83%E7%94%A8%E8%A7%84%E5%88%99"}},[s._v(" 1.2.5 普通函数与函数模板的调用规则")])]),n("li",[n("a",{attrs:{href:"#1.2.6-%E6%A8%A1%E6%9D%BF%E7%9A%84%E5%B1%80%E9%99%90%E6%80%A7"}},[s._v(" 1.2.6 模板的局限性")])])])]),n("li",[n("a",{attrs:{href:"#1.3-%E7%B1%BB%E6%A8%A1%E6%9D%BF"}},[s._v(" 1.3 类模板")]),n("ol",[n("li",[n("a",{attrs:{href:"#1.3.1-%E7%B1%BB%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95"}},[s._v(" 1.3.1 类模板语法")])]),n("li",[n("a",{attrs:{href:"#1.3.2-%E7%B1%BB%E6%A8%A1%E6%9D%BF%E4%B8%8E%E5%87%BD%E6%95%B0%E6%A8%A1%E6%9D%BF%E5%8C%BA%E5%88%AB"}},[s._v(" 1.3.2 类模板与函数模板区别")])]),n("li",[n("a",{attrs:{href:"#1.3.3-%E7%B1%BB%E6%A8%A1%E6%9D%BF%E4%B8%AD%E6%88%90%E5%91%98%E5%87%BD%E6%95%B0%E5%88%9B%E5%BB%BA%E6%97%B6%E6%9C%BA"}},[s._v(" 1.3.3 类模板中成员函数创建时机")])]),n("li",[n("a",{attrs:{href:"#1.3.4-%E7%B1%BB%E6%A8%A1%E6%9D%BF%E5%AF%B9%E8%B1%A1%E5%81%9A%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0"}},[s._v(" 1.3.4 类模板对象做函数参数")])]),n("li",[n("a",{attrs:{href:"#1.3.5-%E7%B1%BB%E6%A8%A1%E6%9D%BF%E4%B8%8E%E7%BB%A7%E6%89%BF"}},[s._v(" 1.3.5 类模板与继承")])]),n("li",[n("a",{attrs:{href:"#1.3.6-%E7%B1%BB%E6%A8%A1%E6%9D%BF%E6%88%90%E5%91%98%E5%87%BD%E6%95%B0%E7%B1%BB%E5%A4%96%E5%AE%9E%E7%8E%B0"}},[s._v(" 1.3.6 类模板成员函数类外实现")])]),n("li",[n("a",{attrs:{href:"#1.3.7-%E7%B1%BB%E6%A8%A1%E6%9D%BF%E5%88%86%E6%96%87%E4%BB%B6%E7%BC%96%E5%86%99"}},[s._v(" 1.3.7 类模板分文件编写")])]),n("li",[n("a",{attrs:{href:"#1.3.8-%E7%B1%BB%E6%A8%A1%E6%9D%BF%E4%B8%8E%E5%8F%8B%E5%85%83"}},[s._v(" 1.3.8 类模板与友元")])]),n("li",[n("a",{attrs:{href:"#1.3.9-%E7%B1%BB%E6%A8%A1%E6%9D%BF%E6%A1%88%E4%BE%8B"}},[s._v(" 1.3.9 类模板案例")])])])])])]),n("li",[n("a",{attrs:{href:"#2-stl%E5%88%9D%E8%AF%86"}},[s._v(" 2 STL初识")]),n("ol",[n("li",[n("a",{attrs:{href:"#2.1-stl%E7%9A%84%E8%AF%9E%E7%94%9F"}},[s._v(" 2.1 STL的诞生")])]),n("li",[n("a",{attrs:{href:"#2.2-stl%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5"}},[s._v(" 2.2 STL基本概念")])]),n("li",[n("a",{attrs:{href:"#2.3-stl%E5%85%AD%E5%A4%A7%E7%BB%84%E4%BB%B6"}},[s._v(" 2.3 STL六大组件")])]),n("li",[n("a",{attrs:{href:"#2.4-stl%E4%B8%AD%E5%AE%B9%E5%99%A8%E3%80%81%E7%AE%97%E6%B3%95%E3%80%81%E8%BF%AD%E4%BB%A3%E5%99%A8"}},[s._v(" 2.4  STL中容器、算法、迭代器")])]),n("li",[n("a",{attrs:{href:"#2.5-%E5%AE%B9%E5%99%A8%E7%AE%97%E6%B3%95%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%88%9D%E8%AF%86"}},[s._v(" 2.5 容器算法迭代器初识")]),n("ol",[n("li",[n("a",{attrs:{href:"#2.5.1-vector%E5%AD%98%E6%94%BE%E5%86%85%E7%BD%AE%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"}},[s._v(" 2.5.1 vector存放内置数据类型")])]),n("li",[n("a",{attrs:{href:"#2.5.2-vector%E5%AD%98%E6%94%BE%E8%87%AA%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"}},[s._v(" 2.5.2 Vector存放自定义数据类型")])]),n("li",[n("a",{attrs:{href:"#2.5.3-vector%E5%AE%B9%E5%99%A8%E5%B5%8C%E5%A5%97%E5%AE%B9%E5%99%A8"}},[s._v(" 2.5.3 Vector容器嵌套容器")])])])])])]),n("li",[n("a",{attrs:{href:"#3-stl--%E5%B8%B8%E7%94%A8%E5%AE%B9%E5%99%A8"}},[s._v(" 3 STL- 常用容器")]),n("ol",[n("li",[n("a",{attrs:{href:"#3.1-string%E5%AE%B9%E5%99%A8"}},[s._v(" 3.1 string容器")]),n("ol",[n("li",[n("a",{attrs:{href:"#3.1.1-string%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5"}},[s._v(" 3.1.1 string基本概念")])]),n("li",[n("a",{attrs:{href:"#3.1.2-string%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0"}},[s._v(" 3.1.2 string构造函数")])]),n("li",[n("a",{attrs:{href:"#3.1.3-string%E8%B5%8B%E5%80%BC%E6%93%8D%E4%BD%9C"}},[s._v(" 3.1.3 string赋值操作")])]),n("li",[n("a",{attrs:{href:"#3.1.4-string%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5"}},[s._v(" 3.1.4 string字符串拼接")])]),n("li",[n("a",{attrs:{href:"#3.1.5-string%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2"}},[s._v(" 3.1.5 string查找和替换")])]),n("li",[n("a",{attrs:{href:"#3.1.6-string%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%AF%94%E8%BE%83"}},[s._v(" 3.1.6 string字符串比较")])]),n("li",[n("a",{attrs:{href:"#3.1.7-string%E5%AD%97%E7%AC%A6%E5%AD%98%E5%8F%96"}},[s._v(" 3.1.7 string字符存取")])]),n("li",[n("a",{attrs:{href:"#3.1.8-string%E6%8F%92%E5%85%A5%E5%92%8C%E5%88%A0%E9%99%A4"}},[s._v(" 3.1.8 string插入和删除")])]),n("li",[n("a",{attrs:{href:"#3.1.9-string%E5%AD%90%E4%B8%B2"}},[s._v(" 3.1.9 string子串")])])])]),n("li",[n("a",{attrs:{href:"#3.2-vector%E5%AE%B9%E5%99%A8"}},[s._v(" 3.2 vector容器")]),n("ol",[n("li",[n("a",{attrs:{href:"#3.2.1-vector%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5"}},[s._v(" 3.2.1 vector基本概念")])]),n("li",[n("a",{attrs:{href:"#3.2.2-vector%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0"}},[s._v(" 3.2.2 vector构造函数")])]),n("li",[n("a",{attrs:{href:"#3.2.3-vector%E8%B5%8B%E5%80%BC%E6%93%8D%E4%BD%9C"}},[s._v(" 3.2.3 vector赋值操作")])]),n("li",[n("a",{attrs:{href:"#3.2.4-vector%E5%AE%B9%E9%87%8F%E5%92%8C%E5%A4%A7%E5%B0%8F"}},[s._v(" 3.2.4  vector容量和大小")])]),n("li",[n("a",{attrs:{href:"#3.2.5-vector%E6%8F%92%E5%85%A5%E5%92%8C%E5%88%A0%E9%99%A4"}},[s._v(" 3.2.5 vector插入和删除")])]),n("li",[n("a",{attrs:{href:"#3.2.6-vector%E6%95%B0%E6%8D%AE%E5%AD%98%E5%8F%96"}},[s._v(" 3.2.6 vector数据存取")])]),n("li",[n("a",{attrs:{href:"#3.2.7-vector%E4%BA%92%E6%8D%A2%E5%AE%B9%E5%99%A8"}},[s._v(" 3.2.7 vector互换容器")])]),n("li",[n("a",{attrs:{href:"#3.2.8-vector%E9%A2%84%E7%95%99%E7%A9%BA%E9%97%B4"}},[s._v(" 3.2.8 vector预留空间")])])])]),n("li",[n("a",{attrs:{href:"#3.3-deque%E5%AE%B9%E5%99%A8"}},[s._v(" 3.3 deque容器")]),n("ol",[n("li",[n("a",{attrs:{href:"#3.3.1-deque%E5%AE%B9%E5%99%A8%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5"}},[s._v(" 3.3.1 deque容器基本概念")])]),n("li",[n("a",{attrs:{href:"#3.3.2-deque%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0"}},[s._v(" 3.3.2 deque构造函数")])]),n("li",[n("a",{attrs:{href:"#3.3.3-deque%E8%B5%8B%E5%80%BC%E6%93%8D%E4%BD%9C"}},[s._v(" 3.3.3 deque赋值操作")])]),n("li",[n("a",{attrs:{href:"#3.3.4-deque%E5%A4%A7%E5%B0%8F%E6%93%8D%E4%BD%9C"}},[s._v(" 3.3.4 deque大小操作")])]),n("li",[n("a",{attrs:{href:"#3.3.5-deque-%E6%8F%92%E5%85%A5%E5%92%8C%E5%88%A0%E9%99%A4"}},[s._v(" 3.3.5 deque 插入和删除")])]),n("li",[n("a",{attrs:{href:"#3.3.6-deque-%E6%95%B0%E6%8D%AE%E5%AD%98%E5%8F%96"}},[s._v(" 3.3.6 deque 数据存取")])]),n("li",[n("a",{attrs:{href:"#3.3.7-deque-%E6%8E%92%E5%BA%8F"}},[s._v(" 3.3.7  deque 排序")])])])]),n("li",[n("a",{attrs:{href:"#3.4-%E6%A1%88%E4%BE%8B-%E8%AF%84%E5%A7%94%E6%89%93%E5%88%86"}},[s._v(" 3.4 案例-评委打分")]),n("ol",[n("li",[n("a",{attrs:{href:"#3.4.1-%E6%A1%88%E4%BE%8B%E6%8F%8F%E8%BF%B0"}},[s._v(" 3.4.1 案例描述")])]),n("li",[n("a",{attrs:{href:"#3.4.2-%E5%AE%9E%E7%8E%B0%E6%AD%A5%E9%AA%A4"}},[s._v(" 3.4.2 实现步骤")])])])]),n("li",[n("a",{attrs:{href:"#3.5-stack%E5%AE%B9%E5%99%A8"}},[s._v(" 3.5 stack容器")]),n("ol",[n("li",[n("a",{attrs:{href:"#3.5.1-stack-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5"}},[s._v(" 3.5.1 stack 基本概念")])]),n("li",[n("a",{attrs:{href:"#3.5.2-stack-%E5%B8%B8%E7%94%A8%E6%8E%A5%E5%8F%A3"}},[s._v(" 3.5.2 stack 常用接口")])])])]),n("li",[n("a",{attrs:{href:"#3.6-queue-%E5%AE%B9%E5%99%A8"}},[s._v(" 3.6 queue 容器")]),n("ol",[n("li",[n("a",{attrs:{href:"#3.6.1-queue-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5"}},[s._v(" 3.6.1 queue 基本概念")])]),n("li",[n("a",{attrs:{href:"#3.6.2-queue-%E5%B8%B8%E7%94%A8%E6%8E%A5%E5%8F%A3"}},[s._v(" 3.6.2 queue 常用接口")])])])]),n("li",[n("a",{attrs:{href:"#3.7-list%E5%AE%B9%E5%99%A8"}},[s._v(" 3.7 list容器")]),n("ol",[n("li",[n("a",{attrs:{href:"#3.7.1-list%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5"}},[s._v(" 3.7.1 list基本概念")])]),n("li",[n("a",{attrs:{href:"#3.7.2-list%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0"}},[s._v(" 3.7.2  list构造函数")])]),n("li",[n("a",{attrs:{href:"#3.7.3-list-%E8%B5%8B%E5%80%BC%E5%92%8C%E4%BA%A4%E6%8D%A2"}},[s._v(" 3.7.3 list 赋值和交换")])]),n("li",[n("a",{attrs:{href:"#3.7.4-list-%E5%A4%A7%E5%B0%8F%E6%93%8D%E4%BD%9C"}},[s._v(" 3.7.4 list 大小操作")])]),n("li",[n("a",{attrs:{href:"#3.7.5-list-%E6%8F%92%E5%85%A5%E5%92%8C%E5%88%A0%E9%99%A4"}},[s._v(" 3.7.5 list 插入和删除")])]),n("li",[n("a",{attrs:{href:"#3.7.6-list-%E6%95%B0%E6%8D%AE%E5%AD%98%E5%8F%96"}},[s._v(" 3.7.6 list 数据存取")])]),n("li",[n("a",{attrs:{href:"#3.7.7-list-%E5%8F%8D%E8%BD%AC%E5%92%8C%E6%8E%92%E5%BA%8F"}},[s._v(" 3.7.7 list 反转和排序")])]),n("li",[n("a",{attrs:{href:"#3.7.8-%E6%8E%92%E5%BA%8F%E6%A1%88%E4%BE%8B"}},[s._v(" 3.7.8 排序案例")])])])]),n("li",[n("a",{attrs:{href:"#3.8-set%2F-multiset-%E5%AE%B9%E5%99%A8"}},[s._v(" 3.8 set/ multiset 容器")]),n("ol",[n("li",[n("a",{attrs:{href:"#3.8.1-set%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5"}},[s._v(" 3.8.1 set基本概念")])]),n("li",[n("a",{attrs:{href:"#3.8.2-set%E6%9E%84%E9%80%A0%E5%92%8C%E8%B5%8B%E5%80%BC"}},[s._v(" 3.8.2 set构造和赋值")])]),n("li",[n("a",{attrs:{href:"#3.8.3-set%E5%A4%A7%E5%B0%8F%E5%92%8C%E4%BA%A4%E6%8D%A2"}},[s._v(" 3.8.3 set大小和交换")])]),n("li",[n("a",{attrs:{href:"#3.8.4-set%E6%8F%92%E5%85%A5%E5%92%8C%E5%88%A0%E9%99%A4"}},[s._v(" 3.8.4 set插入和删除")])]),n("li",[n("a",{attrs:{href:"#3.8.5-set%E6%9F%A5%E6%89%BE%E5%92%8C%E7%BB%9F%E8%AE%A1"}},[s._v(" 3.8.5 set查找和统计")])]),n("li",[n("a",{attrs:{href:"#3.8.6-set%E5%92%8Cmultiset%E5%8C%BA%E5%88%AB"}},[s._v(" 3.8.6 set和multiset区别")])]),n("li",[n("a",{attrs:{href:"#3.8.7-pair%E5%AF%B9%E7%BB%84%E5%88%9B%E5%BB%BA"}},[s._v(" 3.8.7 pair对组创建")])]),n("li",[n("a",{attrs:{href:"#3.8.8-set%E5%AE%B9%E5%99%A8%E6%8E%92%E5%BA%8F"}},[s._v(" 3.8.8 set容器排序")])])])]),n("li",[n("a",{attrs:{href:"#3.9-map%2F-multimap%E5%AE%B9%E5%99%A8"}},[s._v(" 3.9 map/ multimap容器")]),n("ol",[n("li",[n("a",{attrs:{href:"#3.9.1-map%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5"}},[s._v(" 3.9.1 map基本概念")])]),n("li",[n("a",{attrs:{href:"#3.9.2-map%E6%9E%84%E9%80%A0%E5%92%8C%E8%B5%8B%E5%80%BC"}},[s._v(" 3.9.2  map构造和赋值")])]),n("li",[n("a",{attrs:{href:"#3.9.3-map%E5%A4%A7%E5%B0%8F%E5%92%8C%E4%BA%A4%E6%8D%A2"}},[s._v(" 3.9.3 map大小和交换")])]),n("li",[n("a",{attrs:{href:"#3.9.4-map%E6%8F%92%E5%85%A5%E5%92%8C%E5%88%A0%E9%99%A4"}},[s._v(" 3.9.4 map插入和删除")])]),n("li",[n("a",{attrs:{href:"#3.9.5-map%E6%9F%A5%E6%89%BE%E5%92%8C%E7%BB%9F%E8%AE%A1"}},[s._v(" 3.9.5 map查找和统计")])]),n("li",[n("a",{attrs:{href:"#3.9.6-map%E5%AE%B9%E5%99%A8%E6%8E%92%E5%BA%8F"}},[s._v(" 3.9.6 map容器排序")])])])]),n("li",[n("a",{attrs:{href:"#3.10-%E6%A1%88%E4%BE%8B-%E5%91%98%E5%B7%A5%E5%88%86%E7%BB%84"}},[s._v(" 3.10 案例-员工分组")]),n("ol",[n("li",[n("a",{attrs:{href:"#3.10.1-%E6%A1%88%E4%BE%8B%E6%8F%8F%E8%BF%B0"}},[s._v(" 3.10.1 案例描述")])]),n("li",[n("a",{attrs:{href:"#3.10.2-%E5%AE%9E%E7%8E%B0%E6%AD%A5%E9%AA%A4"}},[s._v(" 3.10.2 实现步骤")])])])])])]),n("li",[n("a",{attrs:{href:"#4-stl--%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1"}},[s._v(" 4 STL- 函数对象")]),n("ol",[n("li",[n("a",{attrs:{href:"#4.1-%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1"}},[s._v(" 4.1 函数对象")]),n("ol",[n("li",[n("a",{attrs:{href:"#4.1.1-%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1%E6%A6%82%E5%BF%B5"}},[s._v(" 4.1.1 函数对象概念")])]),n("li",[n("a",{attrs:{href:"#4.1.2-%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1%E4%BD%BF%E7%94%A8"}},[s._v(" 4.1.2  函数对象使用")])])])]),n("li",[n("a",{attrs:{href:"#4.2-%E8%B0%93%E8%AF%8D"}},[s._v(" 4.2  谓词")]),n("ol",[n("li",[n("a",{attrs:{href:"#4.2.1-%E8%B0%93%E8%AF%8D%E6%A6%82%E5%BF%B5"}},[s._v(" 4.2.1 谓词概念")])]),n("li",[n("a",{attrs:{href:"#4.2.2-%E4%B8%80%E5%85%83%E8%B0%93%E8%AF%8D"}},[s._v(" 4.2.2 一元谓词")])]),n("li",[n("a",{attrs:{href:"#4.2.3-%E4%BA%8C%E5%85%83%E8%B0%93%E8%AF%8D"}},[s._v(" 4.2.3 二元谓词")])])])]),n("li",[n("a",{attrs:{href:"#4.3-%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1"}},[s._v(" 4.3 内建函数对象")]),n("ol",[n("li",[n("a",{attrs:{href:"#4.3.1-%E5%86%85%E5%BB%BA%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1%E6%84%8F%E4%B9%89"}},[s._v(" 4.3.1 内建函数对象意义")])]),n("li",[n("a",{attrs:{href:"#4.3.2-%E7%AE%97%E6%9C%AF%E4%BB%BF%E5%87%BD%E6%95%B0"}},[s._v(" 4.3.2 算术仿函数")])]),n("li",[n("a",{attrs:{href:"#4.3.3-%E5%85%B3%E7%B3%BB%E4%BB%BF%E5%87%BD%E6%95%B0"}},[s._v(" 4.3.3 关系仿函数")])]),n("li",[n("a",{attrs:{href:"#4.3.4-%E9%80%BB%E8%BE%91%E4%BB%BF%E5%87%BD%E6%95%B0"}},[s._v(" 4.3.4 逻辑仿函数")])])])])])]),n("li",[n("a",{attrs:{href:"#5-stl--%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95"}},[s._v(" 5 STL- 常用算法")]),n("ol",[n("li",[n("a",{attrs:{href:"#5.1-%E5%B8%B8%E7%94%A8%E9%81%8D%E5%8E%86%E7%AE%97%E6%B3%95"}},[s._v(" 5.1 常用遍历算法")]),n("ol",[n("li",[n("a",{attrs:{href:"#5.1.1-for_each"}},[s._v(" 5.1.1 for_each")])]),n("li",[n("a",{attrs:{href:"#5.1.2-transform"}},[s._v(" 5.1.2 transform")])])])]),n("li",[n("a",{attrs:{href:"#5.2-%E5%B8%B8%E7%94%A8%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95"}},[s._v(" 5.2 常用查找算法")]),n("ol",[n("li",[n("a",{attrs:{href:"#5.2.1-find"}},[s._v(" 5.2.1 find")])]),n("li",[n("a",{attrs:{href:"#5.2.2-find_if"}},[s._v(" 5.2.2 find_if")])]),n("li",[n("a",{attrs:{href:"#5.2.3-adjacent_find"}},[s._v(" 5.2.3 adjacent_find")])]),n("li",[n("a",{attrs:{href:"#5.2.4-binary_search"}},[s._v(" 5.2.4 binary_search")])]),n("li",[n("a",{attrs:{href:"#5.2.5-count"}},[s._v(" 5.2.5 count")])]),n("li",[n("a",{attrs:{href:"#5.2.6-count_if"}},[s._v(" 5.2.6 count_if")])])])]),n("li",[n("a",{attrs:{href:"#5.3-%E5%B8%B8%E7%94%A8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95"}},[s._v(" 5.3 常用排序算法")]),n("ol",[n("li",[n("a",{attrs:{href:"#5.3.1-sort"}},[s._v(" 5.3.1 sort")])]),n("li",[n("a",{attrs:{href:"#5.3.2-random_shuffle"}},[s._v(" 5.3.2 random_shuffle")])]),n("li",[n("a",{attrs:{href:"#5.3.3-merge"}},[s._v(" 5.3.3 merge")])]),n("li",[n("a",{attrs:{href:"#5.3.4-reverse"}},[s._v(" 5.3.4 reverse")])])])]),n("li",[n("a",{attrs:{href:"#5.4-%E5%B8%B8%E7%94%A8%E6%8B%B7%E8%B4%9D%E5%92%8C%E6%9B%BF%E6%8D%A2%E7%AE%97%E6%B3%95"}},[s._v(" 5.4 常用拷贝和替换算法")]),n("ol",[n("li",[n("a",{attrs:{href:"#5.4.1-copy"}},[s._v(" 5.4.1 copy")])]),n("li",[n("a",{attrs:{href:"#5.4.2-replace"}},[s._v(" 5.4.2 replace")])]),n("li",[n("a",{attrs:{href:"#5.4.3-replace_if"}},[s._v(" 5.4.3 replace_if")])]),n("li",[n("a",{attrs:{href:"#5.4.4-swap"}},[s._v(" 5.4.4 swap")])])])]),n("li",[n("a",{attrs:{href:"#5.5-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%9C%AF%E7%94%9F%E6%88%90%E7%AE%97%E6%B3%95"}},[s._v(" 5.5 常用算术生成算法")]),n("ol",[n("li",[n("a",{attrs:{href:"#5.5.1-accumulate"}},[s._v(" 5.5.1 accumulate")])]),n("li",[n("a",{attrs:{href:"#5.5.2-fill"}},[s._v(" 5.5.2 fill")])])])]),n("li",[n("a",{attrs:{href:"#5.6-%E5%B8%B8%E7%94%A8%E9%9B%86%E5%90%88%E7%AE%97%E6%B3%95"}},[s._v(" 5.6 常用集合算法")]),n("ol",[n("li",[n("a",{attrs:{href:"#5.6.1-set_intersection"}},[s._v(" 5.6.1 set_intersection")])]),n("li",[n("a",{attrs:{href:"#5.6.2-set_union"}},[s._v(" 5.6.2 set_union")])]),n("li",[n("a",{attrs:{href:"#5.6.3-set_difference"}},[s._v(" 5.6.3  set_difference")])])])])])])])])])]),n("h1",{attrs:{id:"c-提高编程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#c-提高编程"}},[s._v("#")]),s._v(" C++提高编程")]),s._v(" "),n("ul",[n("li",[s._v("本阶段主要针对C++==泛型编程==和==STL==技术做详细讲解，探讨C++更深层的使用")])]),s._v(" "),n("h2",{attrs:{id:"_1-模板"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-模板"}},[s._v("#")]),s._v(" 1 模板")]),s._v(" "),n("h3",{attrs:{id:"_1-1-模板的概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-模板的概念"}},[s._v("#")]),s._v(" 1.1 模板的概念")]),s._v(" "),n("p",[s._v("模板就是建立"),n("strong",[s._v("通用的模具")]),s._v("，大大"),n("strong",[s._v("提高复用性")])]),s._v(" "),n("p",[s._v("例如生活中的模板")]),s._v(" "),n("p",[s._v("一寸照片模板：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Sunc4127/image-hosting/202209220929120.png",alt:"1547105026929"}})]),s._v(" "),n("p",[s._v("PPT模板：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Sunc4127/image-hosting/202209220929125.png",alt:"1547103297864"}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Sunc4127/image-hosting/202209220929127.png",alt:"1547103359158"}})]),s._v(" "),n("p",[s._v("模板的特点：")]),s._v(" "),n("ul",[n("li",[s._v("模板不可以直接使用，它只是一个框架")]),s._v(" "),n("li",[s._v("模板的通用并不是万能的")])]),s._v(" "),n("h3",{attrs:{id:"_1-2-函数模板"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-函数模板"}},[s._v("#")]),s._v(" 1.2 函数模板")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("C++另一种编程思想称为 "),n("mark",[s._v("泛型编程")]),s._v(" ，主要利用的技术就是模板")])]),s._v(" "),n("li",[n("p",[s._v("C++提供两种模板机制:"),n("strong",[s._v("函数模板")]),s._v("和"),n("strong",[s._v("类模板")])])])]),s._v(" "),n("h4",{attrs:{id:"_1-2-1-函数模板语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-函数模板语法"}},[s._v("#")]),s._v(" 1.2.1 函数模板语法")]),s._v(" "),n("p",[s._v("函数模板作用：")]),s._v(" "),n("p",[s._v("建立一个通用函数，其函数返回值类型和形参类型可以不具体制定，用一个"),n("strong",[s._v("虚拟的类型")]),s._v("来代表。")]),s._v(" "),n("p",[n("strong",[s._v("语法：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("template<typename T>\n函数声明或定义\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("解释：")])]),s._v(" "),n("p",[s._v("template  ---  声明创建模板")]),s._v(" "),n("p",[s._v("typename  --- 表面其后面的符号是一种数据类型，可以用class代替")]),s._v(" "),n("p",[s._v("T    ---   通用的数据类型，名称可以替换，通常为大写字母")]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('\n//交换整型函数\nvoid swapInt(int& a, int& b) {\n\tint temp = a;\n\ta = b;\n\tb = temp;\n}\n\n//交换浮点型函数\nvoid swapDouble(double& a, double& b) {\n\tdouble temp = a;\n\ta = b;\n\tb = temp;\n}\n\n//利用模板提供通用的交换函数\ntemplate<typename T>\nvoid mySwap(T& a, T& b)\n{\n\tT temp = a;\n\ta = b;\n\tb = temp;\n}\n\nvoid test01()\n{\n\tint a = 10;\n\tint b = 20;\n\t\n\t//swapInt(a, b);\n\n\t//利用模板实现交换\n\t//1、自动类型推导\n\tmySwap(a, b);\n\n\t//2、显示指定类型\n\tmySwap<int>(a, b);\n\n\tcout << "a = " << a << endl;\n\tcout << "b = " << b << endl;\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("函数模板利用关键字 template")]),s._v(" "),n("li",[s._v("使用函数模板有两种方式：自动类型推导、显示指定类型")]),s._v(" "),n("li",[s._v("模板的目的是为了提高复用性，将类型参数化")])]),s._v(" "),n("h4",{attrs:{id:"_1-2-2-函数模板注意事项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-函数模板注意事项"}},[s._v("#")]),s._v(" 1.2.2 函数模板注意事项")]),s._v(" "),n("p",[s._v("注意事项：")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("自动类型推导，必须推导出一致的数据类型T,才可以使用")])]),s._v(" "),n("li",[n("p",[s._v("模板必须要确定出T的数据类型，才可以使用")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//利用模板提供通用的交换函数\ntemplate<class T>\nvoid mySwap(T& a, T& b)\n{\n\tT temp = a;\n\ta = b;\n\tb = temp;\n}\n\n\n// 1、自动类型推导，必须推导出一致的数据类型T,才可以使用\nvoid test01()\n{\n\tint a = 10;\n\tint b = 20;\n\tchar c = \'c\';\n\n\tmySwap(a, b); // 正确，可以推导出一致的T\n\t//mySwap(a, c); // 错误，推导不出一致的T类型\n}\n\n\n// 2、模板必须要确定出T的数据类型，才可以使用\ntemplate<class T>\nvoid func()\n{\n\tcout << "func 调用" << endl;\n}\n\nvoid test02()\n{\n\t//func(); //错误，模板不能独立使用，必须确定出T的类型\n\tfunc<int>(); //利用显示指定类型的方式，给T一个类型，才可以使用该模板\n}\n\nint main() {\n\n\ttest01();\n\ttest02();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("使用模板时必须确定出通用数据类型T，并且能够推导出一致的类型")])]),s._v(" "),n("h4",{attrs:{id:"_1-2-3-函数模板案例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-函数模板案例"}},[s._v("#")]),s._v(" 1.2.3 函数模板案例")]),s._v(" "),n("p",[s._v("案例描述：")]),s._v(" "),n("ul",[n("li",[s._v("利用函数模板封装一个排序的函数，可以对"),n("strong",[s._v("不同数据类型数组")]),s._v("进行排序")]),s._v(" "),n("li",[s._v("排序规则从大到小，排序算法为"),n("strong",[s._v("选择排序")])]),s._v(" "),n("li",[s._v("分别利用"),n("strong",[s._v("char数组")]),s._v("和"),n("strong",[s._v("int数组")]),s._v("进行测试")])]),s._v(" "),n("p",[s._v("示例：")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//交换的函数模板\ntemplate<typename T>\nvoid mySwap(T &a, T&b)\n{\n\tT temp = a;\n\ta = b;\n\tb = temp;\n}\n\n\ntemplate<class T> // 也可以替换成typename\n//利用选择排序，进行对数组从大到小的排序\nvoid mySort(T arr[], int len)\n{\n\tfor (int i = 0; i < len; i++)\n\t{\n\t\tint max = i; //最大数的下标\n\t\tfor (int j = i + 1; j < len; j++)\n\t\t{\n\t\t\tif (arr[max] < arr[j])\n\t\t\t{\n\t\t\t\tmax = j;\n\t\t\t}\n\t\t}\n\t\tif (max != i) //如果最大数的下标不是i，交换两者\n\t\t{\n\t\t\tmySwap(arr[max], arr[i]);\n\t\t}\n\t}\n}\ntemplate<typename T>\nvoid printArray(T arr[], int len) {\n\n\tfor (int i = 0; i < len; i++) {\n\t\tcout << arr[i] << " ";\n\t}\n\tcout << endl;\n}\nvoid test01()\n{\n\t//测试char数组\n\tchar charArr[] = "bdcfeagh";\n\tint num = sizeof(charArr) / sizeof(char);\n\tmySort(charArr, num);\n\tprintArray(charArr, num);\n}\n\nvoid test02()\n{\n\t//测试int数组\n\tint intArr[] = { 7, 5, 8, 1, 3, 9, 2, 4, 6 };\n\tint num = sizeof(intArr) / sizeof(int);\n\tmySort(intArr, num);\n\tprintArray(intArr, num);\n}\n\nint main() {\n\n\ttest01();\n\ttest02();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br")])]),n("p",[s._v("总结：模板可以提高代码复用，需要熟练掌握")]),s._v(" "),n("h4",{attrs:{id:"_1-2-4-普通函数与函数模板的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-4-普通函数与函数模板的区别"}},[s._v("#")]),s._v(" 1.2.4 普通函数与函数模板的区别")]),s._v(" "),n("p",[n("strong",[s._v("普通函数与函数模板区别：")])]),s._v(" "),n("ul",[n("li",[s._v("普通函数调用时可以发生自动类型转换（隐式类型转换）")]),s._v(" "),n("li",[s._v("函数模板调用时，如果利用自动类型推导，不会发生隐式类型转换")]),s._v(" "),n("li",[s._v("如果利用显示指定类型的方式，可以发生隐式类型转换")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//普通函数\nint myAdd01(int a, int b)\n{\n\treturn a + b;\n}\n\n//函数模板\ntemplate<class T>\nT myAdd02(T a, T b)  \n{\n\treturn a + b;\n}\n\n//使用函数模板时，如果用自动类型推导，不会发生自动类型转换,即隐式类型转换\nvoid test01()\n{\n\tint a = 10;\n\tint b = 20;\n\tchar c = 'c';\n\t\n\tcout << myAdd01(a, c) << endl; //正确，将char类型的'c'隐式转换为int类型  'c' 对应 ASCII码 99\n\n\t//myAdd02(a, c); // 报错，使用自动类型推导时，不会发生隐式类型转换\n\n\tmyAdd02<int>(a, c); //正确，如果用显示指定类型，可以发生隐式类型转换\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br")])]),n("p",[s._v("总结：建议使用显示指定类型的方式，调用函数模板，因为可以自己确定通用类型T")]),s._v(" "),n("h4",{attrs:{id:"_1-2-5-普通函数与函数模板的调用规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-5-普通函数与函数模板的调用规则"}},[s._v("#")]),s._v(" 1.2.5 普通函数与函数模板的调用规则")]),s._v(" "),n("p",[s._v("调用规则如下：")]),s._v(" "),n("ol",[n("li",[s._v("如果函数模板和普通函数都可以实现，优先调用普通函数")]),s._v(" "),n("li",[s._v("可以通过空模板参数列表来强制调用函数模板")]),s._v(" "),n("li",[s._v("函数模板也可以发生重载")]),s._v(" "),n("li",[s._v("如果函数模板可以产生更好的匹配,优先调用函数模板")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//普通函数与函数模板调用规则\nvoid myPrint(int a, int b)\n{\n\tcout << "调用的普通函数" << endl;\n}\n\ntemplate<typename T>\nvoid myPrint(T a, T b) \n{ \n\tcout << "调用的模板" << endl;\n}\n\ntemplate<typename T>\nvoid myPrint(T a, T b, T c) \n{ \n\tcout << "调用重载的模板" << endl; \n}\n\nvoid test01()\n{\n\t//1、如果函数模板和普通函数都可以实现，优先调用普通函数\n\t// 注意 如果告诉编译器  普通函数是有的，但只是声明没有实现，或者不在当前文件内实现，就会报错找不到\n\tint a = 10;\n\tint b = 20;\n\tmyPrint(a, b); //调用普通函数\n\n\t//2、可以通过空模板参数列表来强制调用函数模板\n\tmyPrint<>(a, b); //调用函数模板\n\n\t//3、函数模板也可以发生重载\n\tint c = 30;\n\tmyPrint(a, b, c); //调用重载的函数模板\n\n\t//4、 如果函数模板可以产生更好的匹配,优先调用函数模板\n\tchar c1 = \'a\';\n\tchar c2 = \'b\';\n\tmyPrint(c1, c2); //调用函数模板\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br")])]),n("p",[s._v("总结：既然提供了函数模板，最好就不要提供普通函数，否则容易出现二义性")]),s._v(" "),n("h4",{attrs:{id:"_1-2-6-模板的局限性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-6-模板的局限性"}},[s._v("#")]),s._v(" 1.2.6 模板的局限性")]),s._v(" "),n("p",[n("strong",[s._v("局限性：")])]),s._v(" "),n("ul",[n("li",[s._v("模板的通用性并不是万能的")])]),s._v(" "),n("p",[n("strong",[s._v("例如：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\ttemplate<class T>\n\tvoid f(T a, T b)\n\t{ \n    \ta = b;\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("在上述代码中提供的赋值操作，如果传入的a和b是一个数组，就无法实现了")]),s._v(" "),n("p",[s._v("再例如：")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\ttemplate<class T>\n\tvoid f(T a, T b)\n\t{ \n    \tif(a > b) { ... }\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("在上述代码中，如果T的数据类型传入的是像Person这样的自定义数据类型，也无法正常运行")]),s._v(" "),n("p",[s._v("因此C++为了解决这种问题，提供模板的重载，可以为这些"),n("strong",[s._v("特定的类型")]),s._v("提供"),n("strong",[s._v("具体化的模板")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include<iostream>\nusing namespace std;\n\n#include <string>\n\nclass Person\n{\npublic:\n\tPerson(string name, int age)\n\t{\n\t\tthis->m_Name = name;\n\t\tthis->m_Age = age;\n\t}\n\tstring m_Name;\n\tint m_Age;\n};\n\n//普通函数模板\ntemplate<class T>\nbool myCompare(T& a, T& b)\n{\n\tif (a == b)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\n\n\n//具体化，显示具体化的原型和定意思以template<>开头，并通过名称来指出类型\n//具体化优先于常规模板\ntemplate<> bool myCompare(Person &p1, Person &p2)\n{\n\tif ( p1.m_Name  == p2.m_Name && p1.m_Age == p2.m_Age)\n\t{\n\t\treturn true;\n\t}\n\telse\n\t{\n\t\treturn false;\n\t}\n}\n\nvoid test01()\n{\n\tint a = 10;\n\tint b = 20;\n\t//内置数据类型可以直接使用通用的函数模板\n\tbool ret = myCompare(a, b);\n\tif (ret)\n\t{\n\t\tcout << "a == b " << endl;\n\t}\n\telse\n\t{\n\t\tcout << "a != b " << endl;\n\t}\n}\n\nvoid test02()\n{\n\tPerson p1("Tom", 10);\n\tPerson p2("Tom", 10);\n\t//自定义数据类型，不会调用普通的函数模板\n\t//可以创建具体化的Person数据类型的模板，用于特殊处理这个类型\n\tbool ret = myCompare(p1, p2);\n\tif (ret)\n\t{\n\t\tcout << "p1 == p2 " << endl;\n\t}\n\telse\n\t{\n\t\tcout << "p1 != p2 " << endl;\n\t}\n}\n\nint main() {\n\n\ttest01();\n\n\ttest02();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("利用具体化的模板，可以解决自定义类型的通用化")]),s._v(" "),n("li",[s._v("学习模板并不是为了写模板，而是在STL能够运用系统提供的模板")])]),s._v(" "),n("h3",{attrs:{id:"_1-3-类模板"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-类模板"}},[s._v("#")]),s._v(" 1.3 类模板")]),s._v(" "),n("h4",{attrs:{id:"_1-3-1-类模板语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-类模板语法"}},[s._v("#")]),s._v(" 1.3.1 类模板语法")]),s._v(" "),n("p",[s._v("类模板作用：")]),s._v(" "),n("ul",[n("li",[s._v("建立一个通用类，类中的成员 数据类型可以不具体制定，用一个"),n("strong",[s._v("虚拟的类型")]),s._v("来代表。")])]),s._v(" "),n("p",[n("strong",[s._v("语法：")])]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("template<typename T>\n类\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("解释：")])]),s._v(" "),n("p",[s._v("template  ---  声明创建模板")]),s._v(" "),n("p",[s._v("typename  --- 表面其后面的符号是一种数据类型，可以用class代替")]),s._v(" "),n("p",[s._v("T    ---   通用的数据类型，名称可以替换，通常为大写字母")]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <string>\n//类模板\ntemplate<class NameType, class AgeType> \nclass Person\n{\npublic:\n\tPerson(NameType name, AgeType age)\n\t{\n\t\tthis->mName = name;\n\t\tthis->mAge = age;\n\t}\n\tvoid showPerson()\n\t{\n\t\tcout << "name: " << this->mName << " age: " << this->mAge << endl;\n\t}\npublic:\n\tNameType mName;\n\tAgeType mAge;\n};\n\nvoid test01()\n{\n\t// 指定NameType 为string类型，AgeType 为 int类型\n\tPerson<string, int>P1("孙悟空", 999);\n\tP1.showPerson();\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br")])]),n("p",[s._v("总结：类模板和函数模板语法相似，在声明模板template后面加类，此类称为类模板")]),s._v(" "),n("h4",{attrs:{id:"_1-3-2-类模板与函数模板区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-类模板与函数模板区别"}},[s._v("#")]),s._v(" 1.3.2 类模板与函数模板区别")]),s._v(" "),n("p",[s._v("类模板与函数模板区别主要有两点：")]),s._v(" "),n("ol",[n("li",[s._v("类模板没有自动类型推导的使用方式")]),s._v(" "),n("li",[s._v("类模板在模板参数列表中可以有默认参数")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <string>\n//类模板\ntemplate<class NameType, class AgeType = int> \nclass Person\n{\npublic:\n\tPerson(NameType name, AgeType age)\n\t{\n\t\tthis->mName = name;\n\t\tthis->mAge = age;\n\t}\n\tvoid showPerson()\n\t{\n\t\tcout << "name: " << this->mName << " age: " << this->mAge << endl;\n\t}\npublic:\n\tNameType mName;\n\tAgeType mAge;\n};\n\n//1、类模板没有自动类型推导的使用方式\nvoid test01()\n{\n\t// Person p("孙悟空", 1000); // 错误 类模板使用时候，不可以用自动类型推导\n\tPerson <string ,int>p("孙悟空", 1000); //必须使用显示指定类型的方式，使用类模板\n\tp.showPerson();\n}\n\n//2、类模板在模板参数列表中可以有默认参数\nvoid test02()\n{\n\tPerson <string> p("猪八戒", 999); //类模板中的模板参数列表 可以指定默认参数\n\tp.showPerson();\n}\n\nint main() {\n\n\ttest01();\n\n\ttest02();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("类模板使用只能用显示指定类型方式")]),s._v(" "),n("li",[s._v("类模板中的模板参数列表可以有默认参数")])]),s._v(" "),n("h4",{attrs:{id:"_1-3-3-类模板中成员函数创建时机"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-3-类模板中成员函数创建时机"}},[s._v("#")]),s._v(" 1.3.3 类模板中成员函数创建时机")]),s._v(" "),n("p",[s._v("类模板中成员函数和普通类中成员函数创建时机是有区别的：")]),s._v(" "),n("ul",[n("li",[s._v("普通类中的成员函数一开始就可以创建")]),s._v(" "),n("li",[s._v("类模板中的成员函数在调用时才创建")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('class Person1\n{\npublic:\n\tvoid showPerson1()\n\t{\n\t\tcout << "Person1 show" << endl;\n\t}\n};\n\nclass Person2\n{\npublic:\n\tvoid showPerson2()\n\t{\n\t\tcout << "Person2 show" << endl;\n\t}\n};\n\ntemplate<class T>\nclass MyClass\n{\npublic:\n\tT obj;\n\n\t//类模板中的成员函数，并不是一开始就创建的，而是在模板调用时再生成\n\n\tvoid fun1() { obj.showPerson1(); }\n\tvoid fun2() { obj.showPerson2(); }\n\n};\n\nvoid test01()\n{\n\tMyClass<Person1> m;\n\t\n\tm.fun1();\n\n\t//m.fun2();//编译会出错，说明函数调用才会去创建成员函数\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br")])]),n("p",[s._v("总结：类模板中的成员函数并不是一开始就创建的，在调用时才去创建")]),s._v(" "),n("h4",{attrs:{id:"_1-3-4-类模板对象做函数参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-4-类模板对象做函数参数"}},[s._v("#")]),s._v(" 1.3.4 类模板对象做函数参数")]),s._v(" "),n("p",[s._v("学习目标：")]),s._v(" "),n("ul",[n("li",[s._v("类模板实例化出的对象，向函数传参的方式")])]),s._v(" "),n("p",[s._v("一共有三种传入方式：")]),s._v(" "),n("ol",[n("li",[s._v("指定传入的类型   --- 直接显示对象的数据类型")]),s._v(" "),n("li",[s._v("参数模板化           --- 将对象中的参数变为模板进行传递")]),s._v(" "),n("li",[s._v("整个类模板化       --- 将这个对象类型 模板化进行传递")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <string>\n//类模板\ntemplate<class NameType, class AgeType = int> \nclass Person\n{\npublic:\n\tPerson(NameType name, AgeType age)\n\t{\n\t\tthis->mName = name;\n\t\tthis->mAge = age;\n\t}\n\tvoid showPerson()\n\t{\n\t\tcout << "name: " << this->mName << " age: " << this->mAge << endl;\n\t}\npublic:\n\tNameType mName;\n\tAgeType mAge;\n};\n\n//1、指定传入的类型\nvoid printPerson1(Person<string, int> &p) \n{\n\tp.showPerson();\n}\nvoid test01()\n{\n\tPerson <string, int >p("孙悟空", 100);\n\tprintPerson1(p);\n}\n\n//2、参数模板化\ntemplate <class T1, class T2>\nvoid printPerson2(Person<T1, T2>&p)\n{\n\tp.showPerson();\n\tcout << "T1的类型为： " << typeid(T1).name() << endl;\n\tcout << "T2的类型为： " << typeid(T2).name() << endl;\n}\nvoid test02()\n{\n\tPerson <string, int >p("猪八戒", 90);\n\tprintPerson2(p);\n}\n\n//3、整个类模板化\ntemplate<class T>\nvoid printPerson3(T & p)\n{\n\tcout << "T的类型为： " << typeid(T).name() << endl;\n\tp.showPerson();\n\n}\nvoid test03()\n{\n\tPerson <string, int >p("唐僧", 30);\n\tprintPerson3(p);\n}\n\nint main() {\n\n\ttest01();\n\ttest02();\n\ttest03();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("通过类模板创建的对象，可以有三种方式向函数中进行传参")]),s._v(" "),n("li",[s._v("使用比较广泛是第一种：指定传入的类型")])]),s._v(" "),n("h4",{attrs:{id:"_1-3-5-类模板与继承"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-5-类模板与继承"}},[s._v("#")]),s._v(" 1.3.5 类模板与继承")]),s._v(" "),n("p",[s._v("当类模板碰到继承时，需要注意一下几点：")]),s._v(" "),n("ul",[n("li",[s._v("当子类继承的父类是一个类模板时，子类在声明的时候，要指定出父类中T的类型")]),s._v(" "),n("li",[s._v("如果不指定，编译器无法给子类分配内存")]),s._v(" "),n("li",[s._v("如果想灵活指定出父类中T的类型，子类也需变为类模板")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('template<class T>\nclass Base\n{\n\tT m;\n};\n\n//class Son:public Base  //错误，c++编译需要给子类分配内存，必须知道父类中T的类型才可以向下继承\nclass Son :public Base<int> //必须指定一个类型\n{\n};\nvoid test01()\n{\n\tSon c;\n}\n\n//类模板继承类模板 ,可以用T2指定父类中的T类型\ntemplate<class T1, class T2>\nclass Son2 :public Base<T2>\n{\npublic:\n\tSon2()\n\t{\n\t\tcout << typeid(T1).name() << endl;\n\t\tcout << typeid(T2).name() << endl;\n\t}\n};\n\nvoid test02()\n{\n\tSon2<int, char> child1;\n}\n\n\nint main() {\n\n\ttest01();\n\n\ttest02();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br")])]),n("p",[s._v("总结：如果父类是类模板，子类需要指定出父类中T的数据类型")]),s._v(" "),n("h4",{attrs:{id:"_1-3-6-类模板成员函数类外实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-6-类模板成员函数类外实现"}},[s._v("#")]),s._v(" 1.3.6 类模板成员函数类外实现")]),s._v(" "),n("p",[s._v("学习目标：能够掌握类模板中的成员函数类外实现")]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <string>\n\n//类模板中成员函数类外实现\ntemplate<class T1, class T2>\nclass Person {\npublic:\n\t//成员函数类内声明\n\tPerson(T1 name, T2 age);\n\tvoid showPerson();\n\npublic:\n\tT1 m_Name;\n\tT2 m_Age;\n};\n\n//构造函数 类外实现\ntemplate<class T1, class T2>\nPerson<T1, T2>::Person(T1 name, T2 age) {\n\tthis->m_Name = name;\n\tthis->m_Age = age;\n}\n\n//成员函数 类外实现\ntemplate<class T1, class T2>\nvoid Person<T1, T2>::showPerson() {\n\tcout << "姓名: " << this->m_Name << " 年龄:" << this->m_Age << endl;\n}\n\nvoid test01()\n{\n\tPerson<string, int> p("Tom", 20);\n\tp.showPerson();\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br")])]),n("p",[s._v("总结：类模板中成员函数类外实现时，需要加上模板参数列表")]),s._v(" "),n("h4",{attrs:{id:"_1-3-7-类模板分文件编写"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-7-类模板分文件编写"}},[s._v("#")]),s._v(" 1.3.7 类模板分文件编写")]),s._v(" "),n("p",[s._v("学习目标：")]),s._v(" "),n("ul",[n("li",[s._v("掌握类模板成员函数分文件编写产生的问题以及解决方式")])]),s._v(" "),n("p",[s._v("问题：")]),s._v(" "),n("ul",[n("li",[s._v("类模板中成员函数创建时机是在调用阶段，导致分文件编写时链接不到")])]),s._v(" "),n("p",[s._v("解决：")]),s._v(" "),n("ul",[n("li",[s._v("解决方式1：直接包含.cpp源文件")]),s._v(" "),n("li",[s._v("解决方式2：将声明和实现写到同一个文件中，并更改后缀名为.hpp，hpp是约定的名称，并不是强制")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("p",[s._v("person.hpp中代码：")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#pragma once\n#include <iostream>\nusing namespace std;\n#include <string>\n\ntemplate<class T1, class T2>\nclass Person {\npublic:\n\tPerson(T1 name, T2 age);\n\tvoid showPerson();\npublic:\n\tT1 m_Name;\n\tT2 m_Age;\n};\n\n//构造函数 类外实现\ntemplate<class T1, class T2>\nPerson<T1, T2>::Person(T1 name, T2 age) {\n\tthis->m_Name = name;\n\tthis->m_Age = age;\n}\n\n//成员函数 类外实现\ntemplate<class T1, class T2>\nvoid Person<T1, T2>::showPerson() {\n\tcout << "姓名: " << this->m_Name << " 年龄:" << this->m_Age << endl;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("p",[s._v("类模板分文件编写.cpp中代码")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include<iostream>\nusing namespace std;\n\n//#include "person.h"\n#include "person.cpp" //解决方式1，包含cpp源文件\n\n//解决方式2，将声明和实现写到一起，文件后缀名改为.hpp\n#include "person.hpp"\nvoid test01()\n{\n\tPerson<string, int> p("Tom", 10);\n\tp.showPerson();\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("总结：主流的解决方式是第二种，将类模板成员函数写到一起，并将后缀名改为.hpp")]),s._v(" "),n("h4",{attrs:{id:"_1-3-8-类模板与友元"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-8-类模板与友元"}},[s._v("#")]),s._v(" 1.3.8 类模板与友元")]),s._v(" "),n("p",[s._v("学习目标：")]),s._v(" "),n("ul",[n("li",[s._v("掌握类模板配合友元函数的类内和类外实现")])]),s._v(" "),n("p",[s._v("全局函数类内实现 - 直接在类内声明友元即可")]),s._v(" "),n("p",[s._v("全局函数类外实现 - 需要提前让编译器知道全局函数的存在")]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <string>\n\n//2、全局函数配合友元  类外实现 - 先做函数模板声明，下方在做函数模板定义，在做友元\ntemplate<class T1, class T2> class Person;\n\n//如果声明了函数模板，可以将实现写到后面，否则需要将实现体写到类的前面让编译器提前看到\n//template<class T1, class T2> void printPerson2(Person<T1, T2> & p); \n\ntemplate<class T1, class T2>\nvoid printPerson2(Person<T1, T2> & p)\n{\n\tcout << "类外实现 ---- 姓名： " << p.m_Name << " 年龄：" << p.m_Age << endl;\n}\n\ntemplate<class T1, class T2>\nclass Person\n{\n\t//1、全局函数配合友元   类内实现\n\tfriend void printPerson(Person<T1, T2> & p)\n\t{\n\t\tcout << "姓名： " << p.m_Name << " 年龄：" << p.m_Age << endl;\n\t}\n\n\n\t//全局函数配合友元  类外实现\n\tfriend void printPerson2<>(Person<T1, T2> & p);\n\npublic:\n\n\tPerson(T1 name, T2 age)\n\t{\n\t\tthis->m_Name = name;\n\t\tthis->m_Age = age;\n\t}\n\n\nprivate:\n\tT1 m_Name;\n\tT2 m_Age;\n\n};\n\n//1、全局函数在类内实现\nvoid test01()\n{\n\tPerson <string, int >p("Tom", 20);\n\tprintPerson(p);\n}\n\n\n//2、全局函数在类外实现\nvoid test02()\n{\n\tPerson <string, int >p("Jerry", 30);\n\tprintPerson2(p);\n}\n\nint main() {\n\n\t//test01();\n\n\ttest02();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br")])]),n("p",[s._v("总结：建议全局函数做类内实现，用法简单，而且编译器可以直接识别")]),s._v(" "),n("h4",{attrs:{id:"_1-3-9-类模板案例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-9-类模板案例"}},[s._v("#")]),s._v(" 1.3.9 类模板案例")]),s._v(" "),n("p",[s._v("案例描述:  实现一个通用的数组类，要求如下：")]),s._v(" "),n("ul",[n("li",[s._v("可以对内置数据类型以及自定义数据类型的数据进行存储")]),s._v(" "),n("li",[s._v("将数组中的数据存储到堆区")]),s._v(" "),n("li",[s._v("构造函数中可以传入数组的容量")]),s._v(" "),n("li",[s._v("提供对应的拷贝构造函数以及operator=防止浅拷贝问题")]),s._v(" "),n("li",[s._v("提供尾插法和尾删法对数组中的数据进行增加和删除")]),s._v(" "),n("li",[s._v("可以通过下标的方式访问数组中的元素")]),s._v(" "),n("li",[s._v("可以获取数组中当前元素个数和数组的容量")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("p",[s._v("myArray.hpp中代码")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("#pragma once\n#include <iostream>\nusing namespace std;\n\ntemplate<class T>\nclass MyArray\n{\npublic:\n    \n\t//构造函数\n\tMyArray(int capacity)\n\t{\n\t\tthis->m_Capacity = capacity;\n\t\tthis->m_Size = 0;\n\t\tpAddress = new T[this->m_Capacity];\n\t}\n\n\t//拷贝构造\n\tMyArray(const MyArray & arr)\n\t{\n\t\tthis->m_Capacity = arr.m_Capacity;\n\t\tthis->m_Size = arr.m_Size;\n\t\tthis->pAddress = new T[this->m_Capacity];\n\t\tfor (int i = 0; i < this->m_Size; i++)\n\t\t{\n\t\t\t//如果T为对象，而且还包含指针，必须需要重载 = 操作符，因为这个等号不是 构造 而是赋值，\n\t\t\t// 普通类型可以直接= 但是指针类型需要深拷贝\n\t\t\tthis->pAddress[i] = arr.pAddress[i];\n\t\t}\n\t}\n\n\t//重载= 操作符  防止浅拷贝问题\n\tMyArray& operator=(const MyArray& myarray) {\n\n\t\tif (this->pAddress != NULL) {\n\t\t\tdelete[] this->pAddress;\n\t\t\tthis->m_Capacity = 0;\n\t\t\tthis->m_Size = 0;\n\t\t}\n\n\t\tthis->m_Capacity = myarray.m_Capacity;\n\t\tthis->m_Size = myarray.m_Size;\n\t\tthis->pAddress = new T[this->m_Capacity];\n\t\tfor (int i = 0; i < this->m_Size; i++) {\n\t\t\tthis->pAddress[i] = myarray[i];\n\t\t}\n\t\treturn *this;\n\t}\n\n\t//重载[] 操作符  arr[0]\n\tT& operator [](int index)\n\t{\n\t\treturn this->pAddress[index]; //不考虑越界，用户自己去处理\n\t}\n\n\t//尾插法\n\tvoid Push_back(const T & val)\n\t{\n\t\tif (this->m_Capacity == this->m_Size)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis->pAddress[this->m_Size] = val;\n\t\tthis->m_Size++;\n\t}\n\n\t//尾删法\n\tvoid Pop_back()\n\t{\n\t\tif (this->m_Size == 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis->m_Size--;\n\t}\n\n\t//获取数组容量\n\tint getCapacity()\n\t{\n\t\treturn this->m_Capacity;\n\t}\n\n\t//获取数组大小\n\tint\tgetSize()\n\t{\n\t\treturn this->m_Size;\n\t}\n\n\n\t//析构\n\t~MyArray()\n\t{\n\t\tif (this->pAddress != NULL)\n\t\t{\n\t\t\tdelete[] this->pAddress;\n\t\t\tthis->pAddress = NULL;\n\t\t\tthis->m_Capacity = 0;\n\t\t\tthis->m_Size = 0;\n\t\t}\n\t}\n\nprivate:\n\tT * pAddress;  //指向一个堆空间，这个空间存储真正的数据\n\tint m_Capacity; //容量\n\tint m_Size;   // 大小\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br")])]),n("p",[s._v("类模板案例—数组类封装.cpp中")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include "myArray.hpp"\n#include <string>\n\nvoid printIntArray(MyArray<int>& arr) {\n\tfor (int i = 0; i < arr.getSize(); i++) {\n\t\tcout << arr[i] << " ";\n\t}\n\tcout << endl;\n}\n\n//测试内置数据类型\nvoid test01()\n{\n\tMyArray<int> array1(10);\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tarray1.Push_back(i);\n\t}\n\tcout << "array1打印输出：" << endl;\n\tprintIntArray(array1);\n\tcout << "array1的大小：" << array1.getSize() << endl;\n\tcout << "array1的容量：" << array1.getCapacity() << endl;\n\n\tcout << "--------------------------" << endl;\n\n\tMyArray<int> array2(array1);\n\tarray2.Pop_back();\n\tcout << "array2打印输出：" << endl;\n\tprintIntArray(array2);\n\tcout << "array2的大小：" << array2.getSize() << endl;\n\tcout << "array2的容量：" << array2.getCapacity() << endl;\n}\n\n//测试自定义数据类型\nclass Person {\npublic:\n\tPerson() {} \n\t\tPerson(string name, int age) {\n\t\tthis->m_Name = name;\n\t\tthis->m_Age = age;\n\t}\npublic:\n\tstring m_Name;\n\tint m_Age;\n};\n\nvoid printPersonArray(MyArray<Person>& personArr)\n{\n\tfor (int i = 0; i < personArr.getSize(); i++) {\n\t\tcout << "姓名：" << personArr[i].m_Name << " 年龄： " << personArr[i].m_Age << endl;\n\t}\n\n}\n\nvoid test02()\n{\n\t//创建数组\n\tMyArray<Person> pArray(10);\n\tPerson p1("孙悟空", 30);\n\tPerson p2("韩信", 20);\n\tPerson p3("妲己", 18);\n\tPerson p4("王昭君", 15);\n\tPerson p5("赵云", 24);\n\n\t//插入数据\n\tpArray.Push_back(p1);\n\tpArray.Push_back(p2);\n\tpArray.Push_back(p3);\n\tpArray.Push_back(p4);\n\tpArray.Push_back(p5);\n\n\tprintPersonArray(pArray);\n\n\tcout << "pArray的大小：" << pArray.getSize() << endl;\n\tcout << "pArray的容量：" << pArray.getCapacity() << endl;\n\n}\n\nint main() {\n\n\t//test01();\n\n\ttest02();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("p",[s._v("能够利用所学知识点实现通用的数组")]),s._v(" "),n("h2",{attrs:{id:"_2-stl初识"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-stl初识"}},[s._v("#")]),s._v(" 2 STL初识")]),s._v(" "),n("h3",{attrs:{id:"_2-1-stl的诞生"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-stl的诞生"}},[s._v("#")]),s._v(" 2.1 STL的诞生")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("长久以来，软件界一直希望建立一种可重复利用的东西")])]),s._v(" "),n("li",[n("p",[s._v("C++的"),n("strong",[s._v("面向对象")]),s._v("和"),n("strong",[s._v("泛型编程")]),s._v("思想，目的就是"),n("strong",[s._v("复用性的提升")])])]),s._v(" "),n("li",[n("p",[s._v("大多情况下，数据结构和算法都未能有一套标准,导致被迫从事大量重复工作")])]),s._v(" "),n("li",[n("p",[s._v("为了建立数据结构和算法的一套标准,诞生了"),n("strong",[s._v("STL")])])])]),s._v(" "),n("h3",{attrs:{id:"_2-2-stl基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-stl基本概念"}},[s._v("#")]),s._v(" 2.2 STL基本概念")]),s._v(" "),n("ul",[n("li",[s._v("STL(Standard Template Library,"),n("strong",[s._v("标准模板库")]),s._v(")")]),s._v(" "),n("li",[s._v("STL 从广义上分为: "),n("strong",[s._v("容器(container) 算法(algorithm) 迭代器(iterator)")])]),s._v(" "),n("li",[n("strong",[s._v("容器")]),s._v("和"),n("strong",[s._v("算法")]),s._v("之间通过"),n("strong",[s._v("迭代器")]),s._v("进行无缝连接。")]),s._v(" "),n("li",[s._v("STL 几乎所有的代码都采用了模板类或者模板函数")])]),s._v(" "),n("h3",{attrs:{id:"_2-3-stl六大组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-stl六大组件"}},[s._v("#")]),s._v(" 2.3 STL六大组件")]),s._v(" "),n("p",[s._v("STL大体分为六大组件，分别是:"),n("strong",[s._v("容器、算法、迭代器、仿函数、适配器（配接器）、空间配置器")])]),s._v(" "),n("ol",[n("li",[s._v("容器：各种数据结构，如vector、list、deque、set、map等,用来存放数据。")]),s._v(" "),n("li",[s._v("算法：各种常用的算法，如sort、find、copy、for_each等")]),s._v(" "),n("li",[s._v("迭代器：扮演了容器与算法之间的胶合剂。")]),s._v(" "),n("li",[s._v("仿函数：行为类似函数，可作为算法的某种策略。")]),s._v(" "),n("li",[s._v("适配器：一种用来修饰容器或者仿函数或迭代器接口的东西。")]),s._v(" "),n("li",[s._v("空间配置器：负责空间的配置与管理。")])]),s._v(" "),n("h3",{attrs:{id:"_2-4-stl中容器、算法、迭代器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-stl中容器、算法、迭代器"}},[s._v("#")]),s._v(" 2.4  STL中容器、算法、迭代器")]),s._v(" "),n("p",[s._v("**容器：**置物之所也")]),s._v(" "),n("p",[s._v("STL"),n("strong",[s._v("容器")]),s._v("就是将运用"),n("strong",[s._v("最广泛的一些数据结构")]),s._v("实现出来")]),s._v(" "),n("p",[s._v("常用的数据结构：数组, 链表,树, 栈, 队列, 集合, 映射表 等")]),s._v(" "),n("p",[s._v("这些容器分为"),n("strong",[s._v("序列式容器")]),s._v("和"),n("strong",[s._v("关联式容器")]),s._v("两种:")]),s._v(" "),n("p",[s._v("​\t"),n("strong",[s._v("序列式容器")]),s._v(":强调值的排序，序列式容器中的每个元素均有固定的位置。\n​\t"),n("strong",[s._v("关联式容器")]),s._v(":二叉树结构，各元素之间没有严格的物理上的顺序关系")]),s._v(" "),n("p",[s._v("**算法：**问题之解法也")]),s._v(" "),n("p",[s._v("有限的步骤，解决逻辑或数学上的问题，这一门学科我们叫做算法(Algorithms)")]),s._v(" "),n("p",[s._v("算法分为:"),n("strong",[s._v("质变算法")]),s._v("和"),n("strong",[s._v("非质变算法")]),s._v("。")]),s._v(" "),n("p",[s._v("质变算法：是指运算过程中会更改区间内的元素的内容。例如拷贝，替换，删除等等")]),s._v(" "),n("p",[s._v("非质变算法：是指运算过程中不会更改区间内的元素内容，例如查找、计数、遍历、寻找极值等等")]),s._v(" "),n("p",[s._v("**迭代器：**容器和算法之间粘合剂")]),s._v(" "),n("p",[s._v("提供一种方法，使之能够依序寻访某个容器所含的各个元素，而又无需暴露该容器的内部表示方式。")]),s._v(" "),n("p",[s._v("每个容器都有自己专属的迭代器")]),s._v(" "),n("p",[s._v("迭代器使用非常类似于指针，初学阶段我们可以先理解迭代器为指针")]),s._v(" "),n("p",[s._v("迭代器种类：")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("种类")]),s._v(" "),n("th",[s._v("功能")]),s._v(" "),n("th",[s._v("支持运算")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("输入迭代器")]),s._v(" "),n("td",[s._v("对数据的只读访问")]),s._v(" "),n("td",[s._v("只读，支持++、==、！=")])]),s._v(" "),n("tr",[n("td",[s._v("输出迭代器")]),s._v(" "),n("td",[s._v("对数据的只写访问")]),s._v(" "),n("td",[s._v("只写，支持++")])]),s._v(" "),n("tr",[n("td",[s._v("前向迭代器")]),s._v(" "),n("td",[s._v("读写操作，并能向前推进迭代器")]),s._v(" "),n("td",[s._v("读写，支持++、==、！=")])]),s._v(" "),n("tr",[n("td",[s._v("双向迭代器")]),s._v(" "),n("td",[s._v("读写操作，并能向前和向后操作")]),s._v(" "),n("td",[s._v("读写，支持++、--，")])]),s._v(" "),n("tr",[n("td",[s._v("随机访问迭代器")]),s._v(" "),n("td",[s._v("读写操作，可以以跳跃的方式访问任意数据，功能最强的迭代器")]),s._v(" "),n("td",[s._v("读写，支持++、--、[n]、-n、<、<=、>、>=")])])])]),s._v(" "),n("p",[s._v("常用的容器中迭代器种类为双向迭代器，和随机访问迭代器")]),s._v(" "),n("h3",{attrs:{id:"_2-5-容器算法迭代器初识"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-容器算法迭代器初识"}},[s._v("#")]),s._v(" 2.5 容器算法迭代器初识")]),s._v(" "),n("p",[s._v("了解STL中容器、算法、迭代器概念之后，我们利用代码感受STL的魅力")]),s._v(" "),n("p",[s._v("STL中最常用的容器为Vector，可以理解为数组，下面我们将学习如何向这个容器中插入数据、并遍历这个容器")]),s._v(" "),n("h4",{attrs:{id:"_2-5-1-vector存放内置数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-1-vector存放内置数据类型"}},[s._v("#")]),s._v(" 2.5.1 vector存放内置数据类型")]),s._v(" "),n("p",[s._v("容器：     "),n("code",[s._v("vector")])]),s._v(" "),n("p",[s._v("算法：     "),n("code",[s._v("for_each")])]),s._v(" "),n("p",[s._v("迭代器： "),n("code",[s._v("vector<int>::iterator")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <vector>\n#include <algorithm>\n\nvoid MyPrint(int val)\n{\n\tcout << val << endl;\n}\n\nvoid test01() {\n\n\t//创建vector容器对象，并且通过模板参数指定容器中存放的数据的类型\n\tvector<int> v;\n\t//向容器中放数据\n\tv.push_back(10);\n\tv.push_back(20);\n\tv.push_back(30);\n\tv.push_back(40);\n\n\t//每一个容器都有自己的迭代器，迭代器是用来遍历容器中的元素\n\t//v.begin()返回迭代器，这个迭代器指向容器中第一个数据\n\t//v.end()返回迭代器，这个迭代器指向容器元素的最后一个元素的下一个位置\n\t//vector<int>::iterator 拿到vector<int>这种容器的迭代器类型\n\n\tvector<int>::iterator pBegin = v.begin();\n\tvector<int>::iterator pEnd = v.end();\n\n\t//第一种遍历方式：\n\twhile (pBegin != pEnd) {\n\t\tcout << *pBegin << endl;\n\t\tpBegin++;\n\t}\n\n\t\n\t//第二种遍历方式：\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << endl;\n\t}\n\tcout << endl;\n\n\t//第三种遍历方式：\n\t//使用STL提供标准遍历算法  头文件 algorithm\n\tfor_each(v.begin(), v.end(), MyPrint);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br")])]),n("h4",{attrs:{id:"_2-5-2-vector存放自定义数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-2-vector存放自定义数据类型"}},[s._v("#")]),s._v(" 2.5.2 Vector存放自定义数据类型")]),s._v(" "),n("p",[s._v("学习目标：vector中存放自定义数据类型，并打印输出")]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <vector>\n#include <string>\n\n//自定义数据类型\nclass Person {\npublic:\n\tPerson(string name, int age) {\n\t\tmName = name;\n\t\tmAge = age;\n\t}\npublic:\n\tstring mName;\n\tint mAge;\n};\n//存放对象\nvoid test01() {\n\n\tvector<Person> v;\n\n\t//创建数据\n\tPerson p1("aaa", 10);\n\tPerson p2("bbb", 20);\n\tPerson p3("ccc", 30);\n\tPerson p4("ddd", 40);\n\tPerson p5("eee", 50);\n\n\tv.push_back(p1);\n\tv.push_back(p2);\n\tv.push_back(p3);\n\tv.push_back(p4);\n\tv.push_back(p5);\n\n\tfor (vector<Person>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << "Name:" << (*it).mName << " Age:" << (*it).mAge << endl;\n\n\t}\n}\n\n\n//放对象指针\nvoid test02() {\n\n\tvector<Person*> v;\n\n\t//创建数据\n\tPerson p1("aaa", 10);\n\tPerson p2("bbb", 20);\n\tPerson p3("ccc", 30);\n\tPerson p4("ddd", 40);\n\tPerson p5("eee", 50);\n\n\tv.push_back(&p1);\n\tv.push_back(&p2);\n\tv.push_back(&p3);\n\tv.push_back(&p4);\n\tv.push_back(&p5);\n\n\tfor (vector<Person*>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tPerson * p = (*it);\n\t\tcout << "Name:" << p->mName << " Age:" << (*it)->mAge << endl;\n\t}\n}\n\n\nint main() {\n\n\ttest01();\n    \n\ttest02();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br")])]),n("h4",{attrs:{id:"_2-5-3-vector容器嵌套容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-3-vector容器嵌套容器"}},[s._v("#")]),s._v(" 2.5.3 Vector容器嵌套容器")]),s._v(" "),n("p",[s._v("学习目标：容器中嵌套容器，我们将所有数据进行遍历输出")]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <vector>\n\n//容器嵌套容器\nvoid test01() {\n\n\tvector< vector<int> >  v;\n\n\tvector<int> v1;\n\tvector<int> v2;\n\tvector<int> v3;\n\tvector<int> v4;\n\n\tfor (int i = 0; i < 4; i++) {\n\t\tv1.push_back(i + 1);\n\t\tv2.push_back(i + 2);\n\t\tv3.push_back(i + 3);\n\t\tv4.push_back(i + 4);\n\t}\n\n\t//将容器元素插入到vector v中\n\tv.push_back(v1);\n\tv.push_back(v2);\n\tv.push_back(v3);\n\tv.push_back(v4);\n\n\n\tfor (vector<vector<int>>::iterator it = v.begin(); it != v.end(); it++) {\n\n\t\tfor (vector<int>::iterator vit = (*it).begin(); vit != (*it).end(); vit++) {\n\t\t\tcout << *vit << " ";\n\t\t}\n\t\tcout << endl;\n\t}\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br")])]),n("h2",{attrs:{id:"_3-stl-常用容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-stl-常用容器"}},[s._v("#")]),s._v(" 3 STL- 常用容器")]),s._v(" "),n("h3",{attrs:{id:"_3-1-string容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-string容器"}},[s._v("#")]),s._v(" 3.1 string容器")]),s._v(" "),n("h4",{attrs:{id:"_3-1-1-string基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-string基本概念"}},[s._v("#")]),s._v(" 3.1.1 string基本概念")]),s._v(" "),n("p",[n("strong",[s._v("本质：")])]),s._v(" "),n("ul",[n("li",[s._v("string是C++风格的字符串，而string本质上是一个类")])]),s._v(" "),n("p",[n("strong",[s._v("string和char * 区别：")])]),s._v(" "),n("ul",[n("li",[s._v("char * 是一个指针")]),s._v(" "),n("li",[s._v("string是一个类，类内部封装了char*，管理这个字符串，是一个char*型的容器。")])]),s._v(" "),n("p",[n("strong",[s._v("特点：")])]),s._v(" "),n("p",[s._v("string 类内部封装了很多成员方法")]),s._v(" "),n("p",[s._v("例如：查找find，拷贝copy，删除delete 替换replace，插入insert")]),s._v(" "),n("p",[s._v("string管理char*所分配的内存，不用担心复制越界和取值越界等，由类内部进行负责")]),s._v(" "),n("h4",{attrs:{id:"_3-1-2-string构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-string构造函数"}},[s._v("#")]),s._v(" 3.1.2 string构造函数")]),s._v(" "),n("p",[s._v("构造函数原型：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("string();")]),s._v("          \t\t\t\t//创建一个空的字符串 例如: string str;\n"),n("code",[s._v("string(const char* s);")]),s._v("\t        //使用字符串s初始化")]),s._v(" "),n("li",[n("code",[s._v("string(const string& str);")]),s._v("    //使用一个string对象初始化另一个string对象")]),s._v(" "),n("li",[n("code",[s._v("string(int n, char c);")]),s._v("           //使用n个字符c初始化")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <string>\n//string构造\nvoid test01()\n{\n\tstring s1; //创建空字符串，调用无参构造函数\n\tcout << "str1 = " << s1 << endl;\n\n\tconst char* str = "hello world";\n\tstring s2(str); //把c_string转换成了string\n\n\tcout << "str2 = " << s2 << endl;\n\n\tstring s3(s2); //调用拷贝构造函数\n\tcout << "str3 = " << s3 << endl;\n\n\tstring s4(10, \'a\');\n\tcout << "str3 = " << s3 << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("p",[s._v("总结：string的多种构造方式没有可比性，灵活使用即可")]),s._v(" "),n("h4",{attrs:{id:"_3-1-3-string赋值操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-string赋值操作"}},[s._v("#")]),s._v(" 3.1.3 string赋值操作")]),s._v(" "),n("p",[s._v("功能描述：")]),s._v(" "),n("ul",[n("li",[s._v("给string字符串进行赋值")])]),s._v(" "),n("p",[s._v("赋值的函数原型：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("string& operator=(const char* s);")]),s._v("             //char*类型字符串 赋值给当前的字符串")]),s._v(" "),n("li",[n("code",[s._v("string& operator=(const string &s);")]),s._v("         //把字符串s赋给当前的字符串")]),s._v(" "),n("li",[n("code",[s._v("string& operator=(char c);")]),s._v("                          //字符赋值给当前的字符串")]),s._v(" "),n("li",[n("code",[s._v("string& assign(const char *s);")]),s._v("                  //把字符串s赋给当前的字符串")]),s._v(" "),n("li",[n("code",[s._v("string& assign(const char *s, int n);")]),s._v("     //把字符串s的前n个字符赋给当前的字符串")]),s._v(" "),n("li",[n("code",[s._v("string& assign(const string &s);")]),s._v("              //把字符串s赋给当前字符串")]),s._v(" "),n("li",[n("code",[s._v("string& assign(int n, char c);")]),s._v("                  //用n个字符c赋给当前字符串")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//赋值\nvoid test01()\n{\n\tstring str1;\n\tstr1 = "hello world";\n\tcout << "str1 = " << str1 << endl;\n\n\tstring str2;\n\tstr2 = str1;\n\tcout << "str2 = " << str2 << endl;\n\n\tstring str3;\n\tstr3 = \'a\';\n\tcout << "str3 = " << str3 << endl;\n\n\tstring str4;\n\tstr4.assign("hello c++");\n\tcout << "str4 = " << str4 << endl;\n\n\tstring str5;\n\tstr5.assign("hello c++",5);\n\tcout << "str5 = " << str5 << endl;\n\n\n\tstring str6;\n\tstr6.assign(str5);\n\tcout << "str6 = " << str6 << endl;\n\n\tstring str7;\n\tstr7.assign(5, \'x\');\n\tcout << "str7 = " << str7 << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("p",[s._v("​\tstring的赋值方式很多，"),n("code",[s._v("operator=")]),s._v("  这种方式是比较实用的")]),s._v(" "),n("h4",{attrs:{id:"_3-1-4-string字符串拼接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-4-string字符串拼接"}},[s._v("#")]),s._v(" 3.1.4 string字符串拼接")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("实现在字符串末尾拼接字符串")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("string& operator+=(const char* str);")]),s._v("                   //重载+=操作符")]),s._v(" "),n("li",[n("code",[s._v("string& operator+=(const char c);")]),s._v("                         //重载+=操作符")]),s._v(" "),n("li",[n("code",[s._v("string& operator+=(const string& str);")]),s._v("                //重载+=操作符")]),s._v(" "),n("li",[n("code",[s._v("string& append(const char *s);")]),s._v("                               //把字符串s连接到当前字符串结尾")]),s._v(" "),n("li",[n("code",[s._v("string& append(const char *s, int n);")]),s._v("                 //把字符串s的前n个字符连接到当前字符串结尾")]),s._v(" "),n("li",[n("code",[s._v("string& append(const string &s);")]),s._v("                           //同operator+=(const string& str)")]),s._v(" "),n("li",[n("code",[s._v("string& append(const string &s, int pos, int n);")]),s._v("//字符串s中从pos开始的n个字符连接到字符串结尾")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//字符串拼接\nvoid test01()\n{\n\tstring str1 = "我";\n\n\tstr1 += "爱玩游戏";\n\n\tcout << "str1 = " << str1 << endl;\n\t\n\tstr1 += \':\';\n\n\tcout << "str1 = " << str1 << endl;\n\n\tstring str2 = "LOL DNF";\n\n\tstr1 += str2;\n\n\tcout << "str1 = " << str1 << endl;\n\n\tstring str3 = "I";\n\tstr3.append(" love ");\n\tstr3.append("game abcde", 4);\n\t//str3.append(str2);\n\tstr3.append(str2, 4, 3); // 从下标4位置开始 ，截取3个字符，拼接到字符串末尾\n\tcout << "str3 = " << str3 << endl;\n}\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("p",[s._v("总结：字符串拼接的重载版本很多，初学阶段记住几种即可")]),s._v(" "),n("h4",{attrs:{id:"_3-1-5-string查找和替换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-5-string查找和替换"}},[s._v("#")]),s._v(" 3.1.5 string查找和替换")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("查找：查找指定字符串是否存在")]),s._v(" "),n("li",[s._v("替换：在指定的位置替换字符串")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("int find(const string& str, int pos = 0) const;")]),s._v("              //查找str第一次出现位置,从pos开始查找")]),s._v(" "),n("li",[n("code",[s._v("int find(const char* s, int pos = 0) const;")]),s._v("                     //查找s第一次出现位置,从pos开始查找")]),s._v(" "),n("li",[n("code",[s._v("int find(const char* s, int pos, int n) const;")]),s._v("               //从pos位置查找s的前n个字符第一次位置")]),s._v(" "),n("li",[n("code",[s._v("int find(const char c, int pos = 0) const;")]),s._v("                       //查找字符c第一次出现位置")]),s._v(" "),n("li",[n("code",[s._v("int rfind(const string& str, int pos = npos) const;")]),s._v("      //查找str最后一次位置,从pos开始查找")]),s._v(" "),n("li",[n("code",[s._v("int rfind(const char* s, int pos = npos) const;")]),s._v("              //查找s最后一次出现位置,从pos开始查找")]),s._v(" "),n("li",[n("code",[s._v("int rfind(const char* s, int pos, int n) const;")]),s._v("              //从pos查找s的前n个字符最后一次位置")]),s._v(" "),n("li",[n("code",[s._v("int rfind(const char c, int pos = 0) const;")]),s._v("                      //查找字符c最后一次出现位置")]),s._v(" "),n("li",[n("code",[s._v("string& replace(int pos, int n, const string& str);")]),s._v("       //替换从pos开始n个字符为字符串str")]),s._v(" "),n("li",[n("code",[s._v("string& replace(int pos, int n,const char* s);")]),s._v("                 //替换从pos开始的n个字符为字符串s")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//查找和替换\nvoid test01()\n{\n\t//查找\n\tstring str1 = "abcdefgde";\n\n\tint pos = str1.find("de");\n\n\tif (pos == -1)\n\t{\n\t\tcout << "未找到" << endl;\n\t}\n\telse\n\t{\n\t\tcout << "pos = " << pos << endl;\n\t}\n\t\n\n\tpos = str1.rfind("de");\n\n\tcout << "pos = " << pos << endl;\n\n}\n\nvoid test02()\n{\n\t//替换\n\tstring str1 = "abcdefgde";\n\tstr1.replace(1, 3, "1111");\n\n\tcout << "str1 = " << str1 << endl;\n}\n\nint main() {\n\n\t//test01();\n\t//test02();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("find查找是从左往后，rfind从右往左")]),s._v(" "),n("li",[s._v("find找到字符串后返回查找的第一个字符位置，找不到返回-1")]),s._v(" "),n("li",[s._v("replace在替换时，要指定从哪个位置起，多少个字符，替换成什么样的字符串")])]),s._v(" "),n("h4",{attrs:{id:"_3-1-6-string字符串比较"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-6-string字符串比较"}},[s._v("#")]),s._v(" 3.1.6 string字符串比较")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("字符串之间的比较")])]),s._v(" "),n("p",[n("strong",[s._v("比较方式：")])]),s._v(" "),n("ul",[n("li",[s._v("字符串比较是按字符的ASCII码进行对比")])]),s._v(" "),n("p",[s._v("= 返回   0")]),s._v(" "),n("p",[s._v("> 返回   1")]),s._v(" "),n("p",[s._v("< 返回  -1")]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("int compare(const string &s) const;")]),s._v("  //与字符串s比较")]),s._v(" "),n("li",[n("code",[s._v("int compare(const char *s) const;")]),s._v("      //与字符串s比较")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//字符串比较\nvoid test01()\n{\n\n\tstring s1 = "hello";\n\tstring s2 = "aello";\n\n\tint ret = s1.compare(s2);\n\n\tif (ret == 0) {\n\t\tcout << "s1 等于 s2" << endl;\n\t}\n\telse if (ret > 0)\n\t{\n\t\tcout << "s1 大于 s2" << endl;\n\t}\n\telse\n\t{\n\t\tcout << "s1 小于 s2" << endl;\n\t}\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("p",[s._v("总结：字符串对比主要是用于比较两个字符串是否相等，判断谁大谁小的意义并不是很大")]),s._v(" "),n("h4",{attrs:{id:"_3-1-7-string字符存取"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-7-string字符存取"}},[s._v("#")]),s._v(" 3.1.7 string字符存取")]),s._v(" "),n("p",[s._v("string中单个字符存取方式有两种")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("char& operator[](int n);")]),s._v("     //通过[]方式取字符")]),s._v(" "),n("li",[n("code",[s._v("char& at(int n);")]),s._v("                    //通过at方法获取字符")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void test01()\n{\n\tstring str = "hello world";\n\n\tfor (int i = 0; i < str.size(); i++)\n\t{\n\t\tcout << str[i] << " ";\n\t}\n\tcout << endl;\n\n\tfor (int i = 0; i < str.size(); i++)\n\t{\n\t\tcout << str.at(i) << " ";\n\t}\n\tcout << endl;\n\n\n\t//字符修改\n\tstr[0] = \'x\';\n\tstr.at(1) = \'x\';\n\tcout << str << endl;\n\t\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br")])]),n("p",[n("input",{attrs:{type:"checkbox",id:"checkbox10"}}),n("label",{attrs:{for:"checkbox10"}},[s._v("或 at")])]),s._v(" "),n("h4",{attrs:{id:"_3-1-8-string插入和删除"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-8-string插入和删除"}},[s._v("#")]),s._v(" 3.1.8 string插入和删除")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("对string字符串进行插入和删除字符操作")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("string& insert(int pos, const char* s);")]),s._v("                //插入字符串")]),s._v(" "),n("li",[n("code",[s._v("string& insert(int pos, const string& str);")]),s._v("        //插入字符串")]),s._v(" "),n("li",[n("code",[s._v("string& insert(int pos, int n, char c);")]),s._v("                //在指定位置插入n个字符c")]),s._v(" "),n("li",[n("code",[s._v("string& erase(int pos, int n = npos);")]),s._v("                    //删除从Pos开始的n个字符")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//字符串插入和删除\nvoid test01()\n{\n\tstring str = "hello";\n\tstr.insert(1, "111");\n\tcout << str << endl;\n\n\tstr.erase(1, 3);  //从1号位置开始3个字符\n\tcout << str << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("p",[s._v("**总结：**插入和删除的起始下标都是从0开始")]),s._v(" "),n("h4",{attrs:{id:"_3-1-9-string子串"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-9-string子串"}},[s._v("#")]),s._v(" 3.1.9 string子串")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("从字符串中获取想要的子串")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("string substr(int pos = 0, int n = npos) const;")]),s._v("   //返回由pos开始的n个字符组成的字符串")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//子串\nvoid test01()\n{\n\n\tstring str = "abcdefg";\n\tstring subStr = str.substr(1, 3);\n\tcout << "subStr = " << subStr << endl;\n\n\tstring email = "hello@sina.com";\n\tint pos = email.find("@");\n\tstring username = email.substr(0, pos);\n\tcout << "username: " << username << endl;\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])]),n("p",[s._v("**总结：**灵活的运用求子串功能，可以在实际开发中获取有效的信息")]),s._v(" "),n("h3",{attrs:{id:"_3-2-vector容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-vector容器"}},[s._v("#")]),s._v(" 3.2 vector容器")]),s._v(" "),n("h4",{attrs:{id:"_3-2-1-vector基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-vector基本概念"}},[s._v("#")]),s._v(" 3.2.1 vector基本概念")]),s._v(" "),n("p",[n("strong",[s._v("功能：")])]),s._v(" "),n("ul",[n("li",[s._v("vector数据结构和"),n("strong",[s._v("数组非常相似")]),s._v("，也称为"),n("strong",[s._v("单端数组")])])]),s._v(" "),n("p",[n("strong",[s._v("vector与普通数组区别：")])]),s._v(" "),n("ul",[n("li",[s._v("不同之处在于数组是静态空间，而vector可以"),n("strong",[s._v("动态扩展")])])]),s._v(" "),n("p",[n("strong",[s._v("动态扩展：")])]),s._v(" "),n("ul",[n("li",[s._v("并不是在原空间之后续接新空间，而是找更大的内存空间，然后将原数据拷贝新空间，释放原空间")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Sunc4127/image-hosting/202209220929128.jpg",alt:"说明: 2015-11-10_151152"}})]),s._v(" "),n("ul",[n("li",[s._v("vector容器的迭代器是支持随机访问的迭代器")])]),s._v(" "),n("h4",{attrs:{id:"_3-2-2-vector构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-vector构造函数"}},[s._v("#")]),s._v(" 3.2.2 vector构造函数")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("创建vector容器")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("vector<T> v;")]),s._v("               \t\t     //采用模板实现类实现，默认构造函数")]),s._v(" "),n("li",[n("code",[s._v("vector(v.begin(), v.end());")]),s._v("       //将v[begin(), end())区间中的元素拷贝给本身。")]),s._v(" "),n("li",[n("code",[s._v("vector(n, elem);")]),s._v("                            //构造函数将n个elem拷贝给本身。")]),s._v(" "),n("li",[n("code",[s._v("vector(const vector &vec);")]),s._v("         //拷贝构造函数。")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <vector>\n\nvoid printVector(vector<int>& v) {\n\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tvector<int> v1; //无参构造\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv1.push_back(i);\n\t}\n\tprintVector(v1);\n\n\tvector<int> v2(v1.begin(), v1.end());\n\tprintVector(v2);\n\n\tvector<int> v3(10, 100);\n\tprintVector(v3);\n\t\n\tvector<int> v4(v3);\n\tprintVector(v4);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br")])]),n("p",[s._v("**总结：**vector的多种构造方式没有可比性，灵活使用即可")]),s._v(" "),n("h4",{attrs:{id:"_3-2-3-vector赋值操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-vector赋值操作"}},[s._v("#")]),s._v(" 3.2.3 vector赋值操作")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("给vector容器进行赋值")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("vector& operator=(const vector &vec);")]),s._v("//重载等号操作符")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("assign(beg, end);")]),s._v("       //将[beg, end)区间中的数据拷贝赋值给本身。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("assign(n, elem);")]),s._v("        //将n个elem拷贝赋值给本身。")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <vector>\n\nvoid printVector(vector<int>& v) {\n\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\n//赋值操作\nvoid test01()\n{\n\tvector<int> v1; //无参构造\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv1.push_back(i);\n\t}\n\tprintVector(v1);\n\n\tvector<int>v2;\n\tv2 = v1;\n\tprintVector(v2);\n\n\tvector<int>v3;\n\tv3.assign(v1.begin(), v1.end());\n\tprintVector(v3);\n\n\tvector<int>v4;\n\tv4.assign(10, 100);\n\tprintVector(v4);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br")])]),n("p",[s._v("总结： vector赋值方式比较简单，使用operator=，或者assign都可以")]),s._v(" "),n("h4",{attrs:{id:"_3-2-4-vector容量和大小"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-4-vector容量和大小"}},[s._v("#")]),s._v(" 3.2.4  vector容量和大小")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("对vector容器的容量和大小操作")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("empty();")]),s._v("                            //判断容器是否为空")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("capacity();")]),s._v("                      //容器的容量")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("size();")]),s._v("                              //返回容器中元素的个数")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("resize(int num);")]),s._v("             //重新指定容器的长度为num，若容器变长，则以默认值填充新位置。")]),s._v(" "),n("p",[s._v("​\t\t\t\t\t      //如果容器变短，则末尾超出容器长度的元素被删除。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("resize(int num, elem);")]),s._v("  //重新指定容器的长度为num，若容器变长，则以elem值填充新位置。")]),s._v(" "),n("p",[s._v("​\t\t\t\t              //如果容器变短，则末尾超出容器长度的元素被删除")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <vector>\n\nvoid printVector(vector<int>& v) {\n\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tvector<int> v1;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv1.push_back(i);\n\t}\n\tprintVector(v1);\n\tif (v1.empty())\n\t{\n\t\tcout << "v1为空" << endl;\n\t}\n\telse\n\t{\n\t\tcout << "v1不为空" << endl;\n\t\tcout << "v1的容量 = " << v1.capacity() << endl;\n\t\tcout << "v1的大小 = " << v1.size() << endl;\n\t}\n\n\t//resize 重新指定大小 ，若指定的更大，默认用0填充新位置，可以利用重载版本替换默认填充\n\tv1.resize(15,10);\n\tprintVector(v1);\n\n\t//resize 重新指定大小 ，若指定的更小，超出部分元素被删除\n\tv1.resize(5);\n\tprintVector(v1);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("判断是否为空  --- empty")]),s._v(" "),n("li",[s._v("返回元素个数  --- size")]),s._v(" "),n("li",[s._v("返回容器容量  --- capacity")]),s._v(" "),n("li",[s._v("重新指定大小  ---  resize")])]),s._v(" "),n("h4",{attrs:{id:"_3-2-5-vector插入和删除"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-5-vector插入和删除"}},[s._v("#")]),s._v(" 3.2.5 vector插入和删除")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("对vector容器进行插入、删除操作")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("push_back(ele);")]),s._v("                                         //尾部插入元素ele")]),s._v(" "),n("li",[n("code",[s._v("pop_back();")]),s._v("                                                //删除最后一个元素")]),s._v(" "),n("li",[n("code",[s._v("insert(const_iterator pos, ele);")]),s._v("        //迭代器指向位置pos插入元素ele")]),s._v(" "),n("li",[n("code",[s._v("insert(const_iterator pos, int count,ele);")]),s._v("//迭代器指向位置pos插入count个元素ele")]),s._v(" "),n("li",[n("code",[s._v("erase(const_iterator pos);")]),s._v("                     //删除迭代器指向的元素")]),s._v(" "),n("li",[n("code",[s._v("erase(const_iterator start, const_iterator end);")]),s._v("//删除迭代器从start到end之间的元素")]),s._v(" "),n("li",[n("code",[s._v("clear();")]),s._v("                                                        //删除容器中所有元素")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('\n#include <vector>\n\nvoid printVector(vector<int>& v) {\n\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\n//插入和删除\nvoid test01()\n{\n\tvector<int> v1;\n\t//尾插\n\tv1.push_back(10);\n\tv1.push_back(20);\n\tv1.push_back(30);\n\tv1.push_back(40);\n\tv1.push_back(50);\n\tprintVector(v1);\n\t//尾删\n\tv1.pop_back();\n\tprintVector(v1);\n\t//插入\n\tv1.insert(v1.begin(), 100);\n\tprintVector(v1);\n\n\tv1.insert(v1.begin(), 2, 1000);\n\tprintVector(v1);\n\n\t//删除\n\tv1.erase(v1.begin());\n\tprintVector(v1);\n\n\t//清空\n\tv1.erase(v1.begin(), v1.end());\n\tv1.clear();\n\tprintVector(v1);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("尾插  --- push_back")]),s._v(" "),n("li",[s._v("尾删  --- pop_back")]),s._v(" "),n("li",[s._v("插入  --- insert    (位置迭代器)")]),s._v(" "),n("li",[s._v("删除  --- erase  （位置迭代器）")]),s._v(" "),n("li",[s._v("清空  ---  clear")])]),s._v(" "),n("h4",{attrs:{id:"_3-2-6-vector数据存取"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-6-vector数据存取"}},[s._v("#")]),s._v(" 3.2.6 vector数据存取")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("对vector中的数据的存取操作")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("at(int idx);")]),s._v("     //返回索引idx所指的数据")]),s._v(" "),n("li",[n("code",[s._v("operator[];")]),s._v("       //返回索引idx所指的数据")]),s._v(" "),n("li",[n("code",[s._v("front();")]),s._v("            //返回容器中第一个数据元素")]),s._v(" "),n("li",[n("code",[s._v("back();")]),s._v("              //返回容器中最后一个数据元素")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <vector>\n\nvoid test01()\n{\n\tvector<int>v1;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv1.push_back(i);\n\t}\n\n\tfor (int i = 0; i < v1.size(); i++)\n\t{\n\t\tcout << v1[i] << " ";\n\t}\n\tcout << endl;\n\n\tfor (int i = 0; i < v1.size(); i++)\n\t{\n\t\tcout << v1.at(i) << " ";\n\t}\n\tcout << endl;\n\n\tcout << "v1的第一个元素为： " << v1.front() << endl;\n\tcout << "v1的最后一个元素为： " << v1.back() << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("除了用迭代器获取vector容器中元素，[ ]和at也可以")]),s._v(" "),n("li",[s._v("front返回容器第一个元素")]),s._v(" "),n("li",[s._v("back返回容器最后一个元素")])]),s._v(" "),n("h4",{attrs:{id:"_3-2-7-vector互换容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-7-vector互换容器"}},[s._v("#")]),s._v(" 3.2.7 vector互换容器")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("实现两个容器内元素进行互换")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("swap(vec);")]),s._v("  // 将vec与本身的元素互换")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <vector>\n\nvoid printVector(vector<int>& v) {\n\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tvector<int>v1;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv1.push_back(i);\n\t}\n\tprintVector(v1);\n\n\tvector<int>v2;\n\tfor (int i = 10; i > 0; i--)\n\t{\n\t\tv2.push_back(i);\n\t}\n\tprintVector(v2);\n\n\t//互换容器\n\tcout << "互换后" << endl;\n\tv1.swap(v2);\n\tprintVector(v1);\n\tprintVector(v2);\n}\n\nvoid test02()\n{\n\tvector<int> v;\n\tfor (int i = 0; i < 100000; i++) {\n\t\tv.push_back(i);\n\t}\n\n\tcout << "v的容量为：" << v.capacity() << endl;\n\tcout << "v的大小为：" << v.size() << endl;\n\n\tv.resize(3);\n\n\tcout << "v的容量为：" << v.capacity() << endl;\n\tcout << "v的大小为：" << v.size() << endl;\n\n\t//收缩内存\n\tvector<int>(v).swap(v); //匿名对象\n\n\tcout << "v的容量为：" << v.capacity() << endl;\n\tcout << "v的大小为：" << v.size() << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\ttest02();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br")])]),n("p",[s._v("总结：swap可以使两个容器互换，可以达到实用的收缩内存效果")]),s._v(" "),n("h4",{attrs:{id:"_3-2-8-vector预留空间"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-8-vector预留空间"}},[s._v("#")]),s._v(" 3.2.8 vector预留空间")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("减少vector在动态扩展容量时的扩展次数")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("reserve(int len);")]),s._v("//容器预留len个元素长度，预留位置不初始化，元素不可访问。")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <vector>\n\nvoid test01()\n{\n\tvector<int> v;\n\n\t//预留空间\n\tv.reserve(100000);\n\n\tint num = 0;\n\tint* p = NULL;\n\tfor (int i = 0; i < 100000; i++) {\n\t\tv.push_back(i);\n\t\tif (p != &v[0]) {\n\t\t\tp = &v[0];\n\t\t\tnum++;\n\t\t}\n\t}\n\n\tcout << "num:" << num << endl;\n}\n\nint main() {\n\n\ttest01();\n    \n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br")])]),n("p",[s._v("总结：如果数据量较大，可以一开始利用reserve预留空间")]),s._v(" "),n("h3",{attrs:{id:"_3-3-deque容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-deque容器"}},[s._v("#")]),s._v(" 3.3 deque容器")]),s._v(" "),n("h4",{attrs:{id:"_3-3-1-deque容器基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-deque容器基本概念"}},[s._v("#")]),s._v(" 3.3.1 deque容器基本概念")]),s._v(" "),n("p",[n("strong",[s._v("功能：")])]),s._v(" "),n("ul",[n("li",[s._v("双端数组，可以对头端进行插入删除操作")])]),s._v(" "),n("p",[n("strong",[s._v("deque与vector区别：")])]),s._v(" "),n("ul",[n("li",[s._v("vector对于头部的插入删除效率低，数据量越大，效率越低")]),s._v(" "),n("li",[s._v("deque相对而言，对头部的插入删除速度回比vector快")]),s._v(" "),n("li",[s._v("vector访问元素时的速度会比deque快,这和两者内部实现有关")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Sunc4127/image-hosting/202209220929129.jpg",alt:"说明: 2015-11-19_204101"}})]),s._v(" "),n("p",[s._v("deque内部工作原理:")]),s._v(" "),n("p",[s._v("deque内部有个"),n("strong",[s._v("中控器")]),s._v("，维护每段缓冲区中的内容，缓冲区中存放真实数据")]),s._v(" "),n("p",[s._v("中控器维护的是每个缓冲区的地址，使得使用deque时像一片连续的内存空间")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Sunc4127/image-hosting/202209220929130.jpg",alt:"clip_image002-1547547896341"}})]),s._v(" "),n("ul",[n("li",[s._v("deque容器的迭代器也是支持随机访问的")])]),s._v(" "),n("h4",{attrs:{id:"_3-3-2-deque构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-deque构造函数"}},[s._v("#")]),s._v(" 3.3.2 deque构造函数")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("deque容器构造")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("deque<T>")]),s._v(" deqT;                      //默认构造形式")]),s._v(" "),n("li",[n("code",[s._v("deque(beg, end);")]),s._v("                  //构造函数将[beg, end)区间中的元素拷贝给本身。")]),s._v(" "),n("li",[n("code",[s._v("deque(n, elem);")]),s._v("                    //构造函数将n个elem拷贝给本身。")]),s._v(" "),n("li",[n("code",[s._v("deque(const deque &deq);")]),s._v("   //拷贝构造函数")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <deque>\n\nvoid printDeque(const deque<int>& d) \n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << " ";\n\n\t}\n\tcout << endl;\n}\n//deque构造\nvoid test01() {\n\n\tdeque<int> d1; //无参构造函数\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\td1.push_back(i);\n\t}\n\tprintDeque(d1);\n\tdeque<int> d2(d1.begin(),d1.end());\n\tprintDeque(d2);\n\n\tdeque<int>d3(10,100);\n\tprintDeque(d3);\n\n\tdeque<int>d4 = d3;\n\tprintDeque(d4);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br")])]),n("p",[s._v("**总结：**deque容器和vector容器的构造方式几乎一致，灵活使用即可")]),s._v(" "),n("h4",{attrs:{id:"_3-3-3-deque赋值操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-3-deque赋值操作"}},[s._v("#")]),s._v(" 3.3.3 deque赋值操作")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("给deque容器进行赋值")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("deque& operator=(const deque &deq);")]),s._v("         //重载等号操作符")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("assign(beg, end);")]),s._v("                                           //将[beg, end)区间中的数据拷贝赋值给本身。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("assign(n, elem);")]),s._v("                                             //将n个elem拷贝赋值给本身。")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <deque>\n\nvoid printDeque(const deque<int>& d) \n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << " ";\n\n\t}\n\tcout << endl;\n}\n//赋值操作\nvoid test01()\n{\n\tdeque<int> d1;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\td1.push_back(i);\n\t}\n\tprintDeque(d1);\n\n\tdeque<int>d2;\n\td2 = d1;\n\tprintDeque(d2);\n\n\tdeque<int>d3;\n\td3.assign(d1.begin(), d1.end());\n\tprintDeque(d3);\n\n\tdeque<int>d4;\n\td4.assign(10, 100);\n\tprintDeque(d4);\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br")])]),n("p",[s._v("总结：deque赋值操作也与vector相同，需熟练掌握")]),s._v(" "),n("h4",{attrs:{id:"_3-3-4-deque大小操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-4-deque大小操作"}},[s._v("#")]),s._v(" 3.3.4 deque大小操作")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("对deque容器的大小进行操作")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("deque.empty();")]),s._v("                       //判断容器是否为空")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("deque.size();")]),s._v("                         //返回容器中元素的个数")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("deque.resize(num);")]),s._v("                //重新指定容器的长度为num,若容器变长，则以默认值填充新位置。")]),s._v(" "),n("p",[s._v("​\t\t\t                             //如果容器变短，则末尾超出容器长度的元素被删除。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("deque.resize(num, elem);")]),s._v("     //重新指定容器的长度为num,若容器变长，则以elem值填充新位置。")]),s._v(" "),n("p",[s._v("​                                                     //如果容器变短，则末尾超出容器长度的元素被删除。")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <deque>\n\nvoid printDeque(const deque<int>& d) \n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << " ";\n\n\t}\n\tcout << endl;\n}\n\n//大小操作\nvoid test01()\n{\n\tdeque<int> d1;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\td1.push_back(i);\n\t}\n\tprintDeque(d1);\n\n\t//判断容器是否为空\n\tif (d1.empty()) {\n\t\tcout << "d1为空!" << endl;\n\t}\n\telse {\n\t\tcout << "d1不为空!" << endl;\n\t\t//统计大小\n\t\tcout << "d1的大小为：" << d1.size() << endl;\n\t}\n\n\t//重新指定大小\n\td1.resize(15, 1);\n\tprintDeque(d1);\n\n\td1.resize(5);\n\tprintDeque(d1);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("deque没有容量的概念")]),s._v(" "),n("li",[s._v("判断是否为空   --- empty")]),s._v(" "),n("li",[s._v("返回元素个数   --- size")]),s._v(" "),n("li",[s._v("重新指定个数   --- resize")])]),s._v(" "),n("h4",{attrs:{id:"_3-3-5-deque-插入和删除"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-5-deque-插入和删除"}},[s._v("#")]),s._v(" 3.3.5 deque 插入和删除")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("向deque容器中插入和删除数据")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("p",[s._v("两端插入操作：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("push_back(elem);")]),s._v("          //在容器尾部添加一个数据")]),s._v(" "),n("li",[n("code",[s._v("push_front(elem);")]),s._v("        //在容器头部插入一个数据")]),s._v(" "),n("li",[n("code",[s._v("pop_back();")]),s._v("                   //删除容器最后一个数据")]),s._v(" "),n("li",[n("code",[s._v("pop_front();")]),s._v("                 //删除容器第一个数据")])]),s._v(" "),n("p",[s._v("指定位置操作：")]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("insert(pos,elem);")]),s._v("         //在pos位置插入一个elem元素的拷贝，返回新数据的位置。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("insert(pos,n,elem);")]),s._v("     //在pos位置插入n个elem数据，无返回值。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("insert(pos,beg,end);")]),s._v("    //在pos位置插入[beg,end)区间的数据，无返回值。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("clear();")]),s._v("                           //清空容器的所有数据")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("erase(beg,end);")]),s._v("             //删除[beg,end)区间的数据，返回下一个数据的位置。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("erase(pos);")]),s._v("                    //删除pos位置的数据，返回下一个数据的位置。")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <deque>\n\nvoid printDeque(const deque<int>& d) \n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << " ";\n\n\t}\n\tcout << endl;\n}\n//两端操作\nvoid test01()\n{\n\tdeque<int> d;\n\t//尾插\n\td.push_back(10);\n\td.push_back(20);\n\t//头插\n\td.push_front(100);\n\td.push_front(200);\n\n\tprintDeque(d);\n\n\t//尾删\n\td.pop_back();\n\t//头删\n\td.pop_front();\n\tprintDeque(d);\n}\n\n//插入\nvoid test02()\n{\n\tdeque<int> d;\n\td.push_back(10);\n\td.push_back(20);\n\td.push_front(100);\n\td.push_front(200);\n\tprintDeque(d);\n\n\td.insert(d.begin(), 1000);\n\tprintDeque(d);\n\n\td.insert(d.begin(), 2,10000);\n\tprintDeque(d);\n\n\tdeque<int>d2;\n\td2.push_back(1);\n\td2.push_back(2);\n\td2.push_back(3);\n\n\td.insert(d.begin(), d2.begin(), d2.end());\n\tprintDeque(d);\n\n}\n\n//删除\nvoid test03()\n{\n\tdeque<int> d;\n\td.push_back(10);\n\td.push_back(20);\n\td.push_front(100);\n\td.push_front(200);\n\tprintDeque(d);\n\n\td.erase(d.begin());\n\tprintDeque(d);\n\n\td.erase(d.begin(), d.end());\n\td.clear();\n\tprintDeque(d);\n}\n\nint main() {\n\n\t//test01();\n\n\t//test02();\n\n    test03();\n    \n\tsystem("pause");\n\n\treturn 0;\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("插入和删除提供的位置是迭代器！")]),s._v(" "),n("li",[s._v("尾插   ---  push_back")]),s._v(" "),n("li",[s._v("尾删   ---  pop_back")]),s._v(" "),n("li",[s._v("头插   ---  push_front")]),s._v(" "),n("li",[s._v("头删   ---  pop_front")])]),s._v(" "),n("h4",{attrs:{id:"_3-3-6-deque-数据存取"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-6-deque-数据存取"}},[s._v("#")]),s._v(" 3.3.6 deque 数据存取")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("对deque 中的数据的存取操作")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("at(int idx);")]),s._v("     //返回索引idx所指的数据")]),s._v(" "),n("li",[n("code",[s._v("operator[];")]),s._v("      //返回索引idx所指的数据")]),s._v(" "),n("li",[n("code",[s._v("front();")]),s._v("            //返回容器中第一个数据元素")]),s._v(" "),n("li",[n("code",[s._v("back();")]),s._v("              //返回容器中最后一个数据元素")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <deque>\n\nvoid printDeque(const deque<int>& d) \n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << " ";\n\n\t}\n\tcout << endl;\n}\n\n//数据存取\nvoid test01()\n{\n\n\tdeque<int> d;\n\td.push_back(10);\n\td.push_back(20);\n\td.push_front(100);\n\td.push_front(200);\n\n\tfor (int i = 0; i < d.size(); i++) {\n\t\tcout << d[i] << " ";\n\t}\n\tcout << endl;\n\n\n\tfor (int i = 0; i < d.size(); i++) {\n\t\tcout << d.at(i) << " ";\n\t}\n\tcout << endl;\n\n\tcout << "front:" << d.front() << endl;\n\n\tcout << "back:" << d.back() << endl;\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("除了用迭代器获取deque容器中元素，[ ]和at也可以")]),s._v(" "),n("li",[s._v("front返回容器第一个元素")]),s._v(" "),n("li",[s._v("back返回容器最后一个元素")])]),s._v(" "),n("h4",{attrs:{id:"_3-3-7-deque-排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-7-deque-排序"}},[s._v("#")]),s._v(" 3.3.7  deque 排序")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("利用算法实现对deque容器进行排序")])]),s._v(" "),n("p",[n("strong",[s._v("算法：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("sort(iterator beg, iterator end)")]),s._v("  //对beg和end区间内元素进行排序")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <deque>\n#include <algorithm>\n\nvoid printDeque(const deque<int>& d) \n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << " ";\n\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\n\tdeque<int> d;\n\td.push_back(10);\n\td.push_back(20);\n\td.push_front(100);\n\td.push_front(200);\n\n\tprintDeque(d);\n\tsort(d.begin(), d.end());\n\tprintDeque(d);\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br")])]),n("p",[s._v("总结：sort算法非常实用，使用时包含头文件 algorithm即可")]),s._v(" "),n("h3",{attrs:{id:"_3-4-案例-评委打分"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-案例-评委打分"}},[s._v("#")]),s._v(" 3.4 案例-评委打分")]),s._v(" "),n("h4",{attrs:{id:"_3-4-1-案例描述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-案例描述"}},[s._v("#")]),s._v(" 3.4.1 案例描述")]),s._v(" "),n("p",[s._v("有5名选手：选手ABCDE，10个评委分别对每一名选手打分，去除最高分，去除评委中最低分，取平均分。")]),s._v(" "),n("h4",{attrs:{id:"_3-4-2-实现步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2-实现步骤"}},[s._v("#")]),s._v(" 3.4.2 实现步骤")]),s._v(" "),n("ol",[n("li",[s._v("创建五名选手，放到vector中")]),s._v(" "),n("li",[s._v("遍历vector容器，取出来每一个选手，执行for循环，可以把10个评分打分存到deque容器中")]),s._v(" "),n("li",[s._v("sort算法对deque容器中分数排序，去除最高和最低分")]),s._v(" "),n("li",[s._v("deque容器遍历一遍，累加总分")]),s._v(" "),n("li",[s._v("获取平均分")])]),s._v(" "),n("p",[n("strong",[s._v("示例代码：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//选手类\nclass Person\n{\npublic:\n\tPerson(string name, int score)\n\t{\n\t\tthis->m_Name = name;\n\t\tthis->m_Score = score;\n\t}\n\n\tstring m_Name; //姓名\n\tint m_Score;  //平均分\n};\n\nvoid createPerson(vector<Person>&v)\n{\n\tstring nameSeed = "ABCDE";\n\tfor (int i = 0; i < 5; i++)\n\t{\n\t\tstring name = "选手";\n\t\tname += nameSeed[i];\n\n\t\tint score = 0;\n\n\t\tPerson p(name, score);\n\n\t\t//将创建的person对象 放入到容器中\n\t\tv.push_back(p);\n\t}\n}\n\n//打分\nvoid setScore(vector<Person>&v)\n{\n\tfor (vector<Person>::iterator it = v.begin(); it != v.end(); it++)\n\t{\n\t\t//将评委的分数 放入到deque容器中\n\t\tdeque<int>d;\n\t\tfor (int i = 0; i < 10; i++)\n\t\t{\n\t\t\tint score = rand() % 41 + 60;  // 60 ~ 100\n\t\t\td.push_back(score);\n\t\t}\n\n\t\t//cout << "选手： " << it->m_Name << " 打分： " << endl;\n\t\t//for (deque<int>::iterator dit = d.begin(); dit != d.end(); dit++)\n\t\t//{\n\t\t//\tcout << *dit << " ";\n\t\t//}\n\t\t//cout << endl;\n\n\t\t//排序\n\t\tsort(d.begin(), d.end());\n\n\t\t//去除最高和最低分\n\t\td.pop_back();\n\t\td.pop_front();\n\n\t\t//取平均分\n\t\tint sum = 0;\n\t\tfor (deque<int>::iterator dit = d.begin(); dit != d.end(); dit++)\n\t\t{\n\t\t\tsum += *dit; //累加每个评委的分数\n\t\t}\n\n\t\tint avg = sum / d.size();\n\n\t\t//将平均分 赋值给选手身上\n\t\tit->m_Score = avg;\n\t}\n\n}\n\nvoid showScore(vector<Person>&v)\n{\n\tfor (vector<Person>::iterator it = v.begin(); it != v.end(); it++)\n\t{\n\t\tcout << "姓名： " << it->m_Name << " 平均分： " << it->m_Score << endl;\n\t}\n}\n\nint main() {\n\n\t//随机数种子\n\tsrand((unsigned int)time(NULL));\n\n\t//1、创建5名选手\n\tvector<Person>v;  //存放选手容器\n\tcreatePerson(v);\n\n\t//测试\n\t//for (vector<Person>::iterator it = v.begin(); it != v.end(); it++)\n\t//{\n\t//\tcout << "姓名： " << (*it).m_Name << " 分数： " << (*it).m_Score << endl;\n\t//}\n\n\t//2、给5名选手打分\n\tsetScore(v);\n\n\t//3、显示最后得分\n\tshowScore(v);\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br")])]),n("p",[n("strong",[s._v("总结：")]),s._v(" 选取不同的容器操作数据，可以提升代码的效率")]),s._v(" "),n("h3",{attrs:{id:"_3-5-stack容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-stack容器"}},[s._v("#")]),s._v(" 3.5 stack容器")]),s._v(" "),n("h4",{attrs:{id:"_3-5-1-stack-基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-1-stack-基本概念"}},[s._v("#")]),s._v(" 3.5.1 stack 基本概念")]),s._v(" "),n("p",[n("strong",[s._v("概念："),n("strong",[s._v("stack是一种")]),s._v("先进后出")]),s._v("(First In Last Out,FILO)的数据结构，它只有一个出口")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Sunc4127/image-hosting/202209220929131.jpg",alt:"说明: 2015-11-15_195707"}})]),s._v(" "),n("p",[s._v("栈中只有顶端的元素才可以被外界使用，因此栈不允许有遍历行为")]),s._v(" "),n("p",[s._v("栈中进入数据称为  --- "),n("strong",[s._v("入栈")]),s._v(" "),n("code",[s._v("push")])]),s._v(" "),n("p",[s._v("栈中弹出数据称为  --- "),n("strong",[s._v("出栈")]),s._v(" "),n("code",[s._v("pop")])]),s._v(" "),n("p",[s._v("生活中的栈：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Sunc4127/image-hosting/202209220929132.png",alt:"img"}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Sunc4127/image-hosting/202209220929133.jpg",alt:"img"}})]),s._v(" "),n("h4",{attrs:{id:"_3-5-2-stack-常用接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-2-stack-常用接口"}},[s._v("#")]),s._v(" 3.5.2 stack 常用接口")]),s._v(" "),n("p",[s._v("功能描述：栈容器常用的对外接口")]),s._v(" "),n("p",[s._v("构造函数：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("stack<T> stk;")]),s._v("                                 //stack采用模板类实现， stack对象的默认构造形式")]),s._v(" "),n("li",[n("code",[s._v("stack(const stack &stk);")]),s._v("            //拷贝构造函数")])]),s._v(" "),n("p",[s._v("赋值操作：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("stack& operator=(const stack &stk);")]),s._v("           //重载等号操作符")])]),s._v(" "),n("p",[s._v("数据存取：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("push(elem);")]),s._v("      //向栈顶添加元素")]),s._v(" "),n("li",[n("code",[s._v("pop();")]),s._v("                //从栈顶移除第一个元素")]),s._v(" "),n("li",[n("code",[s._v("top();")]),s._v("                //返回栈顶元素")])]),s._v(" "),n("p",[s._v("大小操作：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("empty();")]),s._v("            //判断堆栈是否为空")]),s._v(" "),n("li",[n("code",[s._v("size();")]),s._v("              //返回栈的大小")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <stack>\n\n//栈容器常用接口\nvoid test01()\n{\n\t//创建栈容器 栈容器必须符合先进后出\n\tstack<int> s;\n\n\t//向栈中添加元素，叫做 压栈 入栈\n\ts.push(10);\n\ts.push(20);\n\ts.push(30);\n\n\twhile (!s.empty()) {\n\t\t//输出栈顶元素\n\t\tcout << "栈顶元素为： " << s.top() << endl;\n\t\t//弹出栈顶元素\n\t\ts.pop();\n\t}\n\tcout << "栈的大小为：" << s.size() << endl;\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("入栈   --- push")]),s._v(" "),n("li",[s._v("出栈   --- pop")]),s._v(" "),n("li",[s._v("返回栈顶   --- top")]),s._v(" "),n("li",[s._v("判断栈是否为空   --- empty")]),s._v(" "),n("li",[s._v("返回栈大小   --- size")])]),s._v(" "),n("h3",{attrs:{id:"_3-6-queue-容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-queue-容器"}},[s._v("#")]),s._v(" 3.6 queue 容器")]),s._v(" "),n("h4",{attrs:{id:"_3-6-1-queue-基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-1-queue-基本概念"}},[s._v("#")]),s._v(" 3.6.1 queue 基本概念")]),s._v(" "),n("p",[n("strong",[s._v("概念："),n("strong",[s._v("Queue是一种")]),s._v("先进先出")]),s._v("(First In First Out,FIFO)的数据结构，它有两个出口")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Sunc4127/image-hosting/202209220929134.jpg",alt:"说明: 2015-11-15_214429"}})]),s._v(" "),n("p",[s._v("队列容器允许从一端新增元素，从另一端移除元素")]),s._v(" "),n("p",[s._v("队列中只有队头和队尾才可以被外界使用，因此队列不允许有遍历行为")]),s._v(" "),n("p",[s._v("队列中进数据称为 --- "),n("strong",[s._v("入队")]),s._v(" "),n("code",[s._v("push")])]),s._v(" "),n("p",[s._v("队列中出数据称为 --- "),n("strong",[s._v("出队")]),s._v(" "),n("code",[s._v("pop")])]),s._v(" "),n("p",[s._v("生活中的队列：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Sunc4127/image-hosting/202209220929135.png",alt:"1547606785041"}})]),s._v(" "),n("h4",{attrs:{id:"_3-6-2-queue-常用接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-2-queue-常用接口"}},[s._v("#")]),s._v(" 3.6.2 queue 常用接口")]),s._v(" "),n("p",[s._v("功能描述：栈容器常用的对外接口")]),s._v(" "),n("p",[s._v("构造函数：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("queue<T> que;")]),s._v("                                 //queue采用模板类实现，queue对象的默认构造形式")]),s._v(" "),n("li",[n("code",[s._v("queue(const queue &que);")]),s._v("            //拷贝构造函数")])]),s._v(" "),n("p",[s._v("赋值操作：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("queue& operator=(const queue &que);")]),s._v("           //重载等号操作符")])]),s._v(" "),n("p",[s._v("数据存取：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("push(elem);")]),s._v("                             //往队尾添加元素")]),s._v(" "),n("li",[n("code",[s._v("pop();")]),s._v("                                      //从队头移除第一个元素")]),s._v(" "),n("li",[n("code",[s._v("back();")]),s._v("                                    //返回最后一个元素")]),s._v(" "),n("li",[n("code",[s._v("front();")]),s._v("                                  //返回第一个元素")])]),s._v(" "),n("p",[s._v("大小操作：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("empty();")]),s._v("            //判断堆栈是否为空")]),s._v(" "),n("li",[n("code",[s._v("size();")]),s._v("              //返回栈的大小")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <queue>\n#include <string>\nclass Person\n{\npublic:\n\tPerson(string name, int age)\n\t{\n\t\tthis->m_Name = name;\n\t\tthis->m_Age = age;\n\t}\n\n\tstring m_Name;\n\tint m_Age;\n};\n\nvoid test01() {\n\n\t//创建队列\n\tqueue<Person> q;\n\n\t//准备数据\n\tPerson p1("唐僧", 30);\n\tPerson p2("孙悟空", 1000);\n\tPerson p3("猪八戒", 900);\n\tPerson p4("沙僧", 800);\n\n\t//向队列中添加元素  入队操作\n\tq.push(p1);\n\tq.push(p2);\n\tq.push(p3);\n\tq.push(p4);\n\n\t//队列不提供迭代器，更不支持随机访问\t\n\twhile (!q.empty()) {\n\t\t//输出队头元素\n\t\tcout << "队头元素-- 姓名： " << q.front().m_Name \n              << " 年龄： "<< q.front().m_Age << endl;\n        \n\t\tcout << "队尾元素-- 姓名： " << q.back().m_Name  \n              << " 年龄： " << q.back().m_Age << endl;\n        \n\t\tcout << endl;\n\t\t//弹出队头元素\n\t\tq.pop();\n\t}\n\n\tcout << "队列大小为：" << q.size() << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("入队   --- push")]),s._v(" "),n("li",[s._v("出队   --- pop")]),s._v(" "),n("li",[s._v("返回队头元素   --- front")]),s._v(" "),n("li",[s._v("返回队尾元素   --- back")]),s._v(" "),n("li",[s._v("判断队是否为空   --- empty")]),s._v(" "),n("li",[s._v("返回队列大小   --- size")])]),s._v(" "),n("h3",{attrs:{id:"_3-7-list容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-list容器"}},[s._v("#")]),s._v(" 3.7 list容器")]),s._v(" "),n("h4",{attrs:{id:"_3-7-1-list基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-1-list基本概念"}},[s._v("#")]),s._v(" 3.7.1 list基本概念")]),s._v(" "),n("p",[s._v("**功能：**将数据进行链式存储")]),s._v(" "),n("p",[n("strong",[s._v("链表")]),s._v("（list）是一种物理存储单元上非连续的存储结构，数据元素的逻辑顺序是通过链表中的指针链接实现的")]),s._v(" "),n("p",[s._v("链表的组成：链表由一系列"),n("strong",[s._v("结点")]),s._v("组成")]),s._v(" "),n("p",[s._v("结点的组成：一个是存储数据元素的"),n("strong",[s._v("数据域")]),s._v("，另一个是存储下一个结点地址的"),n("strong",[s._v("指针域")])]),s._v(" "),n("p",[s._v("STL中的链表是一个双向循环链表")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Sunc4127/image-hosting/202209220929136.jpg",alt:"说明: 2015-11-15_225145"}})]),s._v(" "),n("p",[s._v("由于链表的存储方式并不是连续的内存空间，因此链表list中的迭代器只支持前移和后移，属于"),n("strong",[s._v("双向迭代器")])]),s._v(" "),n("p",[s._v("list的优点：")]),s._v(" "),n("ul",[n("li",[s._v("采用动态存储分配，不会造成内存浪费和溢出")]),s._v(" "),n("li",[s._v("链表执行插入和删除操作十分方便，修改指针即可，不需要移动大量元素")])]),s._v(" "),n("p",[s._v("list的缺点：")]),s._v(" "),n("ul",[n("li",[s._v("链表灵活，但是空间(指针域) 和 时间（遍历）额外耗费较大")])]),s._v(" "),n("p",[s._v("List有一个重要的性质，插入操作和删除操作都不会造成原有list迭代器的失效，这在vector是不成立的。")]),s._v(" "),n("p",[s._v("总结：STL中"),n("strong",[s._v("List和vector是两个最常被使用的容器")]),s._v("，各有优缺点")]),s._v(" "),n("h4",{attrs:{id:"_3-7-2-list构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-2-list构造函数"}},[s._v("#")]),s._v(" 3.7.2  list构造函数")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("创建list容器")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("list<T> lst;")]),s._v("                               //list采用采用模板类实现,对象的默认构造形式：")]),s._v(" "),n("li",[n("code",[s._v("list(beg,end);")]),s._v("                           //构造函数将[beg, end)区间中的元素拷贝给本身。")]),s._v(" "),n("li",[n("code",[s._v("list(n,elem);")]),s._v("                             //构造函数将n个elem拷贝给本身。")]),s._v(" "),n("li",[n("code",[s._v("list(const list &lst);")]),s._v("            //拷贝构造函数。")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <list>\n\nvoid printList(const list<int>& L) {\n\n\tfor (list<int>::const_iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tlist<int>L1;\n\tL1.push_back(10);\n\tL1.push_back(20);\n\tL1.push_back(30);\n\tL1.push_back(40);\n\n\tprintList(L1);\n\n\tlist<int>L2(L1.begin(),L1.end());\n\tprintList(L2);\n\n\tlist<int>L3(L2);\n\tprintList(L3);\n\n\tlist<int>L4(10, 1000);\n\tprintList(L4);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br")])]),n("p",[s._v("总结：list构造方式同其他几个STL常用容器，熟练掌握即可")]),s._v(" "),n("h4",{attrs:{id:"_3-7-3-list-赋值和交换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-3-list-赋值和交换"}},[s._v("#")]),s._v(" 3.7.3 list 赋值和交换")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("给list容器进行赋值，以及交换list容器")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("assign(beg, end);")]),s._v("            //将[beg, end)区间中的数据拷贝赋值给本身。")]),s._v(" "),n("li",[n("code",[s._v("assign(n, elem);")]),s._v("              //将n个elem拷贝赋值给本身。")]),s._v(" "),n("li",[n("code",[s._v("list& operator=(const list &lst);")]),s._v("         //重载等号操作符")]),s._v(" "),n("li",[n("code",[s._v("swap(lst);")]),s._v("                         //将lst与本身的元素互换。")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <list>\n\nvoid printList(const list<int>& L) {\n\n\tfor (list<int>::const_iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\n//赋值和交换\nvoid test01()\n{\n\tlist<int>L1;\n\tL1.push_back(10);\n\tL1.push_back(20);\n\tL1.push_back(30);\n\tL1.push_back(40);\n\tprintList(L1);\n\n\t//赋值\n\tlist<int>L2;\n\tL2 = L1;\n\tprintList(L2);\n\n\tlist<int>L3;\n\tL3.assign(L2.begin(), L2.end());\n\tprintList(L3);\n\n\tlist<int>L4;\n\tL4.assign(10, 100);\n\tprintList(L4);\n\n}\n\n//交换\nvoid test02()\n{\n\n\tlist<int>L1;\n\tL1.push_back(10);\n\tL1.push_back(20);\n\tL1.push_back(30);\n\tL1.push_back(40);\n\n\tlist<int>L2;\n\tL2.assign(10, 100);\n\n\tcout << "交换前： " << endl;\n\tprintList(L1);\n\tprintList(L2);\n\n\tcout << endl;\n\n\tL1.swap(L2);\n\n\tcout << "交换后： " << endl;\n\tprintList(L1);\n\tprintList(L2);\n\n}\n\nint main() {\n\n\t//test01();\n\n\ttest02();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br")])]),n("p",[s._v("总结：list赋值和交换操作能够灵活运用即可")]),s._v(" "),n("h4",{attrs:{id:"_3-7-4-list-大小操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-4-list-大小操作"}},[s._v("#")]),s._v(" 3.7.4 list 大小操作")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("对list容器的大小进行操作")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("size();")]),s._v("                             //返回容器中元素的个数")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("empty();")]),s._v("                           //判断容器是否为空")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("resize(num);")]),s._v("                   //重新指定容器的长度为num，若容器变长，则以默认值填充新位置。")]),s._v(" "),n("p",[s._v("​\t\t\t\t\t    //如果容器变短，则末尾超出容器长度的元素被删除。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("resize(num, elem);")]),s._v("       //重新指定容器的长度为num，若容器变长，则以elem值填充新位置。")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("  \t \t \t\t\t\t\t\t    //如果容器变短，则末尾超出容器长度的元素被删除。\n")])])])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <list>\n\nvoid printList(const list<int>& L) {\n\n\tfor (list<int>::const_iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\n//大小操作\nvoid test01()\n{\n\tlist<int>L1;\n\tL1.push_back(10);\n\tL1.push_back(20);\n\tL1.push_back(30);\n\tL1.push_back(40);\n\n\tif (L1.empty())\n\t{\n\t\tcout << "L1为空" << endl;\n\t}\n\telse\n\t{\n\t\tcout << "L1不为空" << endl;\n\t\tcout << "L1的大小为： " << L1.size() << endl;\n\t}\n\n\t//重新指定大小\n\tL1.resize(10);\n\tprintList(L1);\n\n\tL1.resize(2);\n\tprintList(L1);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("判断是否为空   --- empty")]),s._v(" "),n("li",[s._v("返回元素个数   --- size")]),s._v(" "),n("li",[s._v("重新指定个数   --- resize")])]),s._v(" "),n("h4",{attrs:{id:"_3-7-5-list-插入和删除"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-5-list-插入和删除"}},[s._v("#")]),s._v(" 3.7.5 list 插入和删除")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("对list容器进行数据的插入和删除")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[s._v("push_back(elem);//在容器尾部加入一个元素")]),s._v(" "),n("li",[s._v("pop_back();//删除容器中最后一个元素")]),s._v(" "),n("li",[s._v("push_front(elem);//在容器开头插入一个元素")]),s._v(" "),n("li",[s._v("pop_front();//从容器开头移除第一个元素")]),s._v(" "),n("li",[s._v("insert(pos,elem);//在pos位置插elem元素的拷贝，返回新数据的位置。")]),s._v(" "),n("li",[s._v("insert(pos,n,elem);//在pos位置插入n个elem数据，无返回值。")]),s._v(" "),n("li",[s._v("insert(pos,beg,end);//在pos位置插入[beg,end)区间的数据，无返回值。")]),s._v(" "),n("li",[s._v("clear();//移除容器的所有数据")]),s._v(" "),n("li",[s._v("erase(beg,end);//删除[beg,end)区间的数据，返回下一个数据的位置。")]),s._v(" "),n("li",[s._v("erase(pos);//删除pos位置的数据，返回下一个数据的位置。")]),s._v(" "),n("li",[s._v("remove(elem);//删除容器中所有与elem值匹配的元素。")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <list>\n\nvoid printList(const list<int>& L) {\n\n\tfor (list<int>::const_iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\n//插入和删除\nvoid test01()\n{\n\tlist<int> L;\n\t//尾插\n\tL.push_back(10);\n\tL.push_back(20);\n\tL.push_back(30);\n\t//头插\n\tL.push_front(100);\n\tL.push_front(200);\n\tL.push_front(300);\n\n\tprintList(L);\n\n\t//尾删\n\tL.pop_back();\n\tprintList(L);\n\n\t//头删\n\tL.pop_front();\n\tprintList(L);\n\n\t//插入\n\tlist<int>::iterator it = L.begin();\n\tL.insert(++it, 1000);\n\tprintList(L);\n\n\t//删除\n\tit = L.begin();\n\tL.erase(++it);\n\tprintList(L);\n\n\t//移除\n\tL.push_back(10000);\n\tL.push_back(10000);\n\tL.push_back(10000);\n\tprintList(L);\n\tL.remove(10000);\n\tprintList(L);\n    \n    //清空\n\tL.clear();\n\tprintList(L);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("尾插   --- push_back")]),s._v(" "),n("li",[s._v("尾删   --- pop_back")]),s._v(" "),n("li",[s._v("头插   --- push_front")]),s._v(" "),n("li",[s._v("头删   --- pop_front")]),s._v(" "),n("li",[s._v("插入   --- insert")]),s._v(" "),n("li",[s._v("删除   --- erase")]),s._v(" "),n("li",[s._v("移除   --- remove")]),s._v(" "),n("li",[s._v("清空   --- clear")])]),s._v(" "),n("h4",{attrs:{id:"_3-7-6-list-数据存取"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-6-list-数据存取"}},[s._v("#")]),s._v(" 3.7.6 list 数据存取")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("对list容器中数据进行存取")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("front();")]),s._v("        //返回第一个元素。")]),s._v(" "),n("li",[n("code",[s._v("back();")]),s._v("         //返回最后一个元素。")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <list>\n\n//数据存取\nvoid test01()\n{\n\tlist<int>L1;\n\tL1.push_back(10);\n\tL1.push_back(20);\n\tL1.push_back(30);\n\tL1.push_back(40);\n\n\t\n\t//cout << L1.at(0) << endl;//错误 不支持at访问数据\n\t//cout << L1[0] << endl; //错误  不支持[]方式访问数据\n\tcout << "第一个元素为： " << L1.front() << endl;\n\tcout << "最后一个元素为： " << L1.back() << endl;\n\n\t//list容器的迭代器是双向迭代器，不支持随机访问\n\tlist<int>::iterator it = L1.begin();\n\t//it = it + 1;//错误，不可以跳跃访问，即使是+1\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("list容器中不可以通过[]或者at方式访问数据")]),s._v(" "),n("li",[s._v("返回第一个元素   --- front")]),s._v(" "),n("li",[s._v("返回最后一个元素   --- back")])]),s._v(" "),n("h4",{attrs:{id:"_3-7-7-list-反转和排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-7-list-反转和排序"}},[s._v("#")]),s._v(" 3.7.7 list 反转和排序")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("将容器中的元素反转，以及将容器中的数据进行排序")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("reverse();")]),s._v("   //反转链表")]),s._v(" "),n("li",[n("code",[s._v("sort();")]),s._v("        //链表排序")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('void printList(const list<int>& L) {\n\n\tfor (list<int>::const_iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\nbool myCompare(int val1 , int val2)\n{\n\treturn val1 > val2;\n}\n\n//反转和排序\nvoid test01()\n{\n\tlist<int> L;\n\tL.push_back(90);\n\tL.push_back(30);\n\tL.push_back(20);\n\tL.push_back(70);\n\tprintList(L);\n\n\t//反转容器的元素\n\tL.reverse();\n\tprintList(L);\n\n\t//排序\n\tL.sort(); //默认的排序规则 从小到大\n\tprintList(L);\n\n\tL.sort(myCompare); //指定规则，从大到小\n\tprintList(L);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("反转   --- reverse")]),s._v(" "),n("li",[s._v("排序   --- sort （成员函数）")])]),s._v(" "),n("h4",{attrs:{id:"_3-7-8-排序案例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-8-排序案例"}},[s._v("#")]),s._v(" 3.7.8 排序案例")]),s._v(" "),n("p",[s._v("案例描述：将Person自定义数据类型进行排序，Person中属性有姓名、年龄、身高")]),s._v(" "),n("p",[s._v("排序规则：按照年龄进行升序，如果年龄相同按照身高进行降序")]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <list>\n#include <string>\nclass Person {\npublic:\n\tPerson(string name, int age , int height) {\n\t\tm_Name = name;\n\t\tm_Age = age;\n\t\tm_Height = height;\n\t}\n\npublic:\n\tstring m_Name;  //姓名\n\tint m_Age;      //年龄\n\tint m_Height;   //身高\n};\n\n\nbool ComparePerson(Person& p1, Person& p2) {\n\n\tif (p1.m_Age == p2.m_Age) {\n\t\treturn p1.m_Height  > p2.m_Height;\n\t}\n\telse\n\t{\n\t\treturn  p1.m_Age < p2.m_Age;\n\t}\n\n}\n\nvoid test01() {\n\n\tlist<Person> L;\n\n\tPerson p1("刘备", 35 , 175);\n\tPerson p2("曹操", 45 , 180);\n\tPerson p3("孙权", 40 , 170);\n\tPerson p4("赵云", 25 , 190);\n\tPerson p5("张飞", 35 , 160);\n\tPerson p6("关羽", 35 , 200);\n\n\tL.push_back(p1);\n\tL.push_back(p2);\n\tL.push_back(p3);\n\tL.push_back(p4);\n\tL.push_back(p5);\n\tL.push_back(p6);\n\n\tfor (list<Person>::iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << "姓名： " << it->m_Name << " 年龄： " << it->m_Age \n              << " 身高： " << it->m_Height << endl;\n\t}\n\n\tcout << "---------------------------------" << endl;\n\tL.sort(ComparePerson); //排序\n\n\tfor (list<Person>::iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << "姓名： " << it->m_Name << " 年龄： " << it->m_Age \n              << " 身高： " << it->m_Height << endl;\n\t}\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("对于自定义数据类型，必须要指定排序规则，否则编译器不知道如何进行排序")])]),s._v(" "),n("li",[n("p",[s._v("高级排序只是在排序规则上再进行一次逻辑规则制定，并不复杂")])])]),s._v(" "),n("h3",{attrs:{id:"_3-8-set-multiset-容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-set-multiset-容器"}},[s._v("#")]),s._v(" 3.8 set/ multiset 容器")]),s._v(" "),n("h4",{attrs:{id:"_3-8-1-set基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-1-set基本概念"}},[s._v("#")]),s._v(" 3.8.1 set基本概念")]),s._v(" "),n("p",[n("strong",[s._v("简介：")])]),s._v(" "),n("ul",[n("li",[s._v("所有元素都会在插入时自动被排序")])]),s._v(" "),n("p",[n("strong",[s._v("本质：")])]),s._v(" "),n("ul",[n("li",[s._v("set/multiset属于"),n("strong",[s._v("关联式容器")]),s._v("，底层结构是用"),n("strong",[s._v("二叉树")]),s._v("实现。")])]),s._v(" "),n("p",[n("strong",[s._v("set和multiset区别")]),s._v("：")]),s._v(" "),n("ul",[n("li",[s._v("set不允许容器中有重复的元素")]),s._v(" "),n("li",[s._v("multiset允许容器中有重复的元素")])]),s._v(" "),n("h4",{attrs:{id:"_3-8-2-set构造和赋值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-2-set构造和赋值"}},[s._v("#")]),s._v(" 3.8.2 set构造和赋值")]),s._v(" "),n("p",[s._v("功能描述：创建set容器以及赋值")]),s._v(" "),n("p",[s._v("构造：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("set<T> st;")]),s._v("                        //默认构造函数：")]),s._v(" "),n("li",[n("code",[s._v("set(const set &st);")]),s._v("       //拷贝构造函数")])]),s._v(" "),n("p",[s._v("赋值：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("set& operator=(const set &st);")]),s._v("    //重载等号操作符")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <set>\n\nvoid printSet(set<int> & s)\n{\n\tfor (set<int>::iterator it = s.begin(); it != s.end(); it++)\n\t{\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\n//构造和赋值\nvoid test01()\n{\n\tset<int> s1;\n\n\ts1.insert(10);\n\ts1.insert(30);\n\ts1.insert(20);\n\ts1.insert(40);\n\tprintSet(s1);\n\n\t//拷贝构造\n\tset<int>s2(s1);\n\tprintSet(s2);\n\n\t//赋值\n\tset<int>s3;\n\ts3 = s2;\n\tprintSet(s3);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("set容器插入数据时用insert")]),s._v(" "),n("li",[s._v("set容器插入数据的数据会自动排序")])]),s._v(" "),n("h4",{attrs:{id:"_3-8-3-set大小和交换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-3-set大小和交换"}},[s._v("#")]),s._v(" 3.8.3 set大小和交换")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("统计set容器大小以及交换set容器")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("size();")]),s._v("          //返回容器中元素的数目")]),s._v(" "),n("li",[n("code",[s._v("empty();")]),s._v("        //判断容器是否为空")]),s._v(" "),n("li",[n("code",[s._v("swap(st);")]),s._v("      //交换两个集合容器")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <set>\n\nvoid printSet(set<int> & s)\n{\n\tfor (set<int>::iterator it = s.begin(); it != s.end(); it++)\n\t{\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\n//大小\nvoid test01()\n{\n\n\tset<int> s1;\n\t\n\ts1.insert(10);\n\ts1.insert(30);\n\ts1.insert(20);\n\ts1.insert(40);\n\n\tif (s1.empty())\n\t{\n\t\tcout << "s1为空" << endl;\n\t}\n\telse\n\t{\n\t\tcout << "s1不为空" << endl;\n\t\tcout << "s1的大小为： " << s1.size() << endl;\n\t}\n\n}\n\n//交换\nvoid test02()\n{\n\tset<int> s1;\n\n\ts1.insert(10);\n\ts1.insert(30);\n\ts1.insert(20);\n\ts1.insert(40);\n\n\tset<int> s2;\n\n\ts2.insert(100);\n\ts2.insert(300);\n\ts2.insert(200);\n\ts2.insert(400);\n\n\tcout << "交换前" << endl;\n\tprintSet(s1);\n\tprintSet(s2);\n\tcout << endl;\n\n\tcout << "交换后" << endl;\n\ts1.swap(s2);\n\tprintSet(s1);\n\tprintSet(s2);\n}\n\nint main() {\n\n\t//test01();\n\n\ttest02();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("统计大小   --- size")]),s._v(" "),n("li",[s._v("判断是否为空   --- empty")]),s._v(" "),n("li",[s._v("交换容器   --- swap")])]),s._v(" "),n("h4",{attrs:{id:"_3-8-4-set插入和删除"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-4-set插入和删除"}},[s._v("#")]),s._v(" 3.8.4 set插入和删除")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("set容器进行插入数据和删除数据")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("insert(elem);")]),s._v("           //在容器中插入元素。")]),s._v(" "),n("li",[n("code",[s._v("clear();")]),s._v("                    //清除所有元素")]),s._v(" "),n("li",[n("code",[s._v("erase(pos);")]),s._v("              //删除pos迭代器所指的元素，返回下一个元素的迭代器。")]),s._v(" "),n("li",[n("code",[s._v("erase(beg, end);")]),s._v("    //删除区间[beg,end)的所有元素 ，返回下一个元素的迭代器。")]),s._v(" "),n("li",[n("code",[s._v("erase(elem);")]),s._v("            //删除容器中值为elem的元素。")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <set>\n\nvoid printSet(set<int> & s)\n{\n\tfor (set<int>::iterator it = s.begin(); it != s.end(); it++)\n\t{\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\n//插入和删除\nvoid test01()\n{\n\tset<int> s1;\n\t//插入\n\ts1.insert(10);\n\ts1.insert(30);\n\ts1.insert(20);\n\ts1.insert(40);\n\tprintSet(s1);\n\n\t//删除\n\ts1.erase(s1.begin());\n\tprintSet(s1);\n\n\ts1.erase(30);\n\tprintSet(s1);\n\n\t//清空\n\t//s1.erase(s1.begin(), s1.end());\n\ts1.clear();\n\tprintSet(s1);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("插入   --- insert")]),s._v(" "),n("li",[s._v("删除   --- erase")]),s._v(" "),n("li",[s._v("清空   --- clear")])]),s._v(" "),n("h4",{attrs:{id:"_3-8-5-set查找和统计"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-5-set查找和统计"}},[s._v("#")]),s._v(" 3.8.5 set查找和统计")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("对set容器进行查找数据以及统计数据")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("find(key);")]),s._v("                  //查找key是否存在,若存在，返回该键的元素的迭代器；若不存在，返回set.end();")]),s._v(" "),n("li",[n("code",[s._v("count(key);")]),s._v("                //统计key的元素个数")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <set>\n\n//查找和统计\nvoid test01()\n{\n\tset<int> s1;\n\t//插入\n\ts1.insert(10);\n\ts1.insert(30);\n\ts1.insert(20);\n\ts1.insert(40);\n\t\n\t//查找\n\tset<int>::iterator pos = s1.find(30);\n\n\tif (pos != s1.end())\n\t{\n\t\tcout << "找到了元素 ： " << *pos << endl;\n\t}\n\telse\n\t{\n\t\tcout << "未找到元素" << endl;\n\t}\n\n\t//统计\n\tint num = s1.count(30);\n\tcout << "num = " << num << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("查找   ---  find    （返回的是迭代器）")]),s._v(" "),n("li",[s._v("统计   ---  count  （对于set，结果为0或者1）")])]),s._v(" "),n("h4",{attrs:{id:"_3-8-6-set和multiset区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-6-set和multiset区别"}},[s._v("#")]),s._v(" 3.8.6 set和multiset区别")]),s._v(" "),n("p",[n("strong",[s._v("学习目标：")])]),s._v(" "),n("ul",[n("li",[s._v("掌握set和multiset的区别")])]),s._v(" "),n("p",[n("strong",[s._v("区别：")])]),s._v(" "),n("ul",[n("li",[s._v("set不可以插入重复数据，而multiset可以")]),s._v(" "),n("li",[s._v("set插入数据的同时会返回插入结果，表示插入是否成功")]),s._v(" "),n("li",[s._v("multiset不会检测数据，因此可以插入重复数据")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <set>\n\n//set和multiset区别\nvoid test01()\n{\n\tset<int> s;\n\tpair<set<int>::iterator, bool>  ret = s.insert(10);\n\tif (ret.second) {\n\t\tcout << "第一次插入成功!" << endl;\n\t}\n\telse {\n\t\tcout << "第一次插入失败!" << endl;\n\t}\n\n\tret = s.insert(10);\n\tif (ret.second) {\n\t\tcout << "第二次插入成功!" << endl;\n\t}\n\telse {\n\t\tcout << "第二次插入失败!" << endl;\n\t}\n    \n\t//multiset\n\tmultiset<int> ms;\n\tms.insert(10);\n\tms.insert(10);\n\n\tfor (multiset<int>::iterator it = ms.begin(); it != ms.end(); it++) {\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("如果不允许插入重复数据可以利用set")]),s._v(" "),n("li",[s._v("如果需要插入重复数据利用multiset")])]),s._v(" "),n("h4",{attrs:{id:"_3-8-7-pair对组创建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-7-pair对组创建"}},[s._v("#")]),s._v(" 3.8.7 pair对组创建")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("成对出现的数据，利用对组可以返回两个数据")])]),s._v(" "),n("p",[n("strong",[s._v("两种创建方式：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("pair<type, type> p ( value1, value2 );")])]),s._v(" "),n("li",[n("code",[s._v("pair<type, type> p = make_pair( value1, value2 );")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <string>\n\n//对组创建\nvoid test01()\n{\n\tpair<string, int> p(string("Tom"), 20);\n\tcout << "姓名： " <<  p.first << " 年龄： " << p.second << endl;\n\n\tpair<string, int> p2 = make_pair("Jerry", 10);\n\tcout << "姓名： " << p2.first << " 年龄： " << p2.second << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("p",[s._v("两种方式都可以创建对组，记住一种即可")]),s._v(" "),n("h4",{attrs:{id:"_3-8-8-set容器排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-8-set容器排序"}},[s._v("#")]),s._v(" 3.8.8 set容器排序")]),s._v(" "),n("p",[s._v("学习目标：")]),s._v(" "),n("ul",[n("li",[s._v("set容器默认排序规则为从小到大，掌握如何改变排序规则")])]),s._v(" "),n("p",[s._v("主要技术点：")]),s._v(" "),n("ul",[n("li",[s._v("利用仿函数，可以改变排序规则")])]),s._v(" "),n("p",[n("strong",[s._v("示例一")]),s._v("   set存放内置数据类型")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <set>\n\nclass MyCompare \n{\npublic:\n\tbool operator()(int v1, int v2) {\n\t\treturn v1 > v2;\n\t}\n};\nvoid test01() \n{    \n\tset<int> s1;\n\ts1.insert(10);\n\ts1.insert(40);\n\ts1.insert(20);\n\ts1.insert(30);\n\ts1.insert(50);\n\n\t//默认从小到大\n\tfor (set<int>::iterator it = s1.begin(); it != s1.end(); it++) {\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n\n\t//指定排序规则\n\tset<int,MyCompare> s2;\n\ts2.insert(10);\n\ts2.insert(40);\n\ts2.insert(20);\n\ts2.insert(30);\n\ts2.insert(50);\n\n\tfor (set<int, MyCompare>::iterator it = s2.begin(); it != s2.end(); it++) {\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br")])]),n("p",[s._v("总结：利用仿函数可以指定set容器的排序规则")]),s._v(" "),n("p",[n("strong",[s._v("示例二")]),s._v(" set存放自定义数据类型")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <set>\n#include <string>\n\nclass Person\n{\npublic:\n\tPerson(string name, int age)\n\t{\n\t\tthis->m_Name = name;\n\t\tthis->m_Age = age;\n\t}\n\n\tstring m_Name;\n\tint m_Age;\n\n};\nclass comparePerson\n{\npublic:\n\tbool operator()(const Person& p1, const Person &p2)\n\t{\n\t\t//按照年龄进行排序  降序\n\t\treturn p1.m_Age > p2.m_Age;\n\t}\n};\n\nvoid test01()\n{\n\tset<Person, comparePerson> s;\n\n\tPerson p1("刘备", 23);\n\tPerson p2("关羽", 27);\n\tPerson p3("张飞", 25);\n\tPerson p4("赵云", 21);\n\n\ts.insert(p1);\n\ts.insert(p2);\n\ts.insert(p3);\n\ts.insert(p4);\n\n\tfor (set<Person, comparePerson>::iterator it = s.begin(); it != s.end(); it++)\n\t{\n\t\tcout << "姓名： " << it->m_Name << " 年龄： " << it->m_Age << endl;\n\t}\n}\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("p",[s._v("对于自定义数据类型，set必须指定排序规则才可以插入数据")]),s._v(" "),n("h3",{attrs:{id:"_3-9-map-multimap容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-9-map-multimap容器"}},[s._v("#")]),s._v(" 3.9 map/ multimap容器")]),s._v(" "),n("h4",{attrs:{id:"_3-9-1-map基本概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-9-1-map基本概念"}},[s._v("#")]),s._v(" 3.9.1 map基本概念")]),s._v(" "),n("p",[n("strong",[s._v("简介：")])]),s._v(" "),n("ul",[n("li",[s._v("map中所有元素都是pair")]),s._v(" "),n("li",[s._v("pair中第一个元素为key（键值），起到索引作用，第二个元素为value（实值）")]),s._v(" "),n("li",[s._v("所有元素都会根据元素的键值自动排序")])]),s._v(" "),n("p",[n("strong",[s._v("本质：")])]),s._v(" "),n("ul",[n("li",[s._v("map/multimap属于"),n("strong",[s._v("关联式容器")]),s._v("，底层结构是用二叉树实现。")])]),s._v(" "),n("p",[n("strong",[s._v("优点：")])]),s._v(" "),n("ul",[n("li",[s._v("可以根据key值快速找到value值")])]),s._v(" "),n("p",[s._v("map和multimap"),n("strong",[s._v("区别")]),s._v("：")]),s._v(" "),n("ul",[n("li",[s._v("map不允许容器中有重复key值元素")]),s._v(" "),n("li",[s._v("multimap允许容器中有重复key值元素")])]),s._v(" "),n("h4",{attrs:{id:"_3-9-2-map构造和赋值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-9-2-map构造和赋值"}},[s._v("#")]),s._v(" 3.9.2  map构造和赋值")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("对map容器进行构造和赋值操作")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("p",[n("strong",[s._v("构造：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("map<T1, T2> mp;")]),s._v("                     //map默认构造函数:")]),s._v(" "),n("li",[n("code",[s._v("map(const map &mp);")]),s._v("             //拷贝构造函数")])]),s._v(" "),n("p",[n("strong",[s._v("赋值：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("map& operator=(const map &mp);")]),s._v("    //重载等号操作符")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <map>\n\nvoid printMap(map<int,int>&m)\n{\n\tfor (map<int, int>::iterator it = m.begin(); it != m.end(); it++)\n\t{\n\t\tcout << "key = " << it->first << " value = " << it->second << endl;\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tmap<int,int>m; //默认构造\n\tm.insert(pair<int, int>(1, 10));\n\tm.insert(pair<int, int>(2, 20));\n\tm.insert(pair<int, int>(3, 30));\n\tprintMap(m);\n\n\tmap<int, int>m2(m); //拷贝构造\n\tprintMap(m2);\n\n\tmap<int, int>m3;\n\tm3 = m2; //赋值\n\tprintMap(m3);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br")])]),n("p",[s._v("总结：map中所有元素都是成对出现，插入数据时候要使用对组")]),s._v(" "),n("h4",{attrs:{id:"_3-9-3-map大小和交换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-9-3-map大小和交换"}},[s._v("#")]),s._v(" 3.9.3 map大小和交换")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("统计map容器大小以及交换map容器")])]),s._v(" "),n("p",[s._v("函数原型：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("size();")]),s._v("          //返回容器中元素的数目")]),s._v(" "),n("li",[n("code",[s._v("empty();")]),s._v("        //判断容器是否为空")]),s._v(" "),n("li",[n("code",[s._v("swap(st);")]),s._v("      //交换两个集合容器")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <map>\n\nvoid printMap(map<int,int>&m)\n{\n\tfor (map<int, int>::iterator it = m.begin(); it != m.end(); it++)\n\t{\n\t\tcout << "key = " << it->first << " value = " << it->second << endl;\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tmap<int, int>m;\n\tm.insert(pair<int, int>(1, 10));\n\tm.insert(pair<int, int>(2, 20));\n\tm.insert(pair<int, int>(3, 30));\n\n\tif (m.empty())\n\t{\n\t\tcout << "m为空" << endl;\n\t}\n\telse\n\t{\n\t\tcout << "m不为空" << endl;\n\t\tcout << "m的大小为： " << m.size() << endl;\n\t}\n}\n\n\n//交换\nvoid test02()\n{\n\tmap<int, int>m;\n\tm.insert(pair<int, int>(1, 10));\n\tm.insert(pair<int, int>(2, 20));\n\tm.insert(pair<int, int>(3, 30));\n\n\tmap<int, int>m2;\n\tm2.insert(pair<int, int>(4, 100));\n\tm2.insert(pair<int, int>(5, 200));\n\tm2.insert(pair<int, int>(6, 300));\n\n\tcout << "交换前" << endl;\n\tprintMap(m);\n\tprintMap(m2);\n\n\tcout << "交换后" << endl;\n\tm.swap(m2);\n\tprintMap(m);\n\tprintMap(m2);\n}\n\nint main() {\n\n\ttest01();\n\n\ttest02();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("统计大小   --- size")]),s._v(" "),n("li",[s._v("判断是否为空   --- empty")]),s._v(" "),n("li",[s._v("交换容器   --- swap")])]),s._v(" "),n("h4",{attrs:{id:"_3-9-4-map插入和删除"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-9-4-map插入和删除"}},[s._v("#")]),s._v(" 3.9.4 map插入和删除")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("map容器进行插入数据和删除数据")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("insert(elem);")]),s._v("           //在容器中插入元素。")]),s._v(" "),n("li",[n("code",[s._v("clear();")]),s._v("                    //清除所有元素")]),s._v(" "),n("li",[n("code",[s._v("erase(pos);")]),s._v("              //删除pos迭代器所指的元素，返回下一个元素的迭代器。")]),s._v(" "),n("li",[n("code",[s._v("erase(beg, end);")]),s._v("    //删除区间[beg,end)的所有元素 ，返回下一个元素的迭代器。")]),s._v(" "),n("li",[n("code",[s._v("erase(key);")]),s._v("            //删除容器中值为key的元素。")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <map>\n\nvoid printMap(map<int,int>&m)\n{\n\tfor (map<int, int>::iterator it = m.begin(); it != m.end(); it++)\n\t{\n\t\tcout << "key = " << it->first << " value = " << it->second << endl;\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\t//插入\n\tmap<int, int> m;\n\t//第一种插入方式\n\tm.insert(pair<int, int>(1, 10));\n\t//第二种插入方式\n\tm.insert(make_pair(2, 20));\n\t//第三种插入方式\n\tm.insert(map<int, int>::value_type(3, 30));\n\t//第四种插入方式\n\tm[4] = 40; \n\tprintMap(m);\n\n\t//删除\n\tm.erase(m.begin());\n\tprintMap(m);\n\n\tm.erase(3);\n\tprintMap(m);\n\n\t//清空\n\tm.erase(m.begin(),m.end());\n\tm.clear();\n\tprintMap(m);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("map插入方式很多，记住其一即可")])]),s._v(" "),n("ul",[n("li",[s._v("插入   --- insert")]),s._v(" "),n("li",[s._v("删除   --- erase")]),s._v(" "),n("li",[s._v("清空   --- clear")])]),s._v(" "),n("h4",{attrs:{id:"_3-9-5-map查找和统计"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-9-5-map查找和统计"}},[s._v("#")]),s._v(" 3.9.5 map查找和统计")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("对map容器进行查找数据以及统计数据")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("find(key);")]),s._v("                  //查找key是否存在,若存在，返回该键的元素的迭代器；若不存在，返回set.end();")]),s._v(" "),n("li",[n("code",[s._v("count(key);")]),s._v("                //统计key的元素个数")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <map>\n\n//查找和统计\nvoid test01()\n{\n\tmap<int, int>m; \n\tm.insert(pair<int, int>(1, 10));\n\tm.insert(pair<int, int>(2, 20));\n\tm.insert(pair<int, int>(3, 30));\n\n\t//查找\n\tmap<int, int>::iterator pos = m.find(3);\n\n\tif (pos != m.end())\n\t{\n\t\tcout << "找到了元素 key = " << (*pos).first << " value = " << (*pos).second << endl;\n\t}\n\telse\n\t{\n\t\tcout << "未找到元素" << endl;\n\t}\n\n\t//统计\n\tint num = m.count(3);\n\tcout << "num = " << num << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("查找   ---  find    （返回的是迭代器）")]),s._v(" "),n("li",[s._v("统计   ---  count  （对于map，结果为0或者1）")])]),s._v(" "),n("h4",{attrs:{id:"_3-9-6-map容器排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-9-6-map容器排序"}},[s._v("#")]),s._v(" 3.9.6 map容器排序")]),s._v(" "),n("p",[n("strong",[s._v("学习目标：")])]),s._v(" "),n("ul",[n("li",[s._v("map容器默认排序规则为 按照key值进行 从小到大排序，掌握如何改变排序规则")])]),s._v(" "),n("p",[n("strong",[s._v("主要技术点:")])]),s._v(" "),n("ul",[n("li",[s._v("利用仿函数，可以改变排序规则")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <map>\n\nclass MyCompare {\npublic:\n\tbool operator()(int v1, int v2) {\n\t\treturn v1 > v2;\n\t}\n};\n\nvoid test01() \n{\n\t//默认从小到大排序\n\t//利用仿函数实现从大到小排序\n\tmap<int, int, MyCompare> m;\n\n\tm.insert(make_pair(1, 10));\n\tm.insert(make_pair(2, 20));\n\tm.insert(make_pair(3, 30));\n\tm.insert(make_pair(4, 40));\n\tm.insert(make_pair(5, 50));\n\n\tfor (map<int, int, MyCompare>::iterator it = m.begin(); it != m.end(); it++) {\n\t\tcout << "key:" << it->first << " value:" << it->second << endl;\n\t}\n}\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("利用仿函数可以指定map容器的排序规则")]),s._v(" "),n("li",[s._v("对于自定义数据类型，map必须要指定排序规则,同set容器")])]),s._v(" "),n("h3",{attrs:{id:"_3-10-案例-员工分组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-案例-员工分组"}},[s._v("#")]),s._v(" 3.10 案例-员工分组")]),s._v(" "),n("h4",{attrs:{id:"_3-10-1-案例描述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-1-案例描述"}},[s._v("#")]),s._v(" 3.10.1 案例描述")]),s._v(" "),n("ul",[n("li",[s._v("公司今天招聘了10个员工（ABCDEFGHIJ），10名员工进入公司之后，需要指派员工在那个部门工作")]),s._v(" "),n("li",[s._v("员工信息有: 姓名  工资组成；部门分为：策划、美术、研发")]),s._v(" "),n("li",[s._v("随机给10名员工分配部门和工资")]),s._v(" "),n("li",[s._v("通过multimap进行信息的插入  key(部门编号) value(员工)")]),s._v(" "),n("li",[s._v("分部门显示员工信息")])]),s._v(" "),n("h4",{attrs:{id:"_3-10-2-实现步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-10-2-实现步骤"}},[s._v("#")]),s._v(" 3.10.2 实现步骤")]),s._v(" "),n("ol",[n("li",[s._v("创建10名员工，放到vector中")]),s._v(" "),n("li",[s._v("遍历vector容器，取出每个员工，进行随机分组")]),s._v(" "),n("li",[s._v("分组后，将员工部门编号作为key，具体员工作为value，放入到multimap容器中")]),s._v(" "),n("li",[s._v("分部门显示员工信息")])]),s._v(" "),n("p",[n("strong",[s._v("案例代码：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include<iostream>\nusing namespace std;\n#include <vector>\n#include <string>\n#include <map>\n#include <ctime>\n\n/*\n- 公司今天招聘了10个员工（ABCDEFGHIJ），10名员工进入公司之后，需要指派员工在那个部门工作\n- 员工信息有: 姓名  工资组成；部门分为：策划、美术、研发\n- 随机给10名员工分配部门和工资\n- 通过multimap进行信息的插入  key(部门编号) value(员工)\n- 分部门显示员工信息\n*/\n\n#define CEHUA  0\n#define MEISHU 1\n#define YANFA  2\n\nclass Worker\n{\npublic:\n\tstring m_Name;\n\tint m_Salary;\n};\n\nvoid createWorker(vector<Worker>&v)\n{\n\tstring nameSeed = "ABCDEFGHIJ";\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tWorker worker;\n\t\tworker.m_Name = "员工";\n\t\tworker.m_Name += nameSeed[i];\n\n\t\tworker.m_Salary = rand() % 10000 + 10000; // 10000 ~ 19999\n\t\t//将员工放入到容器中\n\t\tv.push_back(worker);\n\t}\n}\n\n//员工分组\nvoid setGroup(vector<Worker>&v,multimap<int,Worker>&m)\n{\n\tfor (vector<Worker>::iterator it = v.begin(); it != v.end(); it++)\n\t{\n\t\t//产生随机部门编号\n\t\tint deptId = rand() % 3; // 0 1 2 \n\n\t\t//将员工插入到分组中\n\t\t//key部门编号，value具体员工\n\t\tm.insert(make_pair(deptId, *it));\n\t}\n}\n\nvoid showWorkerByGourp(multimap<int,Worker>&m)\n{\n\t// 0  A  B  C   1  D  E   2  F G ...\n\tcout << "策划部门：" << endl;\n\n\tmultimap<int,Worker>::iterator pos = m.find(CEHUA);\n\tint count = m.count(CEHUA); // 统计具体人数\n\tint index = 0;\n\tfor (; pos != m.end() && index < count; pos++ , index++)\n\t{\n\t\tcout << "姓名： " << pos->second.m_Name << " 工资： " << pos->second.m_Salary << endl;\n\t}\n\n\tcout << "----------------------" << endl;\n\tcout << "美术部门： " << endl;\n\tpos = m.find(MEISHU);\n\tcount = m.count(MEISHU); // 统计具体人数\n\tindex = 0;\n\tfor (; pos != m.end() && index < count; pos++, index++)\n\t{\n\t\tcout << "姓名： " << pos->second.m_Name << " 工资： " << pos->second.m_Salary << endl;\n\t}\n\n\tcout << "----------------------" << endl;\n\tcout << "研发部门： " << endl;\n\tpos = m.find(YANFA);\n\tcount = m.count(YANFA); // 统计具体人数\n\tindex = 0;\n\tfor (; pos != m.end() && index < count; pos++, index++)\n\t{\n\t\tcout << "姓名： " << pos->second.m_Name << " 工资： " << pos->second.m_Salary << endl;\n\t}\n\n}\n\nint main() {\n\n\tsrand((unsigned int)time(NULL));\n\n\t//1、创建员工\n\tvector<Worker>vWorker;\n\tcreateWorker(vWorker);\n\n\t//2、员工分组\n\tmultimap<int, Worker>mWorker;\n\tsetGroup(vWorker, mWorker);\n\n\n\t//3、分组显示员工\n\tshowWorkerByGourp(mWorker);\n\n\t////测试\n\t//for (vector<Worker>::iterator it = vWorker.begin(); it != vWorker.end(); it++)\n\t//{\n\t//\tcout << "姓名： " << it->m_Name << " 工资： " << it->m_Salary << endl;\n\t//}\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("当数据以键值对形式存在，可以考虑用map 或 multimap")])]),s._v(" "),n("h2",{attrs:{id:"_4-stl-函数对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-stl-函数对象"}},[s._v("#")]),s._v(" 4 STL- 函数对象")]),s._v(" "),n("h3",{attrs:{id:"_4-1-函数对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-函数对象"}},[s._v("#")]),s._v(" 4.1 函数对象")]),s._v(" "),n("h4",{attrs:{id:"_4-1-1-函数对象概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-函数对象概念"}},[s._v("#")]),s._v(" 4.1.1 函数对象概念")]),s._v(" "),n("p",[n("strong",[s._v("概念：")])]),s._v(" "),n("ul",[n("li",[s._v("重载"),n("strong",[s._v("函数调用操作符")]),s._v("的类，其对象常称为"),n("strong",[s._v("函数对象")])]),s._v(" "),n("li",[n("strong",[s._v("函数对象")]),s._v("使用重载的()时，行为类似函数调用，也叫"),n("strong",[s._v("仿函数")])])]),s._v(" "),n("p",[n("strong",[s._v("本质：")])]),s._v(" "),n("p",[s._v("函数对象(仿函数)是一个"),n("strong",[s._v("类")]),s._v("，不是一个函数")]),s._v(" "),n("h4",{attrs:{id:"_4-1-2-函数对象使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-2-函数对象使用"}},[s._v("#")]),s._v(" 4.1.2  函数对象使用")]),s._v(" "),n("p",[n("strong",[s._v("特点：")])]),s._v(" "),n("ul",[n("li",[s._v("函数对象在使用时，可以像普通函数那样调用, 可以有参数，可以有返回值")]),s._v(" "),n("li",[s._v("函数对象超出普通函数的概念，函数对象可以有自己的状态")]),s._v(" "),n("li",[s._v("函数对象可以作为参数传递")])]),s._v(" "),n("p",[n("strong",[s._v("示例:")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <string>\n\n//1、函数对象在使用时，可以像普通函数那样调用, 可以有参数，可以有返回值\nclass MyAdd\n{\npublic :\n\tint operator()(int v1,int v2)\n\t{\n\t\treturn v1 + v2;\n\t}\n};\n\nvoid test01()\n{\n\tMyAdd myAdd;\n\tcout << myAdd(10, 10) << endl;\n}\n\n//2、函数对象可以有自己的状态\nclass MyPrint\n{\npublic:\n\tMyPrint()\n\t{\n\t\tcount = 0;\n\t}\n\tvoid operator()(string test)\n\t{\n\t\tcout << test << endl;\n\t\tcount++; //统计使用次数\n\t}\n\n\tint count; //内部自己的状态\n};\nvoid test02()\n{\n\tMyPrint myPrint;\n\tmyPrint("hello world");\n\tmyPrint("hello world");\n\tmyPrint("hello world");\n\tcout << "myPrint调用次数为： " << myPrint.count << endl;\n}\n\n//3、函数对象可以作为参数传递\nvoid doPrint(MyPrint &mp , string test)\n{\n\tmp(test);\n}\n\nvoid test03()\n{\n\tMyPrint myPrint;\n\tdoPrint(myPrint, "Hello C++");\n}\n\nint main() {\n\n\t//test01();\n\t//test02();\n\ttest03();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br")])]),n("p",[s._v("总结：")]),s._v(" "),n("ul",[n("li",[s._v("仿函数写法非常灵活，可以作为参数进行传递。")])]),s._v(" "),n("h3",{attrs:{id:"_4-2-谓词"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-谓词"}},[s._v("#")]),s._v(" 4.2  谓词")]),s._v(" "),n("h4",{attrs:{id:"_4-2-1-谓词概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-谓词概念"}},[s._v("#")]),s._v(" 4.2.1 谓词概念")]),s._v(" "),n("p",[n("strong",[s._v("概念：")])]),s._v(" "),n("ul",[n("li",[s._v("返回bool类型的仿函数称为"),n("strong",[s._v("谓词")])]),s._v(" "),n("li",[s._v("如果operator()接受一个参数，那么叫做一元谓词")]),s._v(" "),n("li",[s._v("如果operator()接受两个参数，那么叫做二元谓词")])]),s._v(" "),n("h4",{attrs:{id:"_4-2-2-一元谓词"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-一元谓词"}},[s._v("#")]),s._v(" 4.2.2 一元谓词")]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <vector>\n#include <algorithm>\n\n//1.一元谓词\nstruct GreaterFive{\n\tbool operator()(int val) {\n\t\treturn val > 5;\n\t}\n};\n\nvoid test01() {\n\n\tvector<int> v;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv.push_back(i);\n\t}\n\n\tvector<int>::iterator it = find_if(v.begin(), v.end(), GreaterFive());\n\tif (it == v.end()) {\n\t\tcout << "没找到!" << endl;\n\t}\n\telse {\n\t\tcout << "找到:" << *it << endl;\n\t}\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br")])]),n("p",[s._v("总结：参数只有一个的谓词，称为一元谓词")]),s._v(" "),n("h4",{attrs:{id:"_4-2-3-二元谓词"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-3-二元谓词"}},[s._v("#")]),s._v(" 4.2.3 二元谓词")]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <vector>\n#include <algorithm>\n//二元谓词\nclass MyCompare\n{\npublic:\n\tbool operator()(int num1, int num2)\n\t{\n\t\treturn num1 > num2;\n\t}\n};\n\nvoid test01()\n{\n\tvector<int> v;\n\tv.push_back(10);\n\tv.push_back(40);\n\tv.push_back(20);\n\tv.push_back(30);\n\tv.push_back(50);\n\n\t//默认从小到大\n\tsort(v.begin(), v.end());\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++)\n\t{\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n\tcout << "----------------------------" << endl;\n\n\t//使用函数对象改变算法策略，排序从大到小\n\tsort(v.begin(), v.end(), MyCompare());\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++)\n\t{\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br")])]),n("p",[s._v("总结：参数只有两个的谓词，称为二元谓词")]),s._v(" "),n("h3",{attrs:{id:"_4-3-内建函数对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-内建函数对象"}},[s._v("#")]),s._v(" 4.3 内建函数对象")]),s._v(" "),n("h4",{attrs:{id:"_4-3-1-内建函数对象意义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-内建函数对象意义"}},[s._v("#")]),s._v(" 4.3.1 内建函数对象意义")]),s._v(" "),n("p",[n("strong",[s._v("概念：")])]),s._v(" "),n("ul",[n("li",[s._v("STL内建了一些函数对象")])]),s._v(" "),n("p",[n("strong",[s._v("分类:")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("算术仿函数")])]),s._v(" "),n("li",[n("p",[s._v("关系仿函数")])]),s._v(" "),n("li",[n("p",[s._v("逻辑仿函数")])])]),s._v(" "),n("p",[n("strong",[s._v("用法：")])]),s._v(" "),n("ul",[n("li",[s._v("这些仿函数所产生的对象，用法和一般函数完全相同")]),s._v(" "),n("li",[s._v("使用内建函数对象，需要引入头文件 "),n("code",[s._v("#include<functional>")])])]),s._v(" "),n("h4",{attrs:{id:"_4-3-2-算术仿函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-算术仿函数"}},[s._v("#")]),s._v(" 4.3.2 算术仿函数")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("实现四则运算")]),s._v(" "),n("li",[s._v("其中negate是一元运算，其他都是二元运算")])]),s._v(" "),n("p",[n("strong",[s._v("仿函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("template<class T> T plus<T>")]),s._v("                //加法仿函数")]),s._v(" "),n("li",[n("code",[s._v("template<class T> T minus<T>")]),s._v("              //减法仿函数")]),s._v(" "),n("li",[n("code",[s._v("template<class T> T multiplies<T>")]),s._v("    //乘法仿函数")]),s._v(" "),n("li",[n("code",[s._v("template<class T> T divides<T>")]),s._v("         //除法仿函数")]),s._v(" "),n("li",[n("code",[s._v("template<class T> T modulus<T>")]),s._v("         //取模仿函数")]),s._v(" "),n("li",[n("code",[s._v("template<class T> T negate<T>")]),s._v("           //取反仿函数")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <functional>\n//negate\nvoid test01()\n{\n\tnegate<int> n;\n\tcout << n(50) << endl;\n}\n\n//plus\nvoid test02()\n{\n\tplus<int> p;\n\tcout << p(10, 20) << endl;\n}\n\nint main() {\n\n\ttest01();\n\ttest02();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("总结：使用内建函数对象时，需要引入头文件 "),n("code",[s._v("#include <functional>")])]),s._v(" "),n("h4",{attrs:{id:"_4-3-3-关系仿函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-3-关系仿函数"}},[s._v("#")]),s._v(" 4.3.3 关系仿函数")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("实现关系对比")])]),s._v(" "),n("p",[n("strong",[s._v("仿函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("template<class T> bool equal_to<T>")]),s._v("                    //等于")]),s._v(" "),n("li",[n("code",[s._v("template<class T> bool not_equal_to<T>")]),s._v("            //不等于")]),s._v(" "),n("li",[n("code",[s._v("template<class T> bool greater<T>")]),s._v("                      //大于")]),s._v(" "),n("li",[n("code",[s._v("template<class T> bool greater_equal<T>")]),s._v("          //大于等于")]),s._v(" "),n("li",[n("code",[s._v("template<class T> bool less<T>")]),s._v("                           //小于")]),s._v(" "),n("li",[n("code",[s._v("template<class T> bool less_equal<T>")]),s._v("               //小于等于")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <functional>\n#include <vector>\n#include <algorithm>\n\nclass MyCompare\n{\npublic:\n\tbool operator()(int v1,int v2)\n\t{\n\t\treturn v1 > v2;\n\t}\n};\nvoid test01()\n{\n\tvector<int> v;\n\n\tv.push_back(10);\n\tv.push_back(30);\n\tv.push_back(50);\n\tv.push_back(40);\n\tv.push_back(20);\n\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n\n\t//自己实现仿函数\n\t//sort(v.begin(), v.end(), MyCompare());\n\t//STL内建仿函数  大于仿函数\n\tsort(v.begin(), v.end(), greater<int>());\n\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br")])]),n("p",[s._v("总结：关系仿函数中最常用的就是greater<>大于")]),s._v(" "),n("h4",{attrs:{id:"_4-3-4-逻辑仿函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-4-逻辑仿函数"}},[s._v("#")]),s._v(" 4.3.4 逻辑仿函数")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("实现逻辑运算")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("template<class T> bool logical_and<T>")]),s._v("              //逻辑与")]),s._v(" "),n("li",[n("code",[s._v("template<class T> bool logical_or<T>")]),s._v("                //逻辑或")]),s._v(" "),n("li",[n("code",[s._v("template<class T> bool logical_not<T>")]),s._v("              //逻辑非")])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <vector>\n#include <functional>\n#include <algorithm>\nvoid test01()\n{\n\tvector<bool> v;\n\tv.push_back(true);\n\tv.push_back(false);\n\tv.push_back(true);\n\tv.push_back(false);\n\n\tfor (vector<bool>::iterator it = v.begin();it!= v.end();it++)\n\t{\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n\n\t//逻辑非  将v容器搬运到v2中，并执行逻辑非运算\n\tvector<bool> v2;\n\tv2.resize(v.size());\n\ttransform(v.begin(), v.end(),  v2.begin(), logical_not<bool>());\n\tfor (vector<bool>::iterator it = v2.begin(); it != v2.end(); it++)\n\t{\n\t\tcout << *it << " ";\n\t}\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br")])]),n("p",[s._v("总结：逻辑仿函数实际应用较少，了解即可")]),s._v(" "),n("h2",{attrs:{id:"_5-stl-常用算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-stl-常用算法"}},[s._v("#")]),s._v(" 5 STL- 常用算法")]),s._v(" "),n("p",[n("strong",[s._v("概述")]),s._v(":")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("算法主要是由头文件"),n("code",[s._v("<algorithm>")]),s._v(" "),n("code",[s._v("<functional>")]),s._v(" "),n("code",[s._v("<numeric>")]),s._v("组成。")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("<algorithm>")]),s._v("是所有STL头文件中最大的一个，范围涉及到比较、 交换、查找、遍历操作、复制、修改等等")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("<numeric>")]),s._v("体积很小，只包括几个在序列上面进行简单数学运算的模板函数")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("<functional>")]),s._v("定义了一些模板类,用以声明函数对象。")])])]),s._v(" "),n("h3",{attrs:{id:"_5-1-常用遍历算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-常用遍历算法"}},[s._v("#")]),s._v(" 5.1 常用遍历算法")]),s._v(" "),n("p",[n("strong",[s._v("学习目标：")])]),s._v(" "),n("ul",[n("li",[s._v("掌握常用的遍历算法")])]),s._v(" "),n("p",[n("strong",[s._v("算法简介：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("for_each")]),s._v("     //遍历容器")]),s._v(" "),n("li",[n("code",[s._v("transform")]),s._v("   //搬运容器到另一个容器中")])]),s._v(" "),n("h4",{attrs:{id:"_5-1-1-for-each"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-1-for-each"}},[s._v("#")]),s._v(" 5.1.1 for_each")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("实现遍历容器")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("for_each(iterator beg, iterator end, _func);")])]),s._v(" "),n("p",[s._v("// 遍历算法 遍历容器元素")]),s._v(" "),n("p",[s._v("// beg 开始迭代器")]),s._v(" "),n("p",[s._v("// end 结束迭代器")]),s._v(" "),n("p",[s._v("// _func 函数或者函数对象")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <algorithm>\n#include <vector>\n\n//普通函数\nvoid print01(int val) \n{\n\tcout << val << " ";\n}\n//函数对象\nclass print02 \n{\n public:\n\tvoid operator()(int val) \n\t{\n\t\tcout << val << " ";\n\t}\n};\n\n//for_each算法基本用法\nvoid test01() {\n\n\tvector<int> v;\n\tfor (int i = 0; i < 10; i++) \n\t{\n\t\tv.push_back(i);\n\t}\n\n\t//遍历算法\n\tfor_each(v.begin(), v.end(), print01);\n\tcout << endl;\n\n\tfor_each(v.begin(), v.end(), print02());\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br")])]),n("p",[s._v("**总结：**for_each在实际开发中是最常用遍历算法，需要熟练掌握")]),s._v(" "),n("h4",{attrs:{id:"_5-1-2-transform"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-2-transform"}},[s._v("#")]),s._v(" 5.1.2 transform")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("搬运容器到另一个容器中")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("transform(iterator beg1, iterator end1, iterator beg2, _func);")])])]),s._v(" "),n("p",[s._v("//beg1 源容器开始迭代器")]),s._v(" "),n("p",[s._v("//end1 源容器结束迭代器")]),s._v(" "),n("p",[s._v("//beg2 目标容器开始迭代器")]),s._v(" "),n("p",[s._v("//_func 函数或者函数对象")]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include<vector>\n#include<algorithm>\n\n//常用遍历算法  搬运 transform\n\nclass TransForm\n{\npublic:\n\tint operator()(int val)\n\t{\n\t\treturn val;\n\t}\n\n};\n\nclass MyPrint\n{\npublic:\n\tvoid operator()(int val)\n\t{\n\t\tcout << val << " ";\n\t}\n};\n\nvoid test01()\n{\n\tvector<int>v;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv.push_back(i);\n\t}\n\n\tvector<int>vTarget; //目标容器\n\n\tvTarget.resize(v.size()); // 目标容器需要提前开辟空间\n\n\ttransform(v.begin(), v.end(), vTarget.begin(), TransForm());\n\n\tfor_each(vTarget.begin(), vTarget.end(), MyPrint());\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br")])]),n("p",[n("strong",[s._v("总结：")]),s._v(" 搬运的目标容器必须要提前开辟空间，否则无法正常搬运")]),s._v(" "),n("h3",{attrs:{id:"_5-2-常用查找算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-常用查找算法"}},[s._v("#")]),s._v(" 5.2 常用查找算法")]),s._v(" "),n("p",[s._v("学习目标：")]),s._v(" "),n("ul",[n("li",[s._v("掌握常用的查找算法")])]),s._v(" "),n("p",[n("strong",[s._v("算法简介：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("find")]),s._v("                     //查找元素")]),s._v(" "),n("li",[n("code",[s._v("find_if")]),s._v("               //按条件查找元素")]),s._v(" "),n("li",[n("code",[s._v("adjacent_find")]),s._v("    //查找相邻重复元素")]),s._v(" "),n("li",[n("code",[s._v("binary_search")]),s._v("    //二分查找法")]),s._v(" "),n("li",[n("code",[s._v("count")]),s._v("                   //统计元素个数")]),s._v(" "),n("li",[n("code",[s._v("count_if")]),s._v("             //按条件统计元素个数")])]),s._v(" "),n("h4",{attrs:{id:"_5-2-1-find"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-find"}},[s._v("#")]),s._v(" 5.2.1 find")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("查找指定元素，找到返回指定元素的迭代器，找不到返回结束迭代器end()")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("find(iterator beg, iterator end, value);")])]),s._v(" "),n("p",[s._v("// 按值查找元素，找到返回指定位置迭代器，找不到返回结束迭代器位置")]),s._v(" "),n("p",[s._v("// beg 开始迭代器")]),s._v(" "),n("p",[s._v("// end 结束迭代器")]),s._v(" "),n("p",[s._v("// value 查找的元素")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <algorithm>\n#include <vector>\n#include <string>\nvoid test01() {\n\n\tvector<int> v;\n\tfor (int i = 0; i < 10; i++) {\n\t\tv.push_back(i + 1);\n\t}\n\t//查找容器中是否有 5 这个元素\n\tvector<int>::iterator it = find(v.begin(), v.end(), 5);\n\tif (it == v.end()) \n\t{\n\t\tcout << "没有找到!" << endl;\n\t}\n\telse \n\t{\n\t\tcout << "找到:" << *it << endl;\n\t}\n}\n\nclass Person {\npublic:\n\tPerson(string name, int age) \n\t{\n\t\tthis->m_Name = name;\n\t\tthis->m_Age = age;\n\t}\n\t//重载==\n\tbool operator==(const Person& p) \n\t{\n\t\tif (this->m_Name == p.m_Name && this->m_Age == p.m_Age) \n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\npublic:\n\tstring m_Name;\n\tint m_Age;\n};\n\nvoid test02() {\n\n\tvector<Person> v;\n\n\t//创建数据\n\tPerson p1("aaa", 10);\n\tPerson p2("bbb", 20);\n\tPerson p3("ccc", 30);\n\tPerson p4("ddd", 40);\n\n\tv.push_back(p1);\n\tv.push_back(p2);\n\tv.push_back(p3);\n\tv.push_back(p4);\n\n\tvector<Person>::iterator it = find(v.begin(), v.end(), p2);\n\tif (it == v.end()) \n\t{\n\t\tcout << "没有找到!" << endl;\n\t}\n\telse \n\t{\n\t\tcout << "找到姓名:" << it->m_Name << " 年龄: " << it->m_Age << endl;\n\t}\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br")])]),n("p",[s._v("总结： 利用find可以在容器中找指定的元素，返回值是"),n("strong",[s._v("迭代器")])]),s._v(" "),n("h4",{attrs:{id:"_5-2-2-find-if"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-find-if"}},[s._v("#")]),s._v(" 5.2.2 find_if")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("按条件查找元素")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("find_if(iterator beg, iterator end, _Pred);")])]),s._v(" "),n("p",[s._v("// 按值查找元素，找到返回指定位置迭代器，找不到返回结束迭代器位置")]),s._v(" "),n("p",[s._v("// beg 开始迭代器")]),s._v(" "),n("p",[s._v("// end 结束迭代器")]),s._v(" "),n("p",[s._v("// _Pred 函数或者谓词（返回bool类型的仿函数）")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <algorithm>\n#include <vector>\n#include <string>\n\n//内置数据类型\nclass GreaterFive\n{\npublic:\n\tbool operator()(int val)\n\t{\n\t\treturn val > 5;\n\t}\n};\n\nvoid test01() {\n\n\tvector<int> v;\n\tfor (int i = 0; i < 10; i++) {\n\t\tv.push_back(i + 1);\n\t}\n\n\tvector<int>::iterator it = find_if(v.begin(), v.end(), GreaterFive());\n\tif (it == v.end()) {\n\t\tcout << "没有找到!" << endl;\n\t}\n\telse {\n\t\tcout << "找到大于5的数字:" << *it << endl;\n\t}\n}\n\n//自定义数据类型\nclass Person {\npublic:\n\tPerson(string name, int age)\n\t{\n\t\tthis->m_Name = name;\n\t\tthis->m_Age = age;\n\t}\npublic:\n\tstring m_Name;\n\tint m_Age;\n};\n\nclass Greater20\n{\npublic:\n\tbool operator()(Person &p)\n\t{\n\t\treturn p.m_Age > 20;\n\t}\n\n};\n\nvoid test02() {\n\n\tvector<Person> v;\n\n\t//创建数据\n\tPerson p1("aaa", 10);\n\tPerson p2("bbb", 20);\n\tPerson p3("ccc", 30);\n\tPerson p4("ddd", 40);\n\n\tv.push_back(p1);\n\tv.push_back(p2);\n\tv.push_back(p3);\n\tv.push_back(p4);\n\n\tvector<Person>::iterator it = find_if(v.begin(), v.end(), Greater20());\n\tif (it == v.end())\n\t{\n\t\tcout << "没有找到!" << endl;\n\t}\n\telse\n\t{\n\t\tcout << "找到姓名:" << it->m_Name << " 年龄: " << it->m_Age << endl;\n\t}\n}\n\nint main() {\n\n\t//test01();\n\n\ttest02();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br")])]),n("p",[s._v("总结：find_if按条件查找使查找更加灵活，提供的仿函数可以改变不同的策略")]),s._v(" "),n("h4",{attrs:{id:"_5-2-3-adjacent-find"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-3-adjacent-find"}},[s._v("#")]),s._v(" 5.2.3 adjacent_find")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("查找相邻重复元素")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("adjacent_find(iterator beg, iterator end);")])]),s._v(" "),n("p",[s._v("// 查找相邻重复元素,返回相邻元素的第一个位置的迭代器")]),s._v(" "),n("p",[s._v("// beg 开始迭代器")]),s._v(" "),n("p",[s._v("// end 结束迭代器")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <algorithm>\n#include <vector>\n\nvoid test01()\n{\n\tvector<int> v;\n\tv.push_back(1);\n\tv.push_back(2);\n\tv.push_back(5);\n\tv.push_back(2);\n\tv.push_back(4);\n\tv.push_back(4);\n\tv.push_back(3);\n\n\t//查找相邻重复元素\n\tvector<int>::iterator it = adjacent_find(v.begin(), v.end());\n\tif (it == v.end()) {\n\t\tcout << "找不到!" << endl;\n\t}\n\telse {\n\t\tcout << "找到相邻重复元素为:" << *it << endl;\n\t}\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])]),n("p",[s._v("总结：面试题中如果出现查找相邻重复元素，记得用STL中的adjacent_find算法")]),s._v(" "),n("h4",{attrs:{id:"_5-2-4-binary-search"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-4-binary-search"}},[s._v("#")]),s._v(" 5.2.4 binary_search")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("查找指定元素是否存在")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("bool binary_search(iterator beg, iterator end, value);")])]),s._v(" "),n("p",[s._v("// 查找指定的元素，查到 返回true  否则false")]),s._v(" "),n("p",[s._v("// 注意: 在"),n("strong",[s._v("无序序列中不可用")])]),s._v(" "),n("p",[s._v("// beg 开始迭代器")]),s._v(" "),n("p",[s._v("// end 结束迭代器")]),s._v(" "),n("p",[s._v("// value 查找的元素")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <algorithm>\n#include <vector>\n\nvoid test01()\n{\n\tvector<int>v;\n\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv.push_back(i);\n\t}\n\t//二分查找\n\tbool ret = binary_search(v.begin(), v.end(),2);\n\tif (ret)\n\t{\n\t\tcout << "找到了" << endl;\n\t}\n\telse\n\t{\n\t\tcout << "未找到" << endl;\n\t}\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("p",[s._v("**总结：**二分查找法查找效率很高，值得注意的是查找的容器中元素必须的有序序列")]),s._v(" "),n("h4",{attrs:{id:"_5-2-5-count"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-5-count"}},[s._v("#")]),s._v(" 5.2.5 count")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("统计元素个数")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("count(iterator beg, iterator end, value);")])]),s._v(" "),n("p",[s._v("// 统计元素出现次数")]),s._v(" "),n("p",[s._v("// beg 开始迭代器")]),s._v(" "),n("p",[s._v("// end 结束迭代器")]),s._v(" "),n("p",[s._v("// value 统计的元素")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <algorithm>\n#include <vector>\n\n//内置数据类型\nvoid test01()\n{\n\tvector<int> v;\n\tv.push_back(1);\n\tv.push_back(2);\n\tv.push_back(4);\n\tv.push_back(5);\n\tv.push_back(3);\n\tv.push_back(4);\n\tv.push_back(4);\n\n\tint num = count(v.begin(), v.end(), 4);\n\n\tcout << "4的个数为： " << num << endl;\n}\n\n//自定义数据类型\nclass Person\n{\npublic:\n\tPerson(string name, int age)\n\t{\n\t\tthis->m_Name = name;\n\t\tthis->m_Age = age;\n\t}\n\tbool operator==(const Person & p)\n\t{\n\t\tif (this->m_Age == p.m_Age)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\tstring m_Name;\n\tint m_Age;\n};\n\nvoid test02()\n{\n\tvector<Person> v;\n\n\tPerson p1("刘备", 35);\n\tPerson p2("关羽", 35);\n\tPerson p3("张飞", 35);\n\tPerson p4("赵云", 30);\n\tPerson p5("曹操", 25);\n\n\tv.push_back(p1);\n\tv.push_back(p2);\n\tv.push_back(p3);\n\tv.push_back(p4);\n\tv.push_back(p5);\n    \n    Person p("诸葛亮",35);\n\n\tint num = count(v.begin(), v.end(), p);\n\tcout << "num = " << num << endl;\n}\nint main() {\n\n\t//test01();\n\n\ttest02();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br")])]),n("p",[n("strong",[s._v("总结：")]),s._v(" 统计自定义数据类型时候，需要配合重载 "),n("code",[s._v("operator==")])]),s._v(" "),n("h4",{attrs:{id:"_5-2-6-count-if"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-6-count-if"}},[s._v("#")]),s._v(" 5.2.6 count_if")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("按条件统计元素个数")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("count_if(iterator beg, iterator end, _Pred);")])]),s._v(" "),n("p",[s._v("// 按条件统计元素出现次数")]),s._v(" "),n("p",[s._v("// beg 开始迭代器")]),s._v(" "),n("p",[s._v("// end 结束迭代器")]),s._v(" "),n("p",[s._v("// _Pred 谓词")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <algorithm>\n#include <vector>\n\nclass Greater4\n{\npublic:\n\tbool operator()(int val)\n\t{\n\t\treturn val >= 4;\n\t}\n};\n\n//内置数据类型\nvoid test01()\n{\n\tvector<int> v;\n\tv.push_back(1);\n\tv.push_back(2);\n\tv.push_back(4);\n\tv.push_back(5);\n\tv.push_back(3);\n\tv.push_back(4);\n\tv.push_back(4);\n\n\tint num = count_if(v.begin(), v.end(), Greater4());\n\n\tcout << "大于4的个数为： " << num << endl;\n}\n\n//自定义数据类型\nclass Person\n{\npublic:\n\tPerson(string name, int age)\n\t{\n\t\tthis->m_Name = name;\n\t\tthis->m_Age = age;\n\t}\n\n\tstring m_Name;\n\tint m_Age;\n};\n\nclass AgeLess35\n{\npublic:\n\tbool operator()(const Person &p)\n\t{\n\t\treturn p.m_Age < 35;\n\t}\n};\nvoid test02()\n{\n\tvector<Person> v;\n\n\tPerson p1("刘备", 35);\n\tPerson p2("关羽", 35);\n\tPerson p3("张飞", 35);\n\tPerson p4("赵云", 30);\n\tPerson p5("曹操", 25);\n\n\tv.push_back(p1);\n\tv.push_back(p2);\n\tv.push_back(p3);\n\tv.push_back(p4);\n\tv.push_back(p5);\n\n\tint num = count_if(v.begin(), v.end(), AgeLess35());\n\tcout << "小于35岁的个数：" << num << endl;\n}\n\n\nint main() {\n\n\t//test01();\n\n\ttest02();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br")])]),n("p",[s._v("**总结：**按值统计用count，按条件统计用count_if")]),s._v(" "),n("h3",{attrs:{id:"_5-3-常用排序算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-常用排序算法"}},[s._v("#")]),s._v(" 5.3 常用排序算法")]),s._v(" "),n("p",[n("strong",[s._v("学习目标：")])]),s._v(" "),n("ul",[n("li",[s._v("掌握常用的排序算法")])]),s._v(" "),n("p",[n("strong",[s._v("算法简介：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("sort")]),s._v("             //对容器内元素进行排序")]),s._v(" "),n("li",[n("code",[s._v("random_shuffle")]),s._v("   //洗牌   指定范围内的元素随机调整次序")]),s._v(" "),n("li",[n("code",[s._v("merge")]),s._v("           // 容器元素合并，并存储到另一容器中")]),s._v(" "),n("li",[n("code",[s._v("reverse")]),s._v("       // 反转指定范围的元素")])]),s._v(" "),n("h4",{attrs:{id:"_5-3-1-sort"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-1-sort"}},[s._v("#")]),s._v(" 5.3.1 sort")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("对容器内元素进行排序")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("sort(iterator beg, iterator end, _Pred);")])]),s._v(" "),n("p",[s._v("// 按值查找元素，找到返回指定位置迭代器，找不到返回结束迭代器位置")]),s._v(" "),n("p",[s._v("//  beg    开始迭代器")]),s._v(" "),n("p",[s._v("//  end    结束迭代器")]),s._v(" "),n("p",[s._v("// _Pred  谓词")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <algorithm>\n#include <vector>\n\nvoid myPrint(int val)\n{\n\tcout << val << " ";\n}\n\nvoid test01() {\n\tvector<int> v;\n\tv.push_back(10);\n\tv.push_back(30);\n\tv.push_back(50);\n\tv.push_back(20);\n\tv.push_back(40);\n\n\t//sort默认从小到大排序\n\tsort(v.begin(), v.end());\n\tfor_each(v.begin(), v.end(), myPrint);\n\tcout << endl;\n\n\t//从大到小排序\n\tsort(v.begin(), v.end(), greater<int>());\n\tfor_each(v.begin(), v.end(), myPrint);\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br")])]),n("p",[s._v("**总结：**sort属于开发中最常用的算法之一，需熟练掌握")]),s._v(" "),n("h4",{attrs:{id:"_5-3-2-random-shuffle"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-2-random-shuffle"}},[s._v("#")]),s._v(" 5.3.2 random_shuffle")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("洗牌   指定范围内的元素随机调整次序")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("random_shuffle(iterator beg, iterator end);")])]),s._v(" "),n("p",[s._v("// 指定范围内的元素随机调整次序")]),s._v(" "),n("p",[s._v("// beg 开始迭代器")]),s._v(" "),n("p",[s._v("// end 结束迭代器")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <algorithm>\n#include <vector>\n#include <ctime>\n\nclass myPrint\n{\npublic:\n\tvoid operator()(int val)\n\t{\n\t\tcout << val << " ";\n\t}\n};\n\nvoid test01()\n{\n\tsrand((unsigned int)time(NULL));\n\tvector<int> v;\n\tfor(int i = 0 ; i < 10;i++)\n\t{\n\t\tv.push_back(i);\n\t}\n\tfor_each(v.begin(), v.end(), myPrint());\n\tcout << endl;\n\n\t//打乱顺序\n\trandom_shuffle(v.begin(), v.end());\n\tfor_each(v.begin(), v.end(), myPrint());\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br")])]),n("p",[s._v("**总结：**random_shuffle洗牌算法比较实用，使用时记得加随机数种子")]),s._v(" "),n("h4",{attrs:{id:"_5-3-3-merge"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-3-merge"}},[s._v("#")]),s._v(" 5.3.3 merge")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("两个容器元素合并，并存储到另一容器中")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("merge(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);")])]),s._v(" "),n("p",[s._v("// 容器元素合并，并存储到另一容器中")]),s._v(" "),n("p",[s._v("// 注意: 两个容器必须是"),n("strong",[s._v("有序的")])]),s._v(" "),n("p",[s._v("// beg1   容器1开始迭代器\n// end1   容器1结束迭代器\n// beg2   容器2开始迭代器\n// end2   容器2结束迭代器\n// dest    目标容器开始迭代器")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <algorithm>\n#include <vector>\n\nclass myPrint\n{\npublic:\n\tvoid operator()(int val)\n\t{\n\t\tcout << val << " ";\n\t}\n};\n\nvoid test01()\n{\n\tvector<int> v1;\n\tvector<int> v2;\n\tfor (int i = 0; i < 10 ; i++) \n    {\n\t\tv1.push_back(i);\n\t\tv2.push_back(i + 1);\n\t}\n\n\tvector<int> vtarget;\n\t//目标容器需要提前开辟空间\n\tvtarget.resize(v1.size() + v2.size());\n\t//合并  需要两个有序序列\n\tmerge(v1.begin(), v1.end(), v2.begin(), v2.end(), vtarget.begin());\n\tfor_each(vtarget.begin(), vtarget.end(), myPrint());\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br")])]),n("p",[s._v("**总结：**merge合并的两个容器必须的有序序列")]),s._v(" "),n("h4",{attrs:{id:"_5-3-4-reverse"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-4-reverse"}},[s._v("#")]),s._v(" 5.3.4 reverse")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("将容器内元素进行反转")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("reverse(iterator beg, iterator end);")])]),s._v(" "),n("p",[s._v("// 反转指定范围的元素")]),s._v(" "),n("p",[s._v("// beg 开始迭代器")]),s._v(" "),n("p",[s._v("// end 结束迭代器")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <algorithm>\n#include <vector>\n\nclass myPrint\n{\npublic:\n\tvoid operator()(int val)\n\t{\n\t\tcout << val << " ";\n\t}\n};\n\nvoid test01()\n{\n\tvector<int> v;\n\tv.push_back(10);\n\tv.push_back(30);\n\tv.push_back(50);\n\tv.push_back(20);\n\tv.push_back(40);\n\n\tcout << "反转前： " << endl;\n\tfor_each(v.begin(), v.end(), myPrint());\n\tcout << endl;\n\n\tcout << "反转后： " << endl;\n\n\treverse(v.begin(), v.end());\n\tfor_each(v.begin(), v.end(), myPrint());\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br")])]),n("p",[s._v("**总结：**reverse反转区间内元素，面试题可能涉及到")]),s._v(" "),n("h3",{attrs:{id:"_5-4-常用拷贝和替换算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-常用拷贝和替换算法"}},[s._v("#")]),s._v(" 5.4 常用拷贝和替换算法")]),s._v(" "),n("p",[n("strong",[s._v("学习目标：")])]),s._v(" "),n("ul",[n("li",[s._v("掌握常用的拷贝和替换算法")])]),s._v(" "),n("p",[n("strong",[s._v("算法简介：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("copy")]),s._v("                      // 容器内指定范围的元素拷贝到另一容器中")]),s._v(" "),n("li",[n("code",[s._v("replace")]),s._v("                // 将容器内指定范围的旧元素修改为新元素")]),s._v(" "),n("li",[n("code",[s._v("replace_if")]),s._v("          // 容器内指定范围满足条件的元素替换为新元素")]),s._v(" "),n("li",[n("code",[s._v("swap")]),s._v("                     // 互换两个容器的元素")])]),s._v(" "),n("h4",{attrs:{id:"_5-4-1-copy"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-1-copy"}},[s._v("#")]),s._v(" 5.4.1 copy")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("容器内指定范围的元素拷贝到另一容器中")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("copy(iterator beg, iterator end, iterator dest);")])]),s._v(" "),n("p",[s._v("// 按值查找元素，找到返回指定位置迭代器，找不到返回结束迭代器位置")]),s._v(" "),n("p",[s._v("// beg  开始迭代器")]),s._v(" "),n("p",[s._v("// end  结束迭代器")]),s._v(" "),n("p",[s._v("// dest 目标起始迭代器")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <algorithm>\n#include <vector>\n\nclass myPrint\n{\npublic:\n\tvoid operator()(int val)\n\t{\n\t\tcout << val << " ";\n\t}\n};\n\nvoid test01()\n{\n\tvector<int> v1;\n\tfor (int i = 0; i < 10; i++) {\n\t\tv1.push_back(i + 1);\n\t}\n\tvector<int> v2;\n\tv2.resize(v1.size());\n\tcopy(v1.begin(), v1.end(), v2.begin());\n\n\tfor_each(v2.begin(), v2.end(), myPrint());\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br")])]),n("p",[s._v("**总结：**利用copy算法在拷贝时，目标容器记得提前开辟空间")]),s._v(" "),n("h4",{attrs:{id:"_5-4-2-replace"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-2-replace"}},[s._v("#")]),s._v(" 5.4.2 replace")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("将容器内指定范围的旧元素修改为新元素")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("replace(iterator beg, iterator end, oldvalue, newvalue);")])]),s._v(" "),n("p",[s._v("// 将区间内旧元素 替换成 新元素")]),s._v(" "),n("p",[s._v("// beg 开始迭代器")]),s._v(" "),n("p",[s._v("// end 结束迭代器")]),s._v(" "),n("p",[s._v("// oldvalue 旧元素")]),s._v(" "),n("p",[s._v("// newvalue 新元素")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <algorithm>\n#include <vector>\n\nclass myPrint\n{\npublic:\n\tvoid operator()(int val)\n\t{\n\t\tcout << val << " ";\n\t}\n};\n\nvoid test01()\n{\n\tvector<int> v;\n\tv.push_back(20);\n\tv.push_back(30);\n\tv.push_back(20);\n\tv.push_back(40);\n\tv.push_back(50);\n\tv.push_back(10);\n\tv.push_back(20);\n\n\tcout << "替换前：" << endl;\n\tfor_each(v.begin(), v.end(), myPrint());\n\tcout << endl;\n\n\t//将容器中的20 替换成 2000\n\tcout << "替换后：" << endl;\n\treplace(v.begin(), v.end(), 20,2000);\n\tfor_each(v.begin(), v.end(), myPrint());\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br")])]),n("p",[s._v("**总结：**replace会替换区间内满足条件的元素")]),s._v(" "),n("h4",{attrs:{id:"_5-4-3-replace-if"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-3-replace-if"}},[s._v("#")]),s._v(" 5.4.3 replace_if")]),s._v(" "),n("p",[n("strong",[s._v("功能描述:")])]),s._v(" "),n("ul",[n("li",[s._v("将区间内满足条件的元素，替换成指定元素")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("replace_if(iterator beg, iterator end, _pred, newvalue);")])]),s._v(" "),n("p",[s._v("// 按条件替换元素，满足条件的替换成指定元素")]),s._v(" "),n("p",[s._v("// beg 开始迭代器")]),s._v(" "),n("p",[s._v("// end 结束迭代器")]),s._v(" "),n("p",[s._v("// _pred 谓词")]),s._v(" "),n("p",[s._v("// newvalue 替换的新元素")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <algorithm>\n#include <vector>\n\nclass myPrint\n{\npublic:\n\tvoid operator()(int val)\n\t{\n\t\tcout << val << " ";\n\t}\n};\n\nclass ReplaceGreater30\n{\npublic:\n\tbool operator()(int val)\n\t{\n\t\treturn val >= 30;\n\t}\n\n};\n\nvoid test01()\n{\n\tvector<int> v;\n\tv.push_back(20);\n\tv.push_back(30);\n\tv.push_back(20);\n\tv.push_back(40);\n\tv.push_back(50);\n\tv.push_back(10);\n\tv.push_back(20);\n\n\tcout << "替换前：" << endl;\n\tfor_each(v.begin(), v.end(), myPrint());\n\tcout << endl;\n\n\t//将容器中大于等于的30 替换成 3000\n\tcout << "替换后：" << endl;\n\treplace_if(v.begin(), v.end(), ReplaceGreater30(), 3000);\n\tfor_each(v.begin(), v.end(), myPrint());\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br")])]),n("p",[s._v("**总结：**replace_if按条件查找，可以利用仿函数灵活筛选满足的条件")]),s._v(" "),n("h4",{attrs:{id:"_5-4-4-swap"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-4-swap"}},[s._v("#")]),s._v(" 5.4.4 swap")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("互换两个容器的元素")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("swap(container c1, container c2);")])]),s._v(" "),n("p",[s._v("// 互换两个容器的元素")]),s._v(" "),n("p",[s._v("// c1容器1")]),s._v(" "),n("p",[s._v("// c2容器2")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <algorithm>\n#include <vector>\n\nclass myPrint\n{\npublic:\n\tvoid operator()(int val)\n\t{\n\t\tcout << val << " ";\n\t}\n};\n\nvoid test01()\n{\n\tvector<int> v1;\n\tvector<int> v2;\n\tfor (int i = 0; i < 10; i++) {\n\t\tv1.push_back(i);\n\t\tv2.push_back(i+100);\n\t}\n\n\tcout << "交换前： " << endl;\n\tfor_each(v1.begin(), v1.end(), myPrint());\n\tcout << endl;\n\tfor_each(v2.begin(), v2.end(), myPrint());\n\tcout << endl;\n\n\tcout << "交换后： " << endl;\n\tswap(v1, v2);\n\tfor_each(v1.begin(), v1.end(), myPrint());\n\tcout << endl;\n\tfor_each(v2.begin(), v2.end(), myPrint());\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br")])]),n("p",[s._v("**总结：**swap交换容器时，注意交换的容器要同种类型")]),s._v(" "),n("h3",{attrs:{id:"_5-5-常用算术生成算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-常用算术生成算法"}},[s._v("#")]),s._v(" 5.5 常用算术生成算法")]),s._v(" "),n("p",[n("strong",[s._v("学习目标：")])]),s._v(" "),n("ul",[n("li",[s._v("掌握常用的算术生成算法")])]),s._v(" "),n("p",[n("strong",[s._v("注意：")])]),s._v(" "),n("ul",[n("li",[s._v("算术生成算法属于小型算法，使用时包含的头文件为 "),n("code",[s._v("#include <numeric>")])])]),s._v(" "),n("p",[n("strong",[s._v("算法简介：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("accumulate")]),s._v("      // 计算容器元素累计总和")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("fill")]),s._v("                 // 向容器中添加元素")])])]),s._v(" "),n("h4",{attrs:{id:"_5-5-1-accumulate"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-1-accumulate"}},[s._v("#")]),s._v(" 5.5.1 accumulate")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("计算区间内 容器元素累计总和")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("accumulate(iterator beg, iterator end, value);")])]),s._v(" "),n("p",[s._v("// 计算容器元素累计总和")]),s._v(" "),n("p",[s._v("// beg 开始迭代器")]),s._v(" "),n("p",[s._v("// end 结束迭代器")]),s._v(" "),n("p",[s._v("// value 起始值")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <numeric>\n#include <vector>\nvoid test01()\n{\n\tvector<int> v;\n\tfor (int i = 0; i <= 100; i++) {\n\t\tv.push_back(i);\n\t}\n\n\tint total = accumulate(v.begin(), v.end(), 0);\n\n\tcout << "total = " << total << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("**总结：**accumulate使用时头文件注意是 numeric，这个算法很实用")]),s._v(" "),n("h4",{attrs:{id:"_5-5-2-fill"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-2-fill"}},[s._v("#")]),s._v(" 5.5.2 fill")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("向容器中填充指定的元素")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("fill(iterator beg, iterator end, value);")])]),s._v(" "),n("p",[s._v("// 向容器中填充元素")]),s._v(" "),n("p",[s._v("// beg 开始迭代器")]),s._v(" "),n("p",[s._v("// end 结束迭代器")]),s._v(" "),n("p",[s._v("// value 填充的值")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <numeric>\n#include <vector>\n#include <algorithm>\n\nclass myPrint\n{\npublic:\n\tvoid operator()(int val)\n\t{\n\t\tcout << val << " ";\n\t}\n};\n\nvoid test01()\n{\n\n\tvector<int> v;\n\tv.resize(10);\n\t//填充\n\tfill(v.begin(), v.end(), 100);\n\n\tfor_each(v.begin(), v.end(), myPrint());\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br")])]),n("p",[s._v("**总结：**利用fill可以将容器区间内元素填充为 指定的值")]),s._v(" "),n("h3",{attrs:{id:"_5-6-常用集合算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-常用集合算法"}},[s._v("#")]),s._v(" 5.6 常用集合算法")]),s._v(" "),n("p",[n("strong",[s._v("学习目标：")])]),s._v(" "),n("ul",[n("li",[s._v("掌握常用的集合算法")])]),s._v(" "),n("p",[n("strong",[s._v("算法简介：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("set_intersection")]),s._v("          // 求两个容器的交集")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("set_union")]),s._v("                       // 求两个容器的并集")])]),s._v(" "),n("li",[n("p",[n("code",[s._v("set_difference")]),s._v("              // 求两个容器的差集")])])]),s._v(" "),n("h4",{attrs:{id:"_5-6-1-set-intersection"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-1-set-intersection"}},[s._v("#")]),s._v(" 5.6.1 set_intersection")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("求两个容器的交集")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("set_intersection(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);")])]),s._v(" "),n("p",[s._v("// 求两个集合的交集")]),s._v(" "),n("p",[s._v("// "),n("strong",[s._v("注意:两个集合必须是有序序列")])]),s._v(" "),n("p",[s._v("// beg1 容器1开始迭代器\n// end1 容器1结束迭代器\n// beg2 容器2开始迭代器\n// end2 容器2结束迭代器\n// dest 目标容器开始迭代器")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <vector>\n#include <algorithm>\n\nclass myPrint\n{\npublic:\n\tvoid operator()(int val)\n\t{\n\t\tcout << val << " ";\n\t}\n};\n\nvoid test01()\n{\n\tvector<int> v1;\n\tvector<int> v2;\n\tfor (int i = 0; i < 10; i++)\n    {\n\t\tv1.push_back(i);\n\t\tv2.push_back(i+5);\n\t}\n\n\tvector<int> vTarget;\n\t//取两个里面较小的值给目标容器开辟空间\n\tvTarget.resize(min(v1.size(), v2.size()));\n\n\t//返回目标容器的最后一个元素的迭代器地址\n\tvector<int>::iterator itEnd = \n        set_intersection(v1.begin(), v1.end(), v2.begin(), v2.end(), vTarget.begin());\n\n\tfor_each(vTarget.begin(), itEnd, myPrint());\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br")])]),n("p",[n("strong",[s._v("总结：")])]),s._v(" "),n("ul",[n("li",[s._v("求交集的两个集合必须的有序序列")]),s._v(" "),n("li",[s._v("目标容器开辟空间需要从"),n("strong",[s._v("两个容器中取小值")])]),s._v(" "),n("li",[s._v("set_intersection返回值既是交集中最后一个元素的位置")])]),s._v(" "),n("h4",{attrs:{id:"_5-6-2-set-union"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-2-set-union"}},[s._v("#")]),s._v(" 5.6.2 set_union")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("求两个集合的并集")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("set_union(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);")])]),s._v(" "),n("p",[s._v("// 求两个集合的并集")]),s._v(" "),n("p",[s._v("// "),n("strong",[s._v("注意:两个集合必须是有序序列")])]),s._v(" "),n("p",[s._v("// beg1 容器1开始迭代器\n// end1 容器1结束迭代器\n// beg2 容器2开始迭代器\n// end2 容器2结束迭代器\n// dest 目标容器开始迭代器")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <vector>\n#include <algorithm>\n\nclass myPrint\n{\npublic:\n\tvoid operator()(int val)\n\t{\n\t\tcout << val << " ";\n\t}\n};\n\nvoid test01()\n{\n\tvector<int> v1;\n\tvector<int> v2;\n\tfor (int i = 0; i < 10; i++) {\n\t\tv1.push_back(i);\n\t\tv2.push_back(i+5);\n\t}\n\n\tvector<int> vTarget;\n\t//取两个容器的和给目标容器开辟空间\n\tvTarget.resize(v1.size() + v2.size());\n\n\t//返回目标容器的最后一个元素的迭代器地址\n\tvector<int>::iterator itEnd = \n        set_union(v1.begin(), v1.end(), v2.begin(), v2.end(), vTarget.begin());\n\n\tfor_each(vTarget.begin(), itEnd, myPrint());\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br")])]),n("p",[n("strong",[s._v("总结：")])]),s._v(" "),n("ul",[n("li",[s._v("求并集的两个集合必须的有序序列")]),s._v(" "),n("li",[s._v("目标容器开辟空间需要"),n("strong",[s._v("两个容器相加")])]),s._v(" "),n("li",[s._v("set_union返回值既是并集中最后一个元素的位置")])]),s._v(" "),n("h4",{attrs:{id:"_5-6-3-set-difference"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-3-set-difference"}},[s._v("#")]),s._v(" 5.6.3  set_difference")]),s._v(" "),n("p",[n("strong",[s._v("功能描述：")])]),s._v(" "),n("ul",[n("li",[s._v("求两个集合的差集")])]),s._v(" "),n("p",[n("strong",[s._v("函数原型：")])]),s._v(" "),n("ul",[n("li",[n("p",[n("code",[s._v("set_difference(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);")])]),s._v(" "),n("p",[s._v("// 求两个集合的差集")]),s._v(" "),n("p",[s._v("// "),n("strong",[s._v("注意:两个集合必须是有序序列")])]),s._v(" "),n("p",[s._v("// beg1 容器1开始迭代器\n// end1 容器1结束迭代器\n// beg2 容器2开始迭代器\n// end2 容器2结束迭代器\n// dest 目标容器开始迭代器")])])]),s._v(" "),n("p",[n("strong",[s._v("示例：")])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <vector>\n#include <algorithm>\n\nclass myPrint\n{\npublic:\n\tvoid operator()(int val)\n\t{\n\t\tcout << val << " ";\n\t}\n};\n\nvoid test01()\n{\n\tvector<int> v1;\n\tvector<int> v2;\n\tfor (int i = 0; i < 10; i++) {\n\t\tv1.push_back(i);\n\t\tv2.push_back(i+5);\n\t}\n\n\tvector<int> vTarget;\n\t//取两个里面较大的值给目标容器开辟空间\n\tvTarget.resize( max(v1.size() , v2.size()));\n\n\t//返回目标容器的最后一个元素的迭代器地址\n\tcout << "v1与v2的差集为： " << endl;\n\tvector<int>::iterator itEnd = \n        set_difference(v1.begin(), v1.end(), v2.begin(), v2.end(), vTarget.begin());\n\tfor_each(vTarget.begin(), itEnd, myPrint());\n\tcout << endl;\n\n\n\tcout << "v2与v1的差集为： " << endl;\n\titEnd = set_difference(v2.begin(), v2.end(), v1.begin(), v1.end(), vTarget.begin());\n\tfor_each(vTarget.begin(), itEnd, myPrint());\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem("pause");\n\n\treturn 0;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br")])]),n("p",[n("strong",[s._v("总结：")])]),s._v(" "),n("ul",[n("li",[s._v("求差集的两个集合必须的有序序列")]),s._v(" "),n("li",[s._v("目标容器开辟空间需要从"),n("strong",[s._v("两个容器取较大值")])]),s._v(" "),n("li",[s._v("set_difference返回值既是差集中最后一个元素的位置")])])])}),[],!1,null,null,null);n.default=e.exports}}]);